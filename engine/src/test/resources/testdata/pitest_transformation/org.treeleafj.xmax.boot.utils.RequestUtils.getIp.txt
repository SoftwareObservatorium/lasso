package de.uni_mannheim.swt.lasso.test;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletRequestWrapper;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.Before;
import org.junit.After;
import org.junit.BeforeClass;
import org.junit.AfterClass;
import static org.hamcrest.CoreMatchers.*;
import static org.hamcrest.Matchers.closeTo;
import static org.hamcrest.Matchers.equalTo;
import java.util.regex.PatternSyntaxException;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpSession;
import java.util.Enumeration;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import java.util.NoSuchElementException;
import java.io.BufferedReader;
import java.util.stream.Stream;
import java.nio.charset.IllegalCharsetNameException;
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import org.junit.BeforeClass;
import org.junit.AfterClass;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.*;
import static org.hamcrest.Matchers.closeTo;
import static org.hamcrest.Matchers.equalTo;

/**
 * Modified and generated by LASSO on Fri Feb 19 00:20:43 UTC 2021
 */
@org.junit.runner.RunWith(de.uni_mannheim.swt.lasso.runner.permutator.runner.CandidateRunner.class)
@de.uni_mannheim.swt.lasso.runner.permutator.runner.CandidateRunner.CandidateAdapter(de.uni_mannheim.swt.lasso.test.RequestUtils_Adapter.class)
@de.uni_mannheim.swt.lasso.runner.permutator.runner.CandidateRunner.PermutatorOptions(stopOnSuccess = true, writeFailed = false)
public class MergedTestSuite {

    @Test(timeout = 4000)
    public void test5_11928630f4da4defa7a76deb41c54f7f() throws Throwable {
        HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
        doReturn(", pro=").when(httpServletRequest0).getHeader(anyString());
        HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
        String string0 = _cut.getIp(httpServletRequestWrapper0);
    }

    @Test(timeout = 4000)
    public void test0_fc89c1ef86524535ba18162fcbf606a3() throws Throwable {
        de.uni_mannheim.swt.lasso.test.RequestUtils_Adapter requestUtils0 = new de.uni_mannheim.swt.lasso.test.RequestUtils_Adapter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "9Tr[\"7G?");
        HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
        doReturn(requestUtils0).when(httpServletRequest0).getAttribute(anyString());
        doReturn("9Tr[\"7G?").when(httpServletRequest0).getRequestURI();
        doReturn(stringBuffer0).when(httpServletRequest0).getRequestURL();
        HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
        // Undeclared exception!
        try {
            _cut.getIp(httpServletRequestWrapper0);
        } catch (ClassCastException e) {
        // 
        // no message in exception (getMessage() returned null)
        // 
        }
    }

    de.uni_mannheim.swt.lasso.test.RequestUtils_Adapter _cut = new de.uni_mannheim.swt.lasso.test.RequestUtils_Adapter();

    static {
        de.uni_mannheim.swt.lasso.runner.security.LassoSecurityManager sm = new de.uni_mannheim.swt.lasso.runner.security.LassoSecurityManager();
        java.lang.System.setSecurityManager(sm);
    }
}
