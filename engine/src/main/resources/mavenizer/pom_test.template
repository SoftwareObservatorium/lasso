<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>${groupId}</groupId>
	<artifactId>${artifactId}</artifactId>
	<version>${version}</version>
	<packaging>jar</packaging>

	<name>LASSO Candidate ${artifactId}</name>
	
   <repositories>
      <repository>
         <id>${repoId}</id>
         <url>${repoUrl}</url>
         <snapshots>
             <enabled>true</enabled>
             <updatePolicy>daily</updatePolicy>
        </snapshots>
        <releases>
            <enabled>true</enabled>
            <updatePolicy>never</updatePolicy>
        </releases>
      </repository>
   </repositories>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <junit.version>4.13.2</junit.version>
		<surefire.plugin.version>3.0.0-M8</surefire.plugin.version>
	</properties>

	<dependencies>
	
		<!-- Dependencies -->
		${dependencies}
	
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		
		<!-- for matchers -->
        <dependency>
           <groupId>org.hamcrest</groupId>
           <artifactId>hamcrest-library</artifactId>
           <version>1.3</version>
        <scope>test</scope>
        </dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<executions>
					<execution>
						<id>default-compile</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
							<source>1.8</source>
							<target>1.8</target>
						</configuration>
					</execution>
					<execution>
						<id>default-testCompile</id>
						<phase>test-compile</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
						<configuration>
							<source>1.8</source>
							<target>1.8</target>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<!-- from https://deors.wordpress.com/2014/07/04/individual-test-coverage-sonarqube-jacoco/ -->
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-surefire-plugin</artifactId>
              <version>${surefire.plugin.version}</version>
              <!-- make sure only JUnit4 Tests run, not TestNG etc. -->
              <dependencies>
                <dependency>
                    <groupId>org.apache.maven.surefire</groupId>
                    <artifactId>surefire-junit47</artifactId>
                    <version>${surefire.plugin.version}</version>
                 </dependency>
              </dependencies>
     		  <configuration>
     		    <!-- use fork JVM for all tests with given memory constraints -->
     		    <forkCount>1</forkCount>
                <reuseForks>true</reuseForks>
                <argLine>-Xmx256m</argLine>
     		    <!-- <dependenciesToScan>
                    <dependency>${dependenciesToScan}</dependency>
                </dependenciesToScan> -->
      			<includes>
                    <include>${includeTests}</include>
                </includes>
     		  </configuration>
   		  </plugin>
   		  <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-dependency-plugin</artifactId>
              <executions>
                  <execution>
                      <id>unpack</id>
                      <phase>process-test-classes</phase>
                      <goals>
                          <goal>unpack</goal>
                      </goals>
                      <configuration>
                          <artifactItems>
                              <artifactItem>
                                  <groupId>${testG}</groupId>
                                  <artifactId>${testA}</artifactId>
                                  <version>${testV}</version>
                                  ${testClassifier}
                                  <overWrite>true</overWrite>
                                    <outputDirectory>
                                        ${project.build.directory}/test-classes
                                    </outputDirectory>
                              </artifactItem>
                          </artifactItems>
                      </configuration>
                  </execution>
              </executions>
          </plugin>
		</plugins>
	</build>
</project>