spring.application.name = lasso-service

## server-related properties
# server port for built-in servlet container
server.port=8899
# webapp context root
server.contextPath=/
# pretty print JSON?
spring.jackson.serialization.INDENT_OUTPUT = false

# Server compression
server.compression.enabled=true
server.compression.min-response-size=2048

# matcher issues
spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER

#### JWT bearer tokens
# secret
security.jwt.token.secret-key=fhehehh3dhwd
# TTL in seconds
security.jwt.token.expire-length=86400

## database
spring.datasource.driverClassName = org.h2.Driver
spring.datasource.name = lasso
spring.datasource.url = jdbc:h2:${lasso.workspace.root}/lasso-db
spring.datasource.username = sa
spring.datasource.password =
spring.jpa.hibernate.ddl-auto = update

# that's ok
spring.datasource.continue-on-error=true

# debugging console
spring.jpa.show-sql=true
spring.h2.console.enabled = true
spring.h2.console.path = /h2-console

##### management options (spring boot actuator)
management.port=8898
management.address=127.0.0.1
management.security.enabled=false
#security.user.name=admin
#security.user.password=mysecret666
#management.security.role=SUPERUSER
#management.context-path=/manage

### GraphQL
spring.graphql.graphiql.enabled = true

## global settings, central work dir, all other dirs are by default sub-located
lasso.workspace.root = ${user.home}/lasso-work

## file upload (LSL scripts)
lasso.file.upload.root = ${lasso.workspace.root}/upload

## docker
thirdparty.docker.uid = 1000
thirdparty.docker.gid = 1000
# private docker registry (avoid enforced limits of Docker Hub)
# swt100 is a reverse proxy (SSL) to Nexus 3
#swt100.informatik.uni-mannheim.de:8443
thirdparty.docker.proxyRegistry = docker.io
# pull timeout in seconds
thirdparty.docker.pullTimeout = 600
# default java maven image
thirdparty.docker.image.default = maven:3.6.3-openjdk-17

## job manager (how many parallel pipeline executions)
pipeline.jobs = 1

## maven configuration
# see https://cwiki.apache.org/confluence/display/MAVEN/Parallel+builds+in+Maven+3
batch.maven.threads = 4
# memory
batch.maven.opts = -Xmx2048m

## users
users=classpath:/users.json
### Executable Corpus
corpus=classpath:/corpus.json

### Models

models.embedding.code2vec = /home/swtlasso/models/target_vecs.txt

## notification mail settings (mail notification)
spring.mail.host = smtp.mail.uni-mannheim.de
spring.mail.port = 25
spring.mail.username = 
spring.mail.password = 
spring.mail.properties.mail.smtp.auth = false
spring.mail.properties.mail.smtp.starttls.enable = false
spring.mail.properties.mail.smtp.starttls.required = false

notification.mail.from = noreply@swt-mkessel.informatik.uni-mannheim.de


############ clustering
cluster.nodeId = node0
cluster.role = master
cluster.ip = 127.0.0.1
cluster.multicast.ip = 228.1.2.5

cluster.failureDetectionTimeoutInSecs = 900
# remote addresses for static configuration
cluster.addresses =

# embedded mode?
cluster.embedded = false

# shuffle implementations to equally distribute load on cluster
cluster.implementations.shuffle = true
cluster.workernodes.shuffle = true

## Threads and jobs
# Threads for local processing of abstractions
master.threadsPerAbstraction = 4
# maximum number of parallel jobs in Ignite.compute()
master.jobs.parallel = 1

# global task timeout in seconds
master.jobs.taskTimeout = 172800

# worker REST API credentials
worker.rest.user = ladmin
worker.rest.password = dj290djfj93f0jd3

### logging endpoint (from logback.xml!)
lasso.logging.file = ${user.home}/lasso-service.log

### intelligence

intelligence.ollama.url = http://127.0.0.1:11434