{"id":"HumanEval_136_largest_smallest_integers","lql":"Problem {\n  largestSmallestIntegers(java.util.ArrayList\u003cjava.lang.Long\u003e)-\u003eorg.javatuples.Pair\u003cjava.util.Optional\u003cjava.lang.Long\u003e, java.util.Optional\u003cjava.lang.Long\u003e\u003e\n}","sequences":[{"id":"Problem","statements":[{"operation":"largestSmallestIntegers","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 2l, (long) 4l, (long) 1l, (long) 3l, (long) 5l, (long) 7l))","value":[2,4,1,3,5,7],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"org.javatuples.Pair.with(java.util.Optional.of(java.util.Optional.empty()), java.util.Optional.of(1l))","value":{"val0":{"value":{}},"val1":{"value":1},"valueArray":[{"value":{}},{"value":1}],"valueList":[{"value":{}},{"value":1}]},"type":"org.javatuples.Pair"}]}]},{"id":"Problem","statements":[{"operation":"largestSmallestIntegers","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 2l, (long) 4l, (long) 1l, (long) 3l, (long) 5l, (long) 7l, (long) 0l))","value":[2,4,1,3,5,7,0],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"org.javatuples.Pair.with(java.util.Optional.of(java.util.Optional.empty()), java.util.Optional.of(1l))","value":{"val0":{"value":{}},"val1":{"value":1},"valueArray":[{"value":{}},{"value":1}],"valueList":[{"value":{}},{"value":1}]},"type":"org.javatuples.Pair"}]}]},{"id":"Problem","statements":[{"operation":"largestSmallestIntegers","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 3l, (long) 2l, (long) 4l, (long) 5l, (long) 6l, (long) -2l))","value":[1,3,2,4,5,6,-2],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"java.util.Optional.of(org.javatuples.Pair.with(-2l, 1l))","value":{"value":{"val0":-2,"val1":1,"valueArray":[-2,1],"valueList":[-2,1]}},"type":"java.util.Optional"}]}]},{"id":"Problem","statements":[{"operation":"largestSmallestIntegers","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 4l, (long) 5l, (long) 3l, (long) 6l, (long) 2l, (long) 7l, (long) -7l))","value":[4,5,3,6,2,7,-7],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"java.util.Optional.of(org.javatuples.Pair.with(-7l, 2l))","value":{"value":{"val0":-7,"val1":2,"valueArray":[-7,2],"valueList":[-7,2]}},"type":"java.util.Optional"}]}]},{"id":"Problem","statements":[{"operation":"largestSmallestIntegers","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 7l, (long) 3l, (long) 8l, (long) 4l, (long) 9l, (long) 2l, (long) 5l, (long) -9l))","value":[7,3,8,4,9,2,5,-9],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"java.util.Optional.of(org.javatuples.Pair.with(-9l, 2l))","value":{"value":{"val0":-9,"val1":2,"valueArray":[-9,2],"valueList":[-9,2]}},"type":"java.util.Optional"}]}]},{"id":"Problem","statements":[{"operation":"largestSmallestIntegers","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList())","value":[],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"org.javatuples.Pair.with(java.util.Optional.of(java.util.Optional.empty()), java.util.Optional.of(java.util.Optional.empty()))","value":{"val0":{"value":{}},"val1":{"value":{}},"valueArray":[{"value":{}},{"value":{}}],"valueList":[{"value":{}},{"value":{}}]},"type":"org.javatuples.Pair"}]}]},{"id":"Problem","statements":[{"operation":"largestSmallestIntegers","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 0l))","value":[0],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"org.javatuples.Pair.with(java.util.Optional.of(java.util.Optional.empty()), java.util.Optional.of(java.util.Optional.empty()))","value":{"val0":{"value":{}},"val1":{"value":{}},"valueArray":[{"value":{}},{"value":{}}],"valueList":[{"value":{}},{"value":{}}]},"type":"org.javatuples.Pair"}]}]},{"id":"Problem","statements":[{"operation":"largestSmallestIntegers","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) -1l, (long) -3l, (long) -5l, (long) -6l))","value":[-1,-3,-5,-6],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"org.javatuples.Pair.with(java.util.Optional.of(-1l), java.util.Optional.of(java.util.Optional.empty()))","value":{"val0":{"value":-1},"val1":{"value":{}},"valueArray":[{"value":-1},{"value":{}}],"valueList":[{"value":-1},{"value":{}}]},"type":"org.javatuples.Pair"}]}]},{"id":"Problem","statements":[{"operation":"largestSmallestIntegers","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) -1l, (long) -3l, (long) -5l, (long) -6l, (long) 0l))","value":[-1,-3,-5,-6,0],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"org.javatuples.Pair.with(java.util.Optional.of(-1l), java.util.Optional.of(java.util.Optional.empty()))","value":{"val0":{"value":-1},"val1":{"value":{}},"valueArray":[{"value":-1},{"value":{}}],"valueList":[{"value":-1},{"value":{}}]},"type":"org.javatuples.Pair"}]}]},{"id":"Problem","statements":[{"operation":"largestSmallestIntegers","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) -6l, (long) -4l, (long) -4l, (long) -3l, (long) 1l))","value":[-6,-4,-4,-3,1],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"java.util.Optional.of(org.javatuples.Pair.with(-3l, 1l))","value":{"value":{"val0":-3,"val1":1,"valueArray":[-3,1],"valueList":[-3,1]}},"type":"java.util.Optional"}]}]},{"id":"Problem","statements":[{"operation":"largestSmallestIntegers","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) -6l, (long) -4l, (long) -4l, (long) -3l, (long) -100l, (long) 1l))","value":[-6,-4,-4,-3,-100,1],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"java.util.Optional.of(org.javatuples.Pair.with(-3l, 1l))","value":{"value":{"val0":-3,"val1":1,"valueArray":[-3,1],"valueList":[-3,1]}},"type":"java.util.Optional"}]}]}],"description":" Create a function that returns a pair (a, b), where \u0027a\u0027 is\n the largest of negative integers, and \u0027b\u0027 is the smallest\n of positive integers in an array array list.\n If there is no negative or positive integers, return them as null.\n Examples:\n \u003e\u003e\u003e largestSmallestIntegers((new ArrayList\u003cLong\u003e(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l, (long)5l, (long)7l))))\n Pair.with(Optional.of(Optional.empty()), Optional.of(1l))\n \u003e\u003e\u003e largestSmallestIntegers((new ArrayList\u003cLong\u003e(Arrays.asList())))\n Pair.with(Optional.of(Optional.empty()), Optional.of(Optional.empty()))\n \u003e\u003e\u003e largestSmallestIntegers((new ArrayList\u003cLong\u003e(Arrays.asList((long)0l))))","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Create a function that returns a pair (a, b), where \u0027a\u0027 is\n    // the largest of negative integers, and \u0027b\u0027 is the smallest\n    // of positive integers in an array array list.\n    // If there is no negative or positive integers, return them as null.\n    // Examples:\n    // \u003e\u003e\u003e largestSmallestIntegers((new ArrayList\u003cLong\u003e(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l, (long)5l, (long)7l))))\n    // Pair.with(Optional.of(Optional.empty()), Optional.of(1l))\n    // \u003e\u003e\u003e largestSmallestIntegers((new ArrayList\u003cLong\u003e(Arrays.asList())))\n    // Pair.with(Optional.of(Optional.empty()), Optional.of(Optional.empty()))\n    // \u003e\u003e\u003e largestSmallestIntegers((new ArrayList\u003cLong\u003e(Arrays.asList((long)0l))))\n    // Pair.with(Optional.of(Optional.empty()), Optional.of(Optional.empty()))\n    public static Pair\u003cOptional\u003cLong\u003e, Optional\u003cLong\u003e\u003e largestSmallestIntegers(ArrayList\u003cLong\u003e lst) {\n"}