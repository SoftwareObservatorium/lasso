{"id":"HumanEval_110_exchange","lql":"Problem {\n  exchange(java.util.ArrayList\u003cjava.lang.Long\u003e,java.util.ArrayList\u003cjava.lang.Long\u003e)-\u003ejava.lang.String\n}","sequences":[{"id":"Problem","statements":[{"operation":"exchange","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 2l, (long) 3l, (long) 4l))","value":[1,2,3,4],"type":"java.util.ArrayList"},{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 2l, (long) 3l, (long) 4l))","value":[1,2,3,4],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"\"YES\"","value":"YES","type":"java.lang.String"}]}]},{"id":"Problem","statements":[{"operation":"exchange","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 2l, (long) 3l, (long) 4l))","value":[1,2,3,4],"type":"java.util.ArrayList"},{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 5l, (long) 3l, (long) 4l))","value":[1,5,3,4],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"\"NO\"","value":"NO","type":"java.lang.String"}]}]},{"id":"Problem","statements":[{"operation":"exchange","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 2l, (long) 3l, (long) 4l))","value":[1,2,3,4],"type":"java.util.ArrayList"},{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 2l, (long) 1l, (long) 4l, (long) 3l))","value":[2,1,4,3],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"\"YES\"","value":"YES","type":"java.lang.String"}]}]},{"id":"Problem","statements":[{"operation":"exchange","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 5l, (long) 7l, (long) 3l))","value":[5,7,3],"type":"java.util.ArrayList"},{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 2l, (long) 6l, (long) 4l))","value":[2,6,4],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"\"YES\"","value":"YES","type":"java.lang.String"}]}]},{"id":"Problem","statements":[{"operation":"exchange","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 5l, (long) 7l, (long) 3l))","value":[5,7,3],"type":"java.util.ArrayList"},{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 2l, (long) 6l, (long) 3l))","value":[2,6,3],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"\"NO\"","value":"NO","type":"java.lang.String"}]}]},{"id":"Problem","statements":[{"operation":"exchange","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 3l, (long) 2l, (long) 6l, (long) 1l, (long) 8l, (long) 9l))","value":[3,2,6,1,8,9],"type":"java.util.ArrayList"},{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 3l, (long) 5l, (long) 5l, (long) 1l, (long) 1l, (long) 1l))","value":[3,5,5,1,1,1],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"\"NO\"","value":"NO","type":"java.lang.String"}]}]},{"id":"Problem","statements":[{"operation":"exchange","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 100l, (long) 200l))","value":[100,200],"type":"java.util.ArrayList"},{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 200l, (long) 200l))","value":[200,200],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"\"YES\"","value":"YES","type":"java.lang.String"}]}]}],"description":" In this problem, you will implement a function that takes two array lists of numbers,\n and determines whether it is possible to perform an exchange of elements\n between them to make lst1 an array array list of only even numbers.\n There is no limit on the number of exchanged elements between lst1 and lst2.\n If it is possible to exchange elements between the lst1 and lst2 to make\n all the elements of lst1 to be even, return \"YES\".\n Otherwise, return \"NO\".\n For example:\n \u003e\u003e\u003e exchange((new ArrayList\u003cLong\u003e(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))), (new ArrayList\u003cLong\u003e(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))))\n (\"YES\")\n \u003e\u003e\u003e exchange((new ArrayList\u003cLong\u003e(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))), (new ArrayList\u003cLong\u003e(Arrays.asList((long)1l, (long)5l, (long)3l, (long)4l))))\n (\"NO\")","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // In this problem, you will implement a function that takes two array lists of numbers,\n    // and determines whether it is possible to perform an exchange of elements\n    // between them to make lst1 an array array list of only even numbers.\n    // There is no limit on the number of exchanged elements between lst1 and lst2.\n    // If it is possible to exchange elements between the lst1 and lst2 to make\n    // all the elements of lst1 to be even, return \"YES\".\n    // Otherwise, return \"NO\".\n    // For example:\n    // \u003e\u003e\u003e exchange((new ArrayList\u003cLong\u003e(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))), (new ArrayList\u003cLong\u003e(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))))\n    // (\"YES\")\n    // \u003e\u003e\u003e exchange((new ArrayList\u003cLong\u003e(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))), (new ArrayList\u003cLong\u003e(Arrays.asList((long)1l, (long)5l, (long)3l, (long)4l))))\n    // (\"NO\")\n    // It is assumed that the input array lists will be non-empty.\n    public static String exchange(ArrayList\u003cLong\u003e lst1, ArrayList\u003cLong\u003e lst2) {\n"}