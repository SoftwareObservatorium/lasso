{"id":"HumanEval_105_by_length","lql":"Problem {\n  byLength(java.util.ArrayList\u003cjava.lang.Long\u003e)-\u003ejava.util.ArrayList\u003cjava.lang.String\u003e\n}","sequences":[{"id":"Problem","statements":[{"operation":"byLength","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 2l, (long) 1l, (long) 1l, (long) 4l, (long) 5l, (long) 8l, (long) 2l, (long) 3l))","value":[2,1,1,4,5,8,2,3],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"Eight\", (String) \"Five\", (String) \"Four\", (String) \"Three\", (String) \"Two\", (String) \"Two\", (String) \"One\", (String) \"One\"))","value":["Eight","Five","Four","Three","Two","Two","One","One"],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"byLength","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList())","value":[],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList())","value":[],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"byLength","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) -1l, (long) 55l))","value":[1,-1,55],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"One\"))","value":["One"],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"byLength","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) -1l, (long) 3l, (long) 2l))","value":[1,-1,3,2],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"Three\", (String) \"Two\", (String) \"One\"))","value":["Three","Two","One"],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"byLength","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 9l, (long) 4l, (long) 8l))","value":[9,4,8],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"Nine\", (String) \"Eight\", (String) \"Four\"))","value":["Nine","Eight","Four"],"type":"java.util.ArrayList"}]}]}],"description":" Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n reverse the resulting array array list, and then replace each digit by its corresponding name from\n \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n For example:\n \u003e\u003e\u003e byLength((new ArrayList\u003cLong\u003e(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n (new ArrayList\u003cString\u003e(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n If the array array list is empty, return an empty array array list:\n \u003e\u003e\u003e byLength((new ArrayList\u003cLong\u003e(Arrays.asList())))\n (new ArrayList\u003cString\u003e(Arrays.asList()))\n If the array array list has any strange number ignore it:\n \u003e\u003e\u003e byLength((new ArrayList\u003cLong\u003e(Arrays.asList((long)1l, (long)-1l, (long)55l))))"}