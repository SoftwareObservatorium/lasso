{"id":"HumanEval_131_digits","lql":"Problem {\n  digits(long)-\u003elong\n}","sequences":[{"id":"Problem","statements":[{"operation":"digits","inputs":[{"code":"5l","value":5,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"5l","value":5,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"digits","inputs":[{"code":"54l","value":54,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"5l","value":5,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"digits","inputs":[{"code":"120l","value":120,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"1l","value":1,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"digits","inputs":[{"code":"5014l","value":5014,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"5l","value":5,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"digits","inputs":[{"code":"98765l","value":98765,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"315l","value":315,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"digits","inputs":[{"code":"5576543l","value":5576543,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"2625l","value":2625,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"digits","inputs":[{"code":"2468l","value":2468,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"0l","value":0,"type":"java.lang.Long"}]}]}],"description":" Given a positive integer n, return the product of the odd digits.\n Return 0 if all digits are even.\n For example:\n \u003e\u003e\u003e digits((1l))\n (1l)\n \u003e\u003e\u003e digits((4l))\n (0l)\n \u003e\u003e\u003e digits((235l))","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a positive integer n, return the product of the odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n    // \u003e\u003e\u003e digits((1l))\n    // (1l)\n    // \u003e\u003e\u003e digits((4l))\n    // (0l)\n    // \u003e\u003e\u003e digits((235l))\n    // (15l)\n    public static long digits(long n) {\n"}