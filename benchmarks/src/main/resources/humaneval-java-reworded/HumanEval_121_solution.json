{"id":"HumanEval_121_solution","lql":"Problem {\n  solution(java.util.ArrayList\u003cjava.lang.Long\u003e)-\u003elong\n}","sequences":[{"id":"Problem","statements":[{"operation":"solution","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 5l, (long) 8l, (long) 7l, (long) 1l))","value":[5,8,7,1],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"12l","value":12,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"solution","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 3l, (long) 3l, (long) 3l, (long) 3l, (long) 3l))","value":[3,3,3,3,3],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"9l","value":9,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"solution","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 30l, (long) 13l, (long) 24l, (long) 321l))","value":[30,13,24,321],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"0l","value":0,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"solution","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 5l, (long) 9l))","value":[5,9],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"5l","value":5,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"solution","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 2l, (long) 4l, (long) 8l))","value":[2,4,8],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"0l","value":0,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"solution","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 30l, (long) 13l, (long) 23l, (long) 32l))","value":[30,13,23,32],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"23l","value":23,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"solution","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 3l, (long) 13l, (long) 2l, (long) 9l))","value":[3,13,2,9],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"3l","value":3,"type":"java.lang.Long"}]}]}],"description":" Given a non-empty array list of integers, return the sum of all of the odd elements that are in even positions.\n Examples\n \u003e\u003e\u003e solution((new ArrayList\u003cLong\u003e(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l))))\n (12l)\n \u003e\u003e\u003e solution((new ArrayList\u003cLong\u003e(Arrays.asList((long)3l, (long)3l, (long)3l, (long)3l, (long)3l))))\n (9l)\n \u003e\u003e\u003e solution((new ArrayList\u003cLong\u003e(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a non-empty array list of integers, return the sum of all of the odd elements that are in even positions.\n    // Examples\n    // \u003e\u003e\u003e solution((new ArrayList\u003cLong\u003e(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l))))\n    // (12l)\n    // \u003e\u003e\u003e solution((new ArrayList\u003cLong\u003e(Arrays.asList((long)3l, (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // \u003e\u003e\u003e solution((new ArrayList\u003cLong\u003e(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n    // (0l)\n    public static long solution(ArrayList\u003cLong\u003e lst) {\n"}