{"id":"HumanEval_130_tri","lql":"Problem {\n  tri(long)-\u003ejava.util.ArrayList\u003cjava.lang.Long\u003e\n}","sequences":[{"id":"Problem","statements":[{"operation":"tri","inputs":[{"code":"3l","value":3,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 3l, (long) 2l, (long) 8l))","value":[1,3,2,8],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"tri","inputs":[{"code":"4l","value":4,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 3l, (long) 2l, (long) 8l, (long) 3l))","value":[1,3,2,8,3],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"tri","inputs":[{"code":"5l","value":5,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 3l, (long) 2l, (long) 8l, (long) 3l, (long) 15l))","value":[1,3,2,8,3,15],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"tri","inputs":[{"code":"6l","value":6,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 3l, (long) 2l, (long) 8l, (long) 3l, (long) 15l, (long) 4l))","value":[1,3,2,8,3,15,4],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"tri","inputs":[{"code":"7l","value":7,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 3l, (long) 2l, (long) 8l, (long) 3l, (long) 15l, (long) 4l, (long) 24l))","value":[1,3,2,8,3,15,4,24],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"tri","inputs":[{"code":"8l","value":8,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 3l, (long) 2l, (long) 8l, (long) 3l, (long) 15l, (long) 4l, (long) 24l, (long) 5l))","value":[1,3,2,8,3,15,4,24,5],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"tri","inputs":[{"code":"9l","value":9,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 3l, (long) 2l, (long) 8l, (long) 3l, (long) 15l, (long) 4l, (long) 24l, (long) 5l, (long) 35l))","value":[1,3,2,8,3,15,4,24,5,35],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"tri","inputs":[{"code":"20l","value":20,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 3l, (long) 2l, (long) 8l, (long) 3l, (long) 15l, (long) 4l, (long) 24l, (long) 5l, (long) 35l, (long) 6l, (long) 48l, (long) 7l, (long) 63l, (long) 8l, (long) 80l, (long) 9l, (long) 99l, (long) 10l, (long) 120l, (long) 11l))","value":[1,3,2,8,3,15,4,24,5,35,6,48,7,63,8,80,9,99,10,120,11],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"tri","inputs":[{"code":"0l","value":0,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l))","value":[1],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"tri","inputs":[{"code":"1l","value":1,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 3l))","value":[1,3],"type":"java.util.ArrayList"}]}]}],"description":" Everyone knows Fibonacci sequence, it was studied deeply by mathematicians in \n the last couple centuries. However, what people don\u0027t know is Tribonacci sequence.\n Tribonacci sequence is defined by the recurrence:\n tri(1) \u003d 3\n tri(n) \u003d 1 + n / 2, if n is even.\n tri(n) \u003d  tri(n - 1) + tri(n - 2) + tri(n + 1), if n is odd.\n For example:\n tri(2) \u003d 1 + (2 / 2) \u003d 2\n tri(4) \u003d 3\n tri(3) \u003d tri(2) + tri(1) + tri(4)\n \u003d 2 + 3 + 3 \u003d 8 \n You are given a non-negative integer number n, you have to a return an array array list of the \n first n + 1 numbers of the Tribonacci sequence.\n Examples:\n \u003e\u003e\u003e tri((3l))","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Everyone knows Fibonacci sequence, it was studied deeply by mathematicians in \n    // the last couple centuries. However, what people don\u0027t know is Tribonacci sequence.\n    // Tribonacci sequence is defined by the recurrence:\n    // tri(1) \u003d 3\n    // tri(n) \u003d 1 + n / 2, if n is even.\n    // tri(n) \u003d  tri(n - 1) + tri(n - 2) + tri(n + 1), if n is odd.\n    // For example:\n    // tri(2) \u003d 1 + (2 / 2) \u003d 2\n    // tri(4) \u003d 3\n    // tri(3) \u003d tri(2) + tri(1) + tri(4)\n    // \u003d 2 + 3 + 3 \u003d 8 \n    // You are given a non-negative integer number n, you have to a return an array array list of the \n    // first n + 1 numbers of the Tribonacci sequence.\n    // Examples:\n    // \u003e\u003e\u003e tri((3l))\n    // (new ArrayList\u003cLong\u003e(Arrays.asList((long)1l, (long)3l, (long)2l, (long)8l)))\n    public static ArrayList\u003cLong\u003e tri(long n) {\n"}