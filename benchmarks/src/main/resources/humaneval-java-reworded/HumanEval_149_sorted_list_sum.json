{"id":"HumanEval_149_sorted_list_sum","lql":"Problem {\n  sortedListSum(java.util.ArrayList\u003cjava.lang.String\u003e)-\u003ejava.util.ArrayList\u003cjava.lang.String\u003e\n}","sequences":[{"id":"Problem","statements":[{"operation":"sortedListSum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"aa\", (String) \"a\", (String) \"aaa\"))","value":["aa","a","aaa"],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"aa\"))","value":["aa"],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"sortedListSum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"school\", (String) \"AI\", (String) \"asdf\", (String) \"b\"))","value":["school","AI","asdf","b"],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"AI\", (String) \"asdf\", (String) \"school\"))","value":["AI","asdf","school"],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"sortedListSum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"d\", (String) \"b\", (String) \"c\", (String) \"a\"))","value":["d","b","c","a"],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList())","value":[],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"sortedListSum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"d\", (String) \"dcba\", (String) \"abcd\", (String) \"a\"))","value":["d","dcba","abcd","a"],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"abcd\", (String) \"dcba\"))","value":["abcd","dcba"],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"sortedListSum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"AI\", (String) \"ai\", (String) \"au\"))","value":["AI","ai","au"],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"AI\", (String) \"ai\", (String) \"au\"))","value":["AI","ai","au"],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"sortedListSum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"a\", (String) \"b\", (String) \"b\", (String) \"c\", (String) \"c\", (String) \"a\"))","value":["a","b","b","c","c","a"],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList())","value":[],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"sortedListSum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"aaaa\", (String) \"bbbb\", (String) \"dd\", (String) \"cc\"))","value":["aaaa","bbbb","dd","cc"],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"cc\", (String) \"dd\", (String) \"aaaa\", (String) \"bbbb\"))","value":["cc","dd","aaaa","bbbb"],"type":"java.util.ArrayList"}]}]}],"description":" Write a function that accepts an array array list of strings as a parameter,\n deletes the strings that have odd lengths from it,\n and returns the resulted array list with a sorted order,\n The array list is always an array array list of strings and never an array array list of numbers,\n and it may contain duplicates.\n The order of the array list should be ascending by length of each word, and you\n should return the array list sorted by that rule.\n If two words have the same length, sort the array list alphabetically.\n The function should return an array array list of strings in sorted order.\n You may assume that all words will have the same length.\n For example:\n \u003e\u003e\u003e listSort((new ArrayList\u003cString\u003e(Arrays.asList((String)\"aa\", (String)\"a\", (String)\"aaa\"))))\n (new ArrayList\u003cString\u003e(Arrays.asList((String)\"aa\")))\n \u003e\u003e\u003e listSort((new ArrayList\u003cString\u003e(Arrays.asList((String)\"ab\", (String)\"a\", (String)\"aaa\", (String)\"cd\"))))","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts an array array list of strings as a parameter,\n    // deletes the strings that have odd lengths from it,\n    // and returns the resulted array list with a sorted order,\n    // The array list is always an array array list of strings and never an array array list of numbers,\n    // and it may contain duplicates.\n    // The order of the array list should be ascending by length of each word, and you\n    // should return the array list sorted by that rule.\n    // If two words have the same length, sort the array list alphabetically.\n    // The function should return an array array list of strings in sorted order.\n    // You may assume that all words will have the same length.\n    // For example:\n    // \u003e\u003e\u003e listSort((new ArrayList\u003cString\u003e(Arrays.asList((String)\"aa\", (String)\"a\", (String)\"aaa\"))))\n    // (new ArrayList\u003cString\u003e(Arrays.asList((String)\"aa\")))\n    // \u003e\u003e\u003e listSort((new ArrayList\u003cString\u003e(Arrays.asList((String)\"ab\", (String)\"a\", (String)\"aaa\", (String)\"cd\"))))\n    // (new ArrayList\u003cString\u003e(Arrays.asList((String)\"ab\", (String)\"cd\")))\n    public static ArrayList\u003cString\u003e sortedListSum(ArrayList\u003cString\u003e lst) {\n"}