{"id":"HumanEval_74_total_match","lql":"Problem {\n  totalMatch(java.util.ArrayList\u003cjava.lang.String\u003e,java.util.ArrayList\u003cjava.lang.String\u003e)-\u003ejava.util.ArrayList\u003cjava.lang.String\u003e\n}","sequences":[{"id":"Problem","statements":[{"operation":"totalMatch","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList())","value":[],"type":"java.util.ArrayList"},{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList())","value":[],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList())","value":[],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"totalMatch","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"hi\", (String) \"admin\"))","value":["hi","admin"],"type":"java.util.ArrayList"},{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"hi\", (String) \"hi\"))","value":["hi","hi"],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"hi\", (String) \"hi\"))","value":["hi","hi"],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"totalMatch","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"hi\", (String) \"admin\"))","value":["hi","admin"],"type":"java.util.ArrayList"},{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"hi\", (String) \"hi\", (String) \"admin\", (String) \"project\"))","value":["hi","hi","admin","project"],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"hi\", (String) \"admin\"))","value":["hi","admin"],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"totalMatch","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"4\"))","value":["4"],"type":"java.util.ArrayList"},{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"1\", (String) \"2\", (String) \"3\", (String) \"4\", (String) \"5\"))","value":["1","2","3","4","5"],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"4\"))","value":["4"],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"totalMatch","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"hi\", (String) \"admin\"))","value":["hi","admin"],"type":"java.util.ArrayList"},{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"hI\", (String) \"Hi\"))","value":["hI","Hi"],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"hI\", (String) \"Hi\"))","value":["hI","Hi"],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"totalMatch","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"hi\", (String) \"admin\"))","value":["hi","admin"],"type":"java.util.ArrayList"},{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"hI\", (String) \"hi\", (String) \"hi\"))","value":["hI","hi","hi"],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"hI\", (String) \"hi\", (String) \"hi\"))","value":["hI","hi","hi"],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"totalMatch","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"hi\", (String) \"admin\"))","value":["hi","admin"],"type":"java.util.ArrayList"},{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"hI\", (String) \"hi\", (String) \"hii\"))","value":["hI","hi","hii"],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"hi\", (String) \"admin\"))","value":["hi","admin"],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"totalMatch","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList())","value":[],"type":"java.util.ArrayList"},{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"this\"))","value":["this"],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList())","value":[],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"totalMatch","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"this\"))","value":["this"],"type":"java.util.ArrayList"},{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList())","value":[],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList())","value":[],"type":"java.util.ArrayList"}]}]}],"description":" Write a function that accepts two array lists of strings and returns the array list that has \n total number of chars in the all strings of the array list less than the other array list.\n if the two array lists have the same number of chars, return the first array list.\n Examples\n \u003e\u003e\u003e totalMatch((new ArrayList\u003cString\u003e(Arrays.asList())), (new ArrayList\u003cString\u003e(Arrays.asList())))\n (new ArrayList\u003cString\u003e(Arrays.asList()))\n \u003e\u003e\u003e totalMatch((new ArrayList\u003cString\u003e(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList\u003cString\u003e(Arrays.asList((String)\"hI\", (String)\"Hi\"))))\n (new ArrayList\u003cString\u003e(Arrays.asList((String)\"hI\", (String)\"Hi\")))\n \u003e\u003e\u003e totalMatch((new ArrayList\u003cString\u003e(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList\u003cString\u003e(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n (new ArrayList\u003cString\u003e(Arrays.asList((String)\"hi\", (String)\"admin\")))\n \u003e\u003e\u003e totalMatch((new ArrayList\u003cString\u003e(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList\u003cString\u003e(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\"))))\n (new ArrayList\u003cString\u003e(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))\n \u003e\u003e\u003e totalMatch((new ArrayList\u003cString\u003e(Arrays.asList((String)\"4\"))), (new ArrayList\u003cString\u003e(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\"))))","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that accepts two array lists of strings and returns the array list that has \n    // total number of chars in the all strings of the array list less than the other array list.\n    // if the two array lists have the same number of chars, return the first array list.\n    // Examples\n    // \u003e\u003e\u003e totalMatch((new ArrayList\u003cString\u003e(Arrays.asList())), (new ArrayList\u003cString\u003e(Arrays.asList())))\n    // (new ArrayList\u003cString\u003e(Arrays.asList()))\n    // \u003e\u003e\u003e totalMatch((new ArrayList\u003cString\u003e(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList\u003cString\u003e(Arrays.asList((String)\"hI\", (String)\"Hi\"))))\n    // (new ArrayList\u003cString\u003e(Arrays.asList((String)\"hI\", (String)\"Hi\")))\n    // \u003e\u003e\u003e totalMatch((new ArrayList\u003cString\u003e(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList\u003cString\u003e(Arrays.asList((String)\"hi\", (String)\"hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList\u003cString\u003e(Arrays.asList((String)\"hi\", (String)\"admin\")))\n    // \u003e\u003e\u003e totalMatch((new ArrayList\u003cString\u003e(Arrays.asList((String)\"hi\", (String)\"admin\"))), (new ArrayList\u003cString\u003e(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList\u003cString\u003e(Arrays.asList((String)\"hI\", (String)\"hi\", (String)\"hi\")))\n    // \u003e\u003e\u003e totalMatch((new ArrayList\u003cString\u003e(Arrays.asList((String)\"4\"))), (new ArrayList\u003cString\u003e(Arrays.asList((String)\"1\", (String)\"2\", (String)\"3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList\u003cString\u003e(Arrays.asList((String)\"4\")))\n    public static ArrayList\u003cString\u003e totalMatch(ArrayList\u003cString\u003e lst1, ArrayList\u003cString\u003e lst2) {\n"}