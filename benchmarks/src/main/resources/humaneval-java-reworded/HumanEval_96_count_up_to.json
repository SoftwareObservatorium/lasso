{"id":"HumanEval_96_count_up_to","lql":"Problem {\n  countUpTo(long)-\u003ejava.util.ArrayList\u003cjava.lang.Long\u003e\n}","sequences":[{"id":"Problem","statements":[{"operation":"countUpTo","inputs":[{"code":"5l","value":5,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 2l, (long) 3l))","value":[2,3],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"countUpTo","inputs":[{"code":"6l","value":6,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 2l, (long) 3l, (long) 5l))","value":[2,3,5],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"countUpTo","inputs":[{"code":"7l","value":7,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 2l, (long) 3l, (long) 5l))","value":[2,3,5],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"countUpTo","inputs":[{"code":"10l","value":10,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 2l, (long) 3l, (long) 5l, (long) 7l))","value":[2,3,5,7],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"countUpTo","inputs":[{"code":"0l","value":0,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList())","value":[],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"countUpTo","inputs":[{"code":"22l","value":22,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 2l, (long) 3l, (long) 5l, (long) 7l, (long) 11l, (long) 13l, (long) 17l, (long) 19l))","value":[2,3,5,7,11,13,17,19],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"countUpTo","inputs":[{"code":"1l","value":1,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList())","value":[],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"countUpTo","inputs":[{"code":"18l","value":18,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 2l, (long) 3l, (long) 5l, (long) 7l, (long) 11l, (long) 13l, (long) 17l))","value":[2,3,5,7,11,13,17],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"countUpTo","inputs":[{"code":"47l","value":47,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 2l, (long) 3l, (long) 5l, (long) 7l, (long) 11l, (long) 13l, (long) 17l, (long) 19l, (long) 23l, (long) 29l, (long) 31l, (long) 37l, (long) 41l, (long) 43l))","value":[2,3,5,7,11,13,17,19,23,29,31,37,41,43],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"countUpTo","inputs":[{"code":"101l","value":101,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 2l, (long) 3l, (long) 5l, (long) 7l, (long) 11l, (long) 13l, (long) 17l, (long) 19l, (long) 23l, (long) 29l, (long) 31l, (long) 37l, (long) 41l, (long) 43l, (long) 47l, (long) 53l, (long) 59l, (long) 61l, (long) 67l, (long) 71l, (long) 73l, (long) 79l, (long) 83l, (long) 89l, (long) 97l))","value":[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97],"type":"java.util.ArrayList"}]}]}],"description":" Implement a function that takes an non-negative integer and returns an array array list of the first n\n integers that are prime numbers and less than n.\n for example:\n \u003e\u003e\u003e countUpTo((5l))\n (new ArrayList\u003cLong\u003e(Arrays.asList((long)2l, (long)3l)))\n \u003e\u003e\u003e countUpTo((11l))\n (new ArrayList\u003cLong\u003e(Arrays.asList((long)2l, (long)3l, (long)5l, (long)7l)))\n \u003e\u003e\u003e countUpTo((0l))\n (new ArrayList\u003cLong\u003e(Arrays.asList()))\n \u003e\u003e\u003e countUpTo((20l))\n (new ArrayList\u003cLong\u003e(Arrays.asList((long)2l, (long)3l, (long)5l, (long)7l, (long)11l, (long)13l, (long)17l, (long)19l)))\n \u003e\u003e\u003e countUpTo((1l))\n (new ArrayList\u003cLong\u003e(Arrays.asList()))\n \u003e\u003e\u003e countUpTo((18l))","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Implement a function that takes an non-negative integer and returns an array array list of the first n\n    // integers that are prime numbers and less than n.\n    // for example:\n    // \u003e\u003e\u003e countUpTo((5l))\n    // (new ArrayList\u003cLong\u003e(Arrays.asList((long)2l, (long)3l)))\n    // \u003e\u003e\u003e countUpTo((11l))\n    // (new ArrayList\u003cLong\u003e(Arrays.asList((long)2l, (long)3l, (long)5l, (long)7l)))\n    // \u003e\u003e\u003e countUpTo((0l))\n    // (new ArrayList\u003cLong\u003e(Arrays.asList()))\n    // \u003e\u003e\u003e countUpTo((20l))\n    // (new ArrayList\u003cLong\u003e(Arrays.asList((long)2l, (long)3l, (long)5l, (long)7l, (long)11l, (long)13l, (long)17l, (long)19l)))\n    // \u003e\u003e\u003e countUpTo((1l))\n    // (new ArrayList\u003cLong\u003e(Arrays.asList()))\n    // \u003e\u003e\u003e countUpTo((18l))\n    // (new ArrayList\u003cLong\u003e(Arrays.asList((long)2l, (long)3l, (long)5l, (long)7l, (long)11l, (long)13l, (long)17l)))\n    public static ArrayList\u003cLong\u003e countUpTo(long n) {\n"}