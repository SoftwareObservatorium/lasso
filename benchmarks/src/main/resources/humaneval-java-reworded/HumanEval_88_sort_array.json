{"id":"HumanEval_88_sort_array","lql":"Problem {\n  sortArray(java.util.ArrayList\u003cjava.lang.Long\u003e)-\u003ejava.util.ArrayList\u003cjava.lang.Long\u003e\n}","sequences":[{"id":"Problem","statements":[{"operation":"sortArray","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList())","value":[],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList())","value":[],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"sortArray","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 5l))","value":[5],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 5l))","value":[5],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"sortArray","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 2l, (long) 4l, (long) 3l, (long) 0l, (long) 1l, (long) 5l))","value":[2,4,3,0,1,5],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 0l, (long) 1l, (long) 2l, (long) 3l, (long) 4l, (long) 5l))","value":[0,1,2,3,4,5],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"sortArray","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 2l, (long) 4l, (long) 3l, (long) 0l, (long) 1l, (long) 5l, (long) 6l))","value":[2,4,3,0,1,5,6],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 6l, (long) 5l, (long) 4l, (long) 3l, (long) 2l, (long) 1l, (long) 0l))","value":[6,5,4,3,2,1,0],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"sortArray","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 2l, (long) 1l))","value":[2,1],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 2l))","value":[1,2],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"sortArray","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 15l, (long) 42l, (long) 87l, (long) 32l, (long) 11l, (long) 0l))","value":[15,42,87,32,11,0],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 0l, (long) 11l, (long) 15l, (long) 32l, (long) 42l, (long) 87l))","value":[0,11,15,32,42,87],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"sortArray","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 21l, (long) 14l, (long) 23l, (long) 11l))","value":[21,14,23,11],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 23l, (long) 21l, (long) 14l, (long) 11l))","value":[23,21,14,11],"type":"java.util.ArrayList"}]}]}],"description":" Given an array array list of non-negative integers, return a cojava of the given array array list after sorting,\n you will sort the given array array list in ascending order if the sum( first index value, last index value) is odd,\n or sort it in descending order if the sum( first index value, last index value) is even.\n Note:\n * don\u0027t change the given array array list.\n Examples:\n \u003e\u003e\u003e sortArray((new ArrayList\u003cLong\u003e(Arrays.asList())))\n (new ArrayList\u003cLong\u003e(Arrays.asList()))\n \u003e\u003e\u003e sortArray((new ArrayList\u003cLong\u003e(Arrays.asList((long)5l))))\n (new ArrayList\u003cLong\u003e(Arrays.asList((long)5l)))\n \u003e\u003e\u003e sortArray((new ArrayList\u003cLong\u003e(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l, (long)5l))))\n (new ArrayList\u003cLong\u003e(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))\n \u003e\u003e\u003e sortArray((new ArrayList\u003cLong\u003e(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l, (long)5l, (long)6l))))"}