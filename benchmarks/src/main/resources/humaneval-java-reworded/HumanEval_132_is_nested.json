{"id":"HumanEval_132_is_nested","lql":"Problem {\n  isNested(java.lang.String)-\u003eboolean\n}","sequences":[{"id":"Problem","statements":[{"operation":"isNested","inputs":[{"code":"\"[[]]\"","value":"[[]]","type":"java.lang.String"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"isNested","inputs":[{"code":"\"[]]]]]]][[[[[]\"","value":"[]]]]]]][[[[[]","type":"java.lang.String"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"isNested","inputs":[{"code":"\"[][]\"","value":"[][]","type":"java.lang.String"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"isNested","inputs":[{"code":"\"[]\"","value":"[]","type":"java.lang.String"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"isNested","inputs":[{"code":"\"[[[[]]]]\"","value":"[[[[]]]]","type":"java.lang.String"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"isNested","inputs":[{"code":"\"[]]]]]]]]]]\"","value":"[]]]]]]]]]]","type":"java.lang.String"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"isNested","inputs":[{"code":"\"[][][[]]\"","value":"[][][[]]","type":"java.lang.String"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"isNested","inputs":[{"code":"\"[[]\"","value":"[[]","type":"java.lang.String"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"isNested","inputs":[{"code":"\"[]]\"","value":"[]]","type":"java.lang.String"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"isNested","inputs":[{"code":"\"[[]][[\"","value":"[[]][[","type":"java.lang.String"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"isNested","inputs":[{"code":"\"[[][]]\"","value":"[[][]]","type":"java.lang.String"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"isNested","inputs":[{"code":"\"\"","value":"","type":"java.lang.String"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"isNested","inputs":[{"code":"\"[[[[[[[[\"","value":"[[[[[[[[","type":"java.lang.String"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"isNested","inputs":[{"code":"\"]]]]]]]]\"","value":"]]]]]]]]","type":"java.lang.String"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]}],"description":" Create a function that takes a string as input which contains only square brackets.\n The function should return true if and only if there is a valid subsequence of brackets \n where at least one bracket in the subsequence is nested.\n \u003e\u003e\u003e isNested((\"[[]]\"))\n (true)\n \u003e\u003e\u003e isNested((\"[]]]]]]][[[[[]\"))\n (false)\n \u003e\u003e\u003e isNested((\"[][]\"))\n (false)\n \u003e\u003e\u003e isNested((\"[]\"))\n (false)\n \u003e\u003e\u003e isNested((\"[[][]]\"))\n (true)\n \u003e\u003e\u003e isNested((\"[[]][[\"))","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Create a function that takes a string as input which contains only square brackets.\n    // The function should return true if and only if there is a valid subsequence of brackets \n    // where at least one bracket in the subsequence is nested.\n    // \u003e\u003e\u003e isNested((\"[[]]\"))\n    // (true)\n    // \u003e\u003e\u003e isNested((\"[]]]]]]][[[[[]\"))\n    // (false)\n    // \u003e\u003e\u003e isNested((\"[][]\"))\n    // (false)\n    // \u003e\u003e\u003e isNested((\"[]\"))\n    // (false)\n    // \u003e\u003e\u003e isNested((\"[[][]]\"))\n    // (true)\n    // \u003e\u003e\u003e isNested((\"[[]][[\"))\n    // (true)\n    public static boolean isNested(String string) {\n"}