{"id":"HumanEval_18_how_many_times","lql":"Problem {\n  howManyTimes(java.lang.String,java.lang.String)-\u003elong\n}","sequences":[{"id":"Problem","statements":[{"operation":"howManyTimes","inputs":[{"code":"\"\"","value":"","type":"java.lang.String"},{"code":"\"x\"","value":"x","type":"java.lang.String"}],"expectedOutputs":[{"code":"0l","value":0,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"howManyTimes","inputs":[{"code":"\"xyxyxyx\"","value":"xyxyxyx","type":"java.lang.String"},{"code":"\"x\"","value":"x","type":"java.lang.String"}],"expectedOutputs":[{"code":"4l","value":4,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"howManyTimes","inputs":[{"code":"\"cacacacac\"","value":"cacacacac","type":"java.lang.String"},{"code":"\"cac\"","value":"cac","type":"java.lang.String"}],"expectedOutputs":[{"code":"4l","value":4,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"howManyTimes","inputs":[{"code":"\"john doe\"","value":"john doe","type":"java.lang.String"},{"code":"\"john\"","value":"john","type":"java.lang.String"}],"expectedOutputs":[{"code":"1l","value":1,"type":"java.lang.Long"}]}]}],"description":" Find how many times a given substring can be found in the original string. Count overlaping cases.\n \u003e\u003e\u003e howManyTimes((\"\"), (\"a\"))\n (0l)\n \u003e\u003e\u003e howManyTimes((\"aaa\"), (\"a\"))\n (3l)\n \u003e\u003e\u003e howManyTimes((\"aaaa\"), (\"aa\"))","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Find how many times a given substring can be found in the original string. Count overlaping cases.\n    // \u003e\u003e\u003e howManyTimes((\"\"), (\"a\"))\n    // (0l)\n    // \u003e\u003e\u003e howManyTimes((\"aaa\"), (\"a\"))\n    // (3l)\n    // \u003e\u003e\u003e howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public static long howManyTimes(String string, String substring) {\n"}