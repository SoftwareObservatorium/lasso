{"id":"HumanEval_160_do_algebra","lql":"Problem {\n  doAlgebra(java.util.ArrayList\u003cjava.lang.String\u003e,java.util.ArrayList\u003cjava.lang.Long\u003e)-\u003elong\n}","sequences":[{"id":"Problem","statements":[{"operation":"doAlgebra","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"**\", (String) \"*\", (String) \"+\"))","value":["**","*","+"],"type":"java.util.ArrayList"},{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 2l, (long) 3l, (long) 4l, (long) 5l))","value":[2,3,4,5],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"37l","value":37,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"doAlgebra","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"+\", (String) \"*\", (String) \"-\"))","value":["+","*","-"],"type":"java.util.ArrayList"},{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 2l, (long) 3l, (long) 4l, (long) 5l))","value":[2,3,4,5],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"9l","value":9,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"doAlgebra","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"//\", (String) \"*\"))","value":["//","*"],"type":"java.util.ArrayList"},{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 7l, (long) 3l, (long) 4l))","value":[7,3,4],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"8l","value":8,"type":"java.lang.Long"}]}]}],"description":" Given two array lists operator, and operand. The first array list has basic algebra operations, and \n the second array list is an array array list of integers. Use the two given array lists to build the algebric \n expression and return the evaluation of this expression.\n The basic algebra operations:\n Addition ( + ) \n Subtraction ( - ) \n Multiplication ( * ) \n Floor division (  ) \n Exponentiation ( ** ) \n Example:\n operator[\u0027+\u0027, \u0027*\u0027, \u0027-\u0027]\n array array list \u003d [2, 3, 4, 5]\n result \u003d 2 + 3 * 4 - 5\n \u003d\u003e result \u003d 9\n Note:\n The length of operator array list is equal to the length of operand array list minus one.\n Operand is an array array list of of non-negative integers.","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given two array lists operator, and operand. The first array list has basic algebra operations, and \n    // the second array list is an array array list of integers. Use the two given array lists to build the algebric \n    // expression and return the evaluation of this expression.\n    // The basic algebra operations:\n    // Addition ( + ) \n    // Subtraction ( - ) \n    // Multiplication ( * ) \n    // Floor division ( // ) \n    // Exponentiation ( ** ) \n    // Example:\n    // operator[\u0027+\u0027, \u0027*\u0027, \u0027-\u0027]\n    // array array list \u003d [2, 3, 4, 5]\n    // result \u003d 2 + 3 * 4 - 5\n    // \u003d\u003e result \u003d 9\n    // Note:\n    // The length of operator array list is equal to the length of operand array list minus one.\n    // Operand is an array array list of of non-negative integers.\n    // Operator array list has at least one operator, and operand array list has at least two operands.\n    public static long doAlgebra(ArrayList\u003cString\u003e op, ArrayList\u003cLong\u003e operand) {\n"}