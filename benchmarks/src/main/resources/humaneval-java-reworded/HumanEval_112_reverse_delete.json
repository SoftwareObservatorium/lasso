{"id":"HumanEval_112_reverse_delete","lql":"Problem {\n  reverseDelete(java.lang.String,java.lang.String)-\u003eorg.javatuples.Pair\u003cjava.lang.String, java.lang.Boolean\u003e\n}","sequences":[{"id":"Problem","statements":[{"operation":"reverseDelete","inputs":[{"code":"\"abcde\"","value":"abcde","type":"java.lang.String"},{"code":"\"ae\"","value":"ae","type":"java.lang.String"}],"expectedOutputs":[{"code":"org.javatuples.Pair.with(\"bcd\", false)","value":{"val0":"bcd","val1":false,"valueArray":["bcd",false],"valueList":["bcd",false]},"type":"org.javatuples.Pair"}]}]},{"id":"Problem","statements":[{"operation":"reverseDelete","inputs":[{"code":"\"abcdef\"","value":"abcdef","type":"java.lang.String"},{"code":"\"b\"","value":"b","type":"java.lang.String"}],"expectedOutputs":[{"code":"org.javatuples.Pair.with(\"acdef\", false)","value":{"val0":"acdef","val1":false,"valueArray":["acdef",false],"valueList":["acdef",false]},"type":"org.javatuples.Pair"}]}]},{"id":"Problem","statements":[{"operation":"reverseDelete","inputs":[{"code":"\"abcdedcba\"","value":"abcdedcba","type":"java.lang.String"},{"code":"\"ab\"","value":"ab","type":"java.lang.String"}],"expectedOutputs":[{"code":"org.javatuples.Pair.with(\"cdedc\", true)","value":{"val0":"cdedc","val1":true,"valueArray":["cdedc",true],"valueList":["cdedc",true]},"type":"org.javatuples.Pair"}]}]},{"id":"Problem","statements":[{"operation":"reverseDelete","inputs":[{"code":"\"dwik\"","value":"dwik","type":"java.lang.String"},{"code":"\"w\"","value":"w","type":"java.lang.String"}],"expectedOutputs":[{"code":"org.javatuples.Pair.with(\"dik\", false)","value":{"val0":"dik","val1":false,"valueArray":["dik",false],"valueList":["dik",false]},"type":"org.javatuples.Pair"}]}]},{"id":"Problem","statements":[{"operation":"reverseDelete","inputs":[{"code":"\"a\"","value":"a","type":"java.lang.String"},{"code":"\"a\"","value":"a","type":"java.lang.String"}],"expectedOutputs":[{"code":"org.javatuples.Pair.with(\"\", true)","value":{"val0":"","val1":true,"valueArray":["",true],"valueList":["",true]},"type":"org.javatuples.Pair"}]}]},{"id":"Problem","statements":[{"operation":"reverseDelete","inputs":[{"code":"\"abcdedcba\"","value":"abcdedcba","type":"java.lang.String"},{"code":"\"\"","value":"","type":"java.lang.String"}],"expectedOutputs":[{"code":"org.javatuples.Pair.with(\"abcdedcba\", true)","value":{"val0":"abcdedcba","val1":true,"valueArray":["abcdedcba",true],"valueList":["abcdedcba",true]},"type":"org.javatuples.Pair"}]}]},{"id":"Problem","statements":[{"operation":"reverseDelete","inputs":[{"code":"\"abcdedcba\"","value":"abcdedcba","type":"java.lang.String"},{"code":"\"v\"","value":"v","type":"java.lang.String"}],"expectedOutputs":[{"code":"org.javatuples.Pair.with(\"abcdedcba\", true)","value":{"val0":"abcdedcba","val1":true,"valueArray":["abcdedcba",true],"valueList":["abcdedcba",true]},"type":"org.javatuples.Pair"}]}]},{"id":"Problem","statements":[{"operation":"reverseDelete","inputs":[{"code":"\"vabba\"","value":"vabba","type":"java.lang.String"},{"code":"\"v\"","value":"v","type":"java.lang.String"}],"expectedOutputs":[{"code":"org.javatuples.Pair.with(\"abba\", true)","value":{"val0":"abba","val1":true,"valueArray":["abba",true],"valueList":["abba",true]},"type":"org.javatuples.Pair"}]}]},{"id":"Problem","statements":[{"operation":"reverseDelete","inputs":[{"code":"\"mamma\"","value":"mamma","type":"java.lang.String"},{"code":"\"mia\"","value":"mia","type":"java.lang.String"}],"expectedOutputs":[{"code":"org.javatuples.Pair.with(\"\", true)","value":{"val0":"","val1":true,"valueArray":["",true],"valueList":["",true]},"type":"org.javatuples.Pair"}]}]}],"description":" Task\n We are given two strings s and c, you have to deleted all the characters in s that are equal to any character in c\n then check if the result string is palindrome.\n A string is called palindrome if it reads the same backward as forward.\n You should return a pair containing the result string and true/false for the check.\n Example\n \u003e\u003e\u003e reverseDelete((\"abcde\"), (\"ae\"))\n (Pair.with(\"bcd\", false))\n \u003e\u003e\u003e reverseDelete((\"abcdef\"), (\"b\"))\n (Pair.with(\"acdef\", false))\n \u003e\u003e\u003e reverseDelete((\"abcdedcba\"), (\"ab\"))"}