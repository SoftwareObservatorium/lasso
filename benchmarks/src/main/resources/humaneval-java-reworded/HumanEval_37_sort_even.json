{"id":"HumanEval_37_sort_even","lql":"Problem {\n  sortEven(java.util.ArrayList\u003cjava.lang.Long\u003e)-\u003ejava.util.ArrayList\u003cjava.lang.Long\u003e\n}","sequences":[{"id":"Problem","statements":[{"operation":"sortEven","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 2l, (long) 3l))","value":[1,2,3],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 2l, (long) 3l))","value":[1,2,3],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"sortEven","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 5l, (long) 3l, (long) -5l, (long) 2l, (long) -3l, (long) 3l, (long) 9l, (long) 0l, (long) 123l, (long) 1l, (long) -10l))","value":[5,3,-5,2,-3,3,9,0,123,1,-10],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) -10l, (long) 3l, (long) -5l, (long) 2l, (long) -3l, (long) 3l, (long) 5l, (long) 0l, (long) 9l, (long) 1l, (long) 123l))","value":[-10,3,-5,2,-3,3,5,0,9,1,123],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"sortEven","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 5l, (long) 8l, (long) -12l, (long) 4l, (long) 23l, (long) 2l, (long) 3l, (long) 11l, (long) 12l, (long) -10l))","value":[5,8,-12,4,23,2,3,11,12,-10],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) -12l, (long) 8l, (long) 3l, (long) 4l, (long) 5l, (long) 2l, (long) 12l, (long) 11l, (long) 23l, (long) -10l))","value":[-12,8,3,4,5,2,12,11,23,-10],"type":"java.util.ArrayList"}]}]}],"description":" This function takes an array array list l and returns an array array list l\u0027 such that\n l\u0027 is identical to l in the odd indicies, while its values at the even indicies are equal\n to the values of the even indicies of l, but sorted.\n \u003e\u003e\u003e sortEven((new ArrayList\u003cLong\u003e(Arrays.asList((long)1l, (long)2l, (long)3l))))\n (new ArrayList\u003cLong\u003e(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \u003e\u003e\u003e sortEven((new ArrayList\u003cLong\u003e(Arrays.asList((long)5l, (long)6l, (long)3l, (long)4l))))","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // This function takes an array array list l and returns an array array list l\u0027 such that\n    // l\u0027 is identical to l in the odd indicies, while its values at the even indicies are equal\n    // to the values of the even indicies of l, but sorted.\n    // \u003e\u003e\u003e sortEven((new ArrayList\u003cLong\u003e(Arrays.asList((long)1l, (long)2l, (long)3l))))\n    // (new ArrayList\u003cLong\u003e(Arrays.asList((long)1l, (long)2l, (long)3l)))\n    // \u003e\u003e\u003e sortEven((new ArrayList\u003cLong\u003e(Arrays.asList((long)5l, (long)6l, (long)3l, (long)4l))))\n    // (new ArrayList\u003cLong\u003e(Arrays.asList((long)3l, (long)6l, (long)5l, (long)4l)))\n    public static ArrayList\u003cLong\u003e sortEven(ArrayList\u003cLong\u003e l) {\n"}