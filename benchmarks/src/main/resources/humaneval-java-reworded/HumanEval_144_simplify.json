{"id":"HumanEval_144_simplify","lql":"Problem {\n  simplify(java.lang.String,java.lang.String)-\u003eboolean\n}","sequences":[{"id":"Problem","statements":[{"operation":"simplify","inputs":[{"code":"\"1/5\"","value":"1/5","type":"java.lang.String"},{"code":"\"5/1\"","value":"5/1","type":"java.lang.String"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"simplify","inputs":[{"code":"\"1/6\"","value":"1/6","type":"java.lang.String"},{"code":"\"2/1\"","value":"2/1","type":"java.lang.String"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"simplify","inputs":[{"code":"\"5/1\"","value":"5/1","type":"java.lang.String"},{"code":"\"3/1\"","value":"3/1","type":"java.lang.String"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"simplify","inputs":[{"code":"\"7/10\"","value":"7/10","type":"java.lang.String"},{"code":"\"10/2\"","value":"10/2","type":"java.lang.String"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"simplify","inputs":[{"code":"\"2/10\"","value":"2/10","type":"java.lang.String"},{"code":"\"50/10\"","value":"50/10","type":"java.lang.String"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"simplify","inputs":[{"code":"\"7/2\"","value":"7/2","type":"java.lang.String"},{"code":"\"4/2\"","value":"4/2","type":"java.lang.String"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"simplify","inputs":[{"code":"\"11/6\"","value":"11/6","type":"java.lang.String"},{"code":"\"6/1\"","value":"6/1","type":"java.lang.String"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"simplify","inputs":[{"code":"\"2/3\"","value":"2/3","type":"java.lang.String"},{"code":"\"5/2\"","value":"5/2","type":"java.lang.String"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"simplify","inputs":[{"code":"\"5/2\"","value":"5/2","type":"java.lang.String"},{"code":"\"3/5\"","value":"3/5","type":"java.lang.String"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"simplify","inputs":[{"code":"\"2/4\"","value":"2/4","type":"java.lang.String"},{"code":"\"8/4\"","value":"8/4","type":"java.lang.String"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"simplify","inputs":[{"code":"\"2/4\"","value":"2/4","type":"java.lang.String"},{"code":"\"4/2\"","value":"4/2","type":"java.lang.String"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"simplify","inputs":[{"code":"\"1/5\"","value":"1/5","type":"java.lang.String"},{"code":"\"5/1\"","value":"5/1","type":"java.lang.String"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"simplify","inputs":[{"code":"\"1/5\"","value":"1/5","type":"java.lang.String"},{"code":"\"1/5\"","value":"1/5","type":"java.lang.String"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]}],"description":" Your task is to implement a function that will simplify the expression\n x * n. The function returns true if x * n evaluates to a whole number and false\n otherwise. Both x and n, are string representation of a fraction, and have the following format,\n \u003cnumerator\u003e/\u003cdenominator\u003e where both numerator and denominator are positive whole numbers.\n You can assume that x, and n are valid fractions, and do not have zero as denominator.\n \u003e\u003e\u003e simplify((\"1/5\"), (\"5/1\"))\n (true)\n \u003e\u003e\u003e simplify((\"1/6\"), (\"2/1\"))\n (false)\n \u003e\u003e\u003e simplify((\"7/10\"), (\"10/2\"))"}