{"id":"HumanEval_120_maximum","lql":"Problem {\n  maximum(java.util.ArrayList\u003cjava.lang.Long\u003e,long)-\u003ejava.util.ArrayList\u003cjava.lang.Long\u003e\n}","sequences":[{"id":"Problem","statements":[{"operation":"maximum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) -3l, (long) -4l, (long) 5l))","value":[-3,-4,5],"type":"java.util.ArrayList"},{"code":"3l","value":3,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) -4l, (long) -3l, (long) 5l))","value":[-4,-3,5],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"maximum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 4l, (long) -4l, (long) 4l))","value":[4,-4,4],"type":"java.util.ArrayList"},{"code":"2l","value":2,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 4l, (long) 4l))","value":[4,4],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"maximum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) -3l, (long) 2l, (long) 1l, (long) 2l, (long) -1l, (long) -2l, (long) 1l))","value":[-3,2,1,2,-1,-2,1],"type":"java.util.ArrayList"},{"code":"1l","value":1,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 2l))","value":[2],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"maximum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 123l, (long) -123l, (long) 20l, (long) 0l, (long) 1l, (long) 2l, (long) -3l))","value":[123,-123,20,0,1,2,-3],"type":"java.util.ArrayList"},{"code":"3l","value":3,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 2l, (long) 20l, (long) 123l))","value":[2,20,123],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"maximum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) -123l, (long) 20l, (long) 0l, (long) 1l, (long) 2l, (long) -3l))","value":[-123,20,0,1,2,-3],"type":"java.util.ArrayList"},{"code":"4l","value":4,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 0l, (long) 1l, (long) 2l, (long) 20l))","value":[0,1,2,20],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"maximum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 5l, (long) 15l, (long) 0l, (long) 3l, (long) -13l, (long) -8l, (long) 0l))","value":[5,15,0,3,-13,-8,0],"type":"java.util.ArrayList"},{"code":"7l","value":7,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) -13l, (long) -8l, (long) 0l, (long) 0l, (long) 3l, (long) 5l, (long) 15l))","value":[-13,-8,0,0,3,5,15],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"maximum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) -1l, (long) 0l, (long) 2l, (long) 5l, (long) 3l, (long) -10l))","value":[-1,0,2,5,3,-10],"type":"java.util.ArrayList"},{"code":"2l","value":2,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 3l, (long) 5l))","value":[3,5],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"maximum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 0l, (long) 5l, (long) -7l))","value":[1,0,5,-7],"type":"java.util.ArrayList"},{"code":"1l","value":1,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 5l))","value":[5],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"maximum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 4l, (long) -4l))","value":[4,-4],"type":"java.util.ArrayList"},{"code":"2l","value":2,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) -4l, (long) 4l))","value":[-4,4],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"maximum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) -10l, (long) 10l))","value":[-10,10],"type":"java.util.ArrayList"},{"code":"2l","value":2,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) -10l, (long) 10l))","value":[-10,10],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"maximum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 2l, (long) 3l, (long) -23l, (long) 243l, (long) -400l, (long) 0l))","value":[1,2,3,-23,243,-400,0],"type":"java.util.ArrayList"},{"code":"0l","value":0,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList())","value":[],"type":"java.util.ArrayList"}]}]}],"description":" Given an array array list arr of integers and a positive integer k, return a sorted array list \n of length k with the maximum k numbers in arr.\n Example 1:\n \u003e\u003e\u003e maximum((new ArrayList\u003cLong\u003e(Arrays.asList((long)-3l, (long)-4l, (long)5l))), (3l))\n (new ArrayList\u003cLong\u003e(Arrays.asList((long)-4l, (long)-3l, (long)5l)))\n Example 2:\n \u003e\u003e\u003e maximum((new ArrayList\u003cLong\u003e(Arrays.asList((long)4l, (long)-4l, (long)4l))), (2l))\n (new ArrayList\u003cLong\u003e(Arrays.asList((long)4l, (long)4l)))\n Example 3:\n \u003e\u003e\u003e maximum((new ArrayList\u003cLong\u003e(Arrays.asList((long)-3l, (long)2l, (long)1l, (long)2l, (long)-1l, (long)-2l, (long)1l))), (1l))\n (new ArrayList\u003cLong\u003e(Arrays.asList((long)2l)))\n Note:\n 1. The length of the array array list will be in the range of [1, 1000].\n 2. The elements in the array array list will be in the range of [-1000, 1000]."}