{"id":"HumanEval_57_monotonic","lql":"Problem {\n  monotonic(java.util.ArrayList\u003cjava.lang.Long\u003e)-\u003eboolean\n}","sequences":[{"id":"Problem","statements":[{"operation":"monotonic","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 2l, (long) 4l, (long) 10l))","value":[1,2,4,10],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"monotonic","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 2l, (long) 4l, (long) 20l))","value":[1,2,4,20],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"monotonic","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 20l, (long) 4l, (long) 10l))","value":[1,20,4,10],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"monotonic","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 4l, (long) 1l, (long) 0l, (long) -10l))","value":[4,1,0,-10],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"monotonic","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 4l, (long) 1l, (long) 1l, (long) 0l))","value":[4,1,1,0],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"monotonic","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 2l, (long) 3l, (long) 2l, (long) 5l, (long) 60l))","value":[1,2,3,2,5,60],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"monotonic","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 2l, (long) 3l, (long) 4l, (long) 5l, (long) 60l))","value":[1,2,3,4,5,60],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"monotonic","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 9l, (long) 9l, (long) 9l, (long) 9l))","value":[9,9,9,9],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]}],"description":" Return true is array list elements are monotonically increasing or decreasing.\n \u003e\u003e\u003e monotonic((new ArrayList\u003cLong\u003e(Arrays.asList((long)1l, (long)2l, (long)4l, (long)20l))))\n (true)\n \u003e\u003e\u003e monotonic((new ArrayList\u003cLong\u003e(Arrays.asList((long)1l, (long)20l, (long)4l, (long)10l))))\n (false)\n \u003e\u003e\u003e monotonic((new ArrayList\u003cLong\u003e(Arrays.asList((long)4l, (long)1l, (long)0l, (long)-10l))))"}