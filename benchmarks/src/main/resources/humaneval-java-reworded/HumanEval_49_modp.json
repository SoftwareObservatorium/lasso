{"id":"HumanEval_49_modp","lql":"Problem {\n  modp(long,long)-\u003elong\n}","sequences":[{"id":"Problem","statements":[{"operation":"modp","inputs":[{"code":"3l","value":3,"type":"java.lang.Long"},{"code":"5l","value":5,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"3l","value":3,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"modp","inputs":[{"code":"1101l","value":1101,"type":"java.lang.Long"},{"code":"101l","value":101,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"2l","value":2,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"modp","inputs":[{"code":"0l","value":0,"type":"java.lang.Long"},{"code":"101l","value":101,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"1l","value":1,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"modp","inputs":[{"code":"3l","value":3,"type":"java.lang.Long"},{"code":"11l","value":11,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"8l","value":8,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"modp","inputs":[{"code":"100l","value":100,"type":"java.lang.Long"},{"code":"101l","value":101,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"1l","value":1,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"modp","inputs":[{"code":"30l","value":30,"type":"java.lang.Long"},{"code":"5l","value":5,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"4l","value":4,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"modp","inputs":[{"code":"31l","value":31,"type":"java.lang.Long"},{"code":"5l","value":5,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"3l","value":3,"type":"java.lang.Long"}]}]}],"description":" Return 2^n modulo p (be aware of numerics).\n \u003e\u003e\u003e modp((3l), (5l))\n (3l)\n \u003e\u003e\u003e modp((1101l), (101l))\n (2l)\n \u003e\u003e\u003e modp((0l), (101l))\n (1l)\n \u003e\u003e\u003e modp((3l), (11l))\n (8l)\n \u003e\u003e\u003e modp((100l), (101l))","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // \u003e\u003e\u003e modp((3l), (5l))\n    // (3l)\n    // \u003e\u003e\u003e modp((1101l), (101l))\n    // (2l)\n    // \u003e\u003e\u003e modp((0l), (101l))\n    // (1l)\n    // \u003e\u003e\u003e modp((3l), (11l))\n    // (8l)\n    // \u003e\u003e\u003e modp((100l), (101l))\n    // (1l)\n    public static long modp(long n, long p) {\n"}