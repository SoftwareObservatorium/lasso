{"id":"HumanEval_10_make_palindrome","lql":"Problem {\n  makePalindrome(java.lang.String)-\u003ejava.lang.String\n}","sequences":[{"id":"Problem","statements":[{"operation":"makePalindrome","inputs":[{"code":"\"\"","value":"","type":"java.lang.String"}],"expectedOutputs":[{"code":"\"\"","value":"","type":"java.lang.String"}]}]},{"id":"Problem","statements":[{"operation":"makePalindrome","inputs":[{"code":"\"x\"","value":"x","type":"java.lang.String"}],"expectedOutputs":[{"code":"\"x\"","value":"x","type":"java.lang.String"}]}]},{"id":"Problem","statements":[{"operation":"makePalindrome","inputs":[{"code":"\"xyz\"","value":"xyz","type":"java.lang.String"}],"expectedOutputs":[{"code":"\"xyzyx\"","value":"xyzyx","type":"java.lang.String"}]}]},{"id":"Problem","statements":[{"operation":"makePalindrome","inputs":[{"code":"\"xyx\"","value":"xyx","type":"java.lang.String"}],"expectedOutputs":[{"code":"\"xyx\"","value":"xyx","type":"java.lang.String"}]}]},{"id":"Problem","statements":[{"operation":"makePalindrome","inputs":[{"code":"\"jerry\"","value":"jerry","type":"java.lang.String"}],"expectedOutputs":[{"code":"\"jerryrrej\"","value":"jerryrrej","type":"java.lang.String"}]}]}],"description":" Find the shortest palindrome that begins with a supplied string.\n Algorithm idea is simple:\n - Find the longest postfix of supplied string that is a palindrome.\n - Append to the end of the string reverse of a string prefix that comes before the palindromic suffix.\n \u003e\u003e\u003e makePalindrome((\"\"))\n (\"\")\n \u003e\u003e\u003e makePalindrome((\"cat\"))\n (\"catac\")\n \u003e\u003e\u003e makePalindrome((\"cata\"))","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Find the shortest palindrome that begins with a supplied string.\n    // Algorithm idea is simple:\n    // - Find the longest postfix of supplied string that is a palindrome.\n    // - Append to the end of the string reverse of a string prefix that comes before the palindromic suffix.\n    // \u003e\u003e\u003e makePalindrome((\"\"))\n    // (\"\")\n    // \u003e\u003e\u003e makePalindrome((\"cat\"))\n    // (\"catac\")\n    // \u003e\u003e\u003e makePalindrome((\"cata\"))\n    // (\"catac\")\n    public static String makePalindrome(String string) {\n"}