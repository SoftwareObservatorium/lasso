{"id":"HumanEval_22_filter_integers","lql":"Problem {\n  filterIntegers(java.util.ArrayList\u003cjava.lang.Object\u003e)-\u003ejava.util.ArrayList\u003cjava.lang.Long\u003e\n}","sequences":[{"id":"Problem","statements":[{"operation":"filterIntegers","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Object\u003e(java.util.Arrays.asList())","value":[],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList())","value":[],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"filterIntegers","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Object\u003e(java.util.Arrays.asList(4l, new java.util.HashMap\u003cjava.lang.Long, java.lang.Long\u003e(java.util.Map.of()), new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList()), 23.2f, 9l, \"adasd\"))","value":[4,{},[],23.2,9,"adasd"],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 4l, (long) 9l))","value":[4,9],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"filterIntegers","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Object\u003e(java.util.Arrays.asList(3l, \"c\", 3l, 3l, \"a\", \"b\"))","value":[3,"c",3,3,"a","b"],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 3l, (long) 3l, (long) 3l))","value":[3,3,3],"type":"java.util.ArrayList"}]}]}],"description":" Filter given array list of any javathon values only for integers\n \u003e\u003e\u003e filterIntegers((new ArrayList\u003cObject\u003e(Arrays.asList((String)\"a\", (String)3.14f, (String)5l))))\n (new ArrayList\u003cLong\u003e(Arrays.asList((long)5l)))\n \u003e\u003e\u003e filterIntegers((new ArrayList\u003cObject\u003e(Arrays.asList(1l, 2l, 3l, \"abc\", new HashMap\u003cLong,Long\u003e(Map.of()), new ArrayList\u003cLong\u003e(Arrays.asList())))))"}