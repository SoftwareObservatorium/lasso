{"id":"HumanEval_158_find_max","lql":"Problem {\n  findMax(java.util.ArrayList\u003cjava.lang.String\u003e)-\u003ejava.lang.String\n}","sequences":[{"id":"Problem","statements":[{"operation":"findMax","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"name\", (String) \"of\", (String) \"string\"))","value":["name","of","string"],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"\"string\"","value":"string","type":"java.lang.String"}]}]},{"id":"Problem","statements":[{"operation":"findMax","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"name\", (String) \"enam\", (String) \"game\"))","value":["name","enam","game"],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"\"enam\"","value":"enam","type":"java.lang.String"}]}]},{"id":"Problem","statements":[{"operation":"findMax","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"aaaaaaa\", (String) \"bb\", (String) \"cc\"))","value":["aaaaaaa","bb","cc"],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"\"aaaaaaa\"","value":"aaaaaaa","type":"java.lang.String"}]}]},{"id":"Problem","statements":[{"operation":"findMax","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"abc\", (String) \"cba\"))","value":["abc","cba"],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"\"abc\"","value":"abc","type":"java.lang.String"}]}]},{"id":"Problem","statements":[{"operation":"findMax","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"play\", (String) \"this\", (String) \"game\", (String) \"of\", (String) \"footbott\"))","value":["play","this","game","of","footbott"],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"\"footbott\"","value":"footbott","type":"java.lang.String"}]}]},{"id":"Problem","statements":[{"operation":"findMax","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"we\", (String) \"are\", (String) \"gonna\", (String) \"rock\"))","value":["we","are","gonna","rock"],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"\"gonna\"","value":"gonna","type":"java.lang.String"}]}]},{"id":"Problem","statements":[{"operation":"findMax","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"we\", (String) \"are\", (String) \"a\", (String) \"mad\", (String) \"nation\"))","value":["we","are","a","mad","nation"],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"\"nation\"","value":"nation","type":"java.lang.String"}]}]},{"id":"Problem","statements":[{"operation":"findMax","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"this\", (String) \"is\", (String) \"a\", (String) \"prrk\"))","value":["this","is","a","prrk"],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"\"this\"","value":"this","type":"java.lang.String"}]}]},{"id":"Problem","statements":[{"operation":"findMax","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"b\"))","value":["b"],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"\"b\"","value":"b","type":"java.lang.String"}]}]},{"id":"Problem","statements":[{"operation":"findMax","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"play\", (String) \"play\", (String) \"play\"))","value":["play","play","play"],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"\"play\"","value":"play","type":"java.lang.String"}]}]}],"description":" Write a function that accepts an array array list of strings.\n The array list contains different words. Return the word with maximum number\n of unique characters. If multiple strings have maximum number of unique\n characters, return the one which comes first in lexicographical order.\n \u003e\u003e\u003e findMax((new ArrayList\u003cString\u003e(Arrays.asList((String)\"name\", (String)\"of\", (String)\"string\"))))\n (\"string\")\n \u003e\u003e\u003e findMax((new ArrayList\u003cString\u003e(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"game\"))))\n (\"enam\")\n \u003e\u003e\u003e findMax((new ArrayList\u003cString\u003e(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"cc\"))))"}