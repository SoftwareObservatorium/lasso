{"id":"HumanEval_40_triples_sum_to_zero","lql":"Problem {\n  triplesSumToZero(java.util.ArrayList\u003cjava.lang.Long\u003e)-\u003eboolean\n}","sequences":[{"id":"Problem","statements":[{"operation":"triplesSumToZero","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 3l, (long) 5l, (long) 0l))","value":[1,3,5,0],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"triplesSumToZero","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 3l, (long) 5l, (long) -1l))","value":[1,3,5,-1],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"triplesSumToZero","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 3l, (long) -2l, (long) 1l))","value":[1,3,-2,1],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"triplesSumToZero","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 2l, (long) 3l, (long) 7l))","value":[1,2,3,7],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"triplesSumToZero","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 2l, (long) 5l, (long) 7l))","value":[1,2,5,7],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"triplesSumToZero","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 2l, (long) 4l, (long) -5l, (long) 3l, (long) 9l, (long) 7l))","value":[2,4,-5,3,9,7],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"triplesSumToZero","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l))","value":[1],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"triplesSumToZero","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 3l, (long) 5l, (long) -100l))","value":[1,3,5,-100],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"triplesSumToZero","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 100l, (long) 3l, (long) 5l, (long) -100l))","value":[100,3,5,-100],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]}],"description":" triples_sum_to_zero takes an array array list of integers as an input.\n it returns true if there are three distinct elements in the array list that\n sum to zero, and false otherwise.\n \u003e\u003e\u003e triplesSumToZero((new ArrayList\u003cLong\u003e(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n (false)\n \u003e\u003e\u003e triplesSumToZero((new ArrayList\u003cLong\u003e(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n (true)\n \u003e\u003e\u003e triplesSumToZero((new ArrayList\u003cLong\u003e(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n (false)\n \u003e\u003e\u003e triplesSumToZero((new ArrayList\u003cLong\u003e(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n (true)\n \u003e\u003e\u003e triplesSumToZero((new ArrayList\u003cLong\u003e(Arrays.asList((long)1l))))","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // triples_sum_to_zero takes an array array list of integers as an input.\n    // it returns true if there are three distinct elements in the array list that\n    // sum to zero, and false otherwise.\n    // \u003e\u003e\u003e triplesSumToZero((new ArrayList\u003cLong\u003e(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // \u003e\u003e\u003e triplesSumToZero((new ArrayList\u003cLong\u003e(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // \u003e\u003e\u003e triplesSumToZero((new ArrayList\u003cLong\u003e(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // \u003e\u003e\u003e triplesSumToZero((new ArrayList\u003cLong\u003e(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    // \u003e\u003e\u003e triplesSumToZero((new ArrayList\u003cLong\u003e(Arrays.asList((long)1l))))\n    // (false)\n    public static boolean triplesSumToZero(ArrayList\u003cLong\u003e l) {\n"}