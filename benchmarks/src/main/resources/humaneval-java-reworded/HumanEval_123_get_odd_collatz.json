{"id":"HumanEval_123_get_odd_collatz","lql":"Problem {\n  getOddCollatz(long)-\u003ejava.util.ArrayList\u003cjava.lang.Long\u003e\n}","sequences":[{"id":"Problem","statements":[{"operation":"getOddCollatz","inputs":[{"code":"14l","value":14,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 5l, (long) 7l, (long) 11l, (long) 13l, (long) 17l))","value":[1,5,7,11,13,17],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"getOddCollatz","inputs":[{"code":"5l","value":5,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 5l))","value":[1,5],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"getOddCollatz","inputs":[{"code":"12l","value":12,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 3l, (long) 5l))","value":[1,3,5],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"getOddCollatz","inputs":[{"code":"1l","value":1,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l))","value":[1],"type":"java.util.ArrayList"}]}]}],"description":" Given a positive integer n, return a sorted array list that has the odd numbers in collatz sequence.\n The Collatz conjecture is a conjecture in mathematics that concerns a sequence defined\n as follows: start with any positive integer n. Then each term is obtained from the \n previous term as follows: if the previous term is even, the next term is one half of \n the previous term. If the previous term is odd, the next term is 3 times the previous\n term plus 1. The conjecture is that no matter what value of n, the sequence will always reach 1.\n Note: \n 1. Collatz(1) is [1].\n 2. returned array list sorted in increasing order.\n For example:\n get_odd_collatz(5) returns [1, 5] # The collatz sequence for 5 is [5, 16, 8, 4, 2, 1], so the odd numbers are only 1, and 5.\n \u003e\u003e\u003e getOddCollatz((5l))"}