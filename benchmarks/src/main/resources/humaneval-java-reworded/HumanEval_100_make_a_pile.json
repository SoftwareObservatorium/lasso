{"id":"HumanEval_100_make_a_pile","lql":"Problem {\n  makeAPile(long)-\u003ejava.util.ArrayList\u003cjava.lang.Long\u003e\n}","sequences":[{"id":"Problem","statements":[{"operation":"makeAPile","inputs":[{"code":"3l","value":3,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 3l, (long) 5l, (long) 7l))","value":[3,5,7],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"makeAPile","inputs":[{"code":"4l","value":4,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 4l, (long) 6l, (long) 8l, (long) 10l))","value":[4,6,8,10],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"makeAPile","inputs":[{"code":"5l","value":5,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 5l, (long) 7l, (long) 9l, (long) 11l, (long) 13l))","value":[5,7,9,11,13],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"makeAPile","inputs":[{"code":"6l","value":6,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 6l, (long) 8l, (long) 10l, (long) 12l, (long) 14l, (long) 16l))","value":[6,8,10,12,14,16],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"makeAPile","inputs":[{"code":"8l","value":8,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 8l, (long) 10l, (long) 12l, (long) 14l, (long) 16l, (long) 18l, (long) 20l, (long) 22l))","value":[8,10,12,14,16,18,20,22],"type":"java.util.ArrayList"}]}]}],"description":" Given a positive integer n, you have to make a pile of n levels of stones.\n The first level has n stones.\n The number of stones in the next level is:\n - the next odd number if n is odd.\n - the next even number if n is even.\n Return the number of stones in each level in an array array list, where element at index\n i represents the number of stones in the level (i+1).\n Examples:\n \u003e\u003e\u003e makeAPile((3l))","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a positive integer n, you have to make a pile of n levels of stones.\n    // The first level has n stones.\n    // The number of stones in the next level is:\n    // - the next odd number if n is odd.\n    // - the next even number if n is even.\n    // Return the number of stones in each level in an array array list, where element at index\n    // i represents the number of stones in the level (i+1).\n    // Examples:\n    // \u003e\u003e\u003e makeAPile((3l))\n    // (new ArrayList\u003cLong\u003e(Arrays.asList((long)3l, (long)5l, (long)7l)))\n    public static ArrayList\u003cLong\u003e makeAPile(long n) {\n"}