{"id":"HumanEval_114_minSubArraySum","lql":"Problem {\n  minSubArraySum(java.util.ArrayList\u003cjava.lang.Long\u003e)-\u003elong\n}","sequences":[{"id":"Problem","statements":[{"operation":"minSubArraySum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 2l, (long) 3l, (long) 4l, (long) 1l, (long) 2l, (long) 4l))","value":[2,3,4,1,2,4],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"1l","value":1,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"minSubArraySum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) -1l, (long) -2l, (long) -3l))","value":[-1,-2,-3],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"-6l","value":-6,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"minSubArraySum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) -1l, (long) -2l, (long) -3l, (long) 2l, (long) -10l))","value":[-1,-2,-3,2,-10],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"-14l","value":-14,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"minSubArraySum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) -9999999999999999l))","value":[-9999999999999999],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"-9999999999999999l","value":-9999999999999999,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"minSubArraySum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 0l, (long) 10l, (long) 20l, (long) 1000000l))","value":[0,10,20,1000000],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"0l","value":0,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"minSubArraySum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) -1l, (long) -2l, (long) -3l, (long) 10l, (long) -5l))","value":[-1,-2,-3,10,-5],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"-6l","value":-6,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"minSubArraySum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 100l, (long) -1l, (long) -2l, (long) -3l, (long) 10l, (long) -5l))","value":[100,-1,-2,-3,10,-5],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"-6l","value":-6,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"minSubArraySum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 10l, (long) 11l, (long) 13l, (long) 8l, (long) 3l, (long) 4l))","value":[10,11,13,8,3,4],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"3l","value":3,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"minSubArraySum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 100l, (long) -33l, (long) 32l, (long) -1l, (long) 0l, (long) -2l))","value":[100,-33,32,-1,0,-2],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"-33l","value":-33,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"minSubArraySum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) -10l))","value":[-10],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"-10l","value":-10,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"minSubArraySum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 7l))","value":[7],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"7l","value":7,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"minSubArraySum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) -1l))","value":[1,-1],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"-1l","value":-1,"type":"java.lang.Long"}]}]}],"description":" Given an array array list of integers nums, find the minimum sum of any non-empty sub-array array list\n of nums.\n Example\n \u003e\u003e\u003e minSubArraySum((new ArrayList\u003cLong\u003e(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))))\n (1l)\n \u003e\u003e\u003e minSubArraySum((new ArrayList\u003cLong\u003e(Arrays.asList((long)-1l, (long)-2l, (long)-3l))))","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers nums, find the minimum sum of any non-empty sub-array array list\n    // of nums.\n    // Example\n    // \u003e\u003e\u003e minSubArraySum((new ArrayList\u003cLong\u003e(Arrays.asList((long)2l, (long)3l, (long)4l, (long)1l, (long)2l, (long)4l))))\n    // (1l)\n    // \u003e\u003e\u003e minSubArraySum((new ArrayList\u003cLong\u003e(Arrays.asList((long)-1l, (long)-2l, (long)-3l))))\n    // (-6l)\n    public static long minSubArraySum(ArrayList\u003cLong\u003e nums) {\n"}