{"id":"HumanEval_12_longest","lql":"Problem {\n  longest(java.util.ArrayList\u003cjava.lang.String\u003e)-\u003ejava.util.Optional\u003cjava.lang.String\u003e\n}","sequences":[{"id":"Problem","statements":[{"operation":"longest","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList())","value":[],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"java.util.Optional.empty()","value":{},"type":"java.util.Optional"}]}]},{"id":"Problem","statements":[{"operation":"longest","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"x\", (String) \"y\", (String) \"z\"))","value":["x","y","z"],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"java.util.Optional.of(\"x\")","value":{"value":"x"},"type":"java.util.Optional"}]}]},{"id":"Problem","statements":[{"operation":"longest","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"x\", (String) \"yyy\", (String) \"zzzz\", (String) \"www\", (String) \"kkkk\", (String) \"abc\"))","value":["x","yyy","zzzz","www","kkkk","abc"],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"java.util.Optional.of(\"zzzz\")","value":{"value":"zzzz"},"type":"java.util.Optional"}]}]}],"description":" Out of array list of strings, return the longest one. Return the first one in case of multiple\n strings of the same length. Return null in case the input array list is empty.\n \u003e\u003e\u003e longest((new ArrayList\u003cString\u003e(Arrays.asList())))\n Optional.empty()\n \u003e\u003e\u003e longest((new ArrayList\u003cString\u003e(Arrays.asList((String)\"a\", (String)\"b\", (String)\"c\"))))\n Optional.of(\"a\")\n \u003e\u003e\u003e longest((new ArrayList\u003cString\u003e(Arrays.asList((String)\"a\", (String)\"bb\", (String)\"ccc\"))))"}