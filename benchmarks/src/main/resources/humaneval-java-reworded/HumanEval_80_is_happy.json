{"id":"HumanEval_80_is_happy","lql":"Problem {\n  isHappy(java.lang.String)-\u003eboolean\n}","sequences":[{"id":"Problem","statements":[{"operation":"isHappy","inputs":[{"code":"\"a\"","value":"a","type":"java.lang.String"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"isHappy","inputs":[{"code":"\"aa\"","value":"aa","type":"java.lang.String"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"isHappy","inputs":[{"code":"\"abcd\"","value":"abcd","type":"java.lang.String"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"isHappy","inputs":[{"code":"\"aabb\"","value":"aabb","type":"java.lang.String"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"isHappy","inputs":[{"code":"\"adb\"","value":"adb","type":"java.lang.String"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"isHappy","inputs":[{"code":"\"xyy\"","value":"xyy","type":"java.lang.String"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"isHappy","inputs":[{"code":"\"iopaxpoi\"","value":"iopaxpoi","type":"java.lang.String"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"isHappy","inputs":[{"code":"\"iopaxioi\"","value":"iopaxioi","type":"java.lang.String"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]}],"description":" You are given a string s.\n Your task is to check if the string is hapjava or not.\n A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n For example:\n \u003e\u003e\u003e isHappy((\"a\"))\n (false)\n \u003e\u003e\u003e isHappy((\"aa\"))\n (false)\n \u003e\u003e\u003e isHappy((\"abcd\"))\n (true)\n \u003e\u003e\u003e isHappy((\"aabb\"))\n (false)\n \u003e\u003e\u003e isHappy((\"adb\"))\n (true)\n \u003e\u003e\u003e isHappy((\"xyy\"))","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given a string s.\n    // Your task is to check if the string is hapjava or not.\n    // A string is hapjava if its length is at least 3 and every 3 consecutive letters are distinct\n    // For example:\n    // \u003e\u003e\u003e isHappy((\"a\"))\n    // (false)\n    // \u003e\u003e\u003e isHappy((\"aa\"))\n    // (false)\n    // \u003e\u003e\u003e isHappy((\"abcd\"))\n    // (true)\n    // \u003e\u003e\u003e isHappy((\"aabb\"))\n    // (false)\n    // \u003e\u003e\u003e isHappy((\"adb\"))\n    // (true)\n    // \u003e\u003e\u003e isHappy((\"xyy\"))\n    // (false)\n    public static boolean isHappy(String s) {\n"}