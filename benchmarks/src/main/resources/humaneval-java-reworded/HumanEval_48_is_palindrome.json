{"id":"HumanEval_48_is_palindrome","lql":"Problem {\n  isPalindrome(java.lang.String)-\u003eboolean\n}","sequences":[{"id":"Problem","statements":[{"operation":"isPalindrome","inputs":[{"code":"\"\"","value":"","type":"java.lang.String"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"isPalindrome","inputs":[{"code":"\"aba\"","value":"aba","type":"java.lang.String"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"isPalindrome","inputs":[{"code":"\"aaaaa\"","value":"aaaaa","type":"java.lang.String"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"isPalindrome","inputs":[{"code":"\"zbcd\"","value":"zbcd","type":"java.lang.String"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"isPalindrome","inputs":[{"code":"\"xywyx\"","value":"xywyx","type":"java.lang.String"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"isPalindrome","inputs":[{"code":"\"xywyz\"","value":"xywyz","type":"java.lang.String"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"isPalindrome","inputs":[{"code":"\"xywzx\"","value":"xywzx","type":"java.lang.String"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]}],"description":" Checks if given string is a palindrome\n \u003e\u003e\u003e isPalindrome((\"\"))\n (true)\n \u003e\u003e\u003e isPalindrome((\"aba\"))\n (true)\n \u003e\u003e\u003e isPalindrome((\"aaaaa\"))\n (true)\n \u003e\u003e\u003e isPalindrome((\"zbcd\"))","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Checks if given string is a palindrome\n    // \u003e\u003e\u003e isPalindrome((\"\"))\n    // (true)\n    // \u003e\u003e\u003e isPalindrome((\"aba\"))\n    // (true)\n    // \u003e\u003e\u003e isPalindrome((\"aaaaa\"))\n    // (true)\n    // \u003e\u003e\u003e isPalindrome((\"zbcd\"))\n    // (false)\n    public static boolean isPalindrome(String text) {\n"}