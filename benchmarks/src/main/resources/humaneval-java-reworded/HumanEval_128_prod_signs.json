{"id":"HumanEval_128_prod_signs","lql":"Problem {\n  prodSigns(java.util.ArrayList\u003cjava.lang.Long\u003e)-\u003ejava.util.Optional\u003cjava.lang.Long\u003e\n}","sequences":[{"id":"Problem","statements":[{"operation":"prodSigns","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 2l, (long) 2l, (long) -4l))","value":[1,2,2,-4],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"java.util.Optional.of(-9l)","value":{"value":-9},"type":"java.util.Optional"}]}]},{"id":"Problem","statements":[{"operation":"prodSigns","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 0l, (long) 1l))","value":[0,1],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"java.util.Optional.of(0l)","value":{"value":0},"type":"java.util.Optional"}]}]},{"id":"Problem","statements":[{"operation":"prodSigns","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 1l, (long) 1l, (long) 2l, (long) 3l, (long) -1l, (long) 1l))","value":[1,1,1,2,3,-1,1],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"java.util.Optional.of(-10l)","value":{"value":-10},"type":"java.util.Optional"}]}]},{"id":"Problem","statements":[{"operation":"prodSigns","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList())","value":[],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"java.util.Optional.empty()","value":{},"type":"java.util.Optional"}]}]},{"id":"Problem","statements":[{"operation":"prodSigns","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 2l, (long) 4l, (long) 1l, (long) 2l, (long) -1l, (long) -1l, (long) 9l))","value":[2,4,1,2,-1,-1,9],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"java.util.Optional.of(20l)","value":{"value":20},"type":"java.util.Optional"}]}]},{"id":"Problem","statements":[{"operation":"prodSigns","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) -1l, (long) 1l, (long) -1l, (long) 1l))","value":[-1,1,-1,1],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"java.util.Optional.of(4l)","value":{"value":4},"type":"java.util.Optional"}]}]},{"id":"Problem","statements":[{"operation":"prodSigns","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) -1l, (long) 1l, (long) 1l, (long) 1l))","value":[-1,1,1,1],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"java.util.Optional.of(-4l)","value":{"value":-4},"type":"java.util.Optional"}]}]},{"id":"Problem","statements":[{"operation":"prodSigns","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) -1l, (long) 1l, (long) 1l, (long) 0l))","value":[-1,1,1,0],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"java.util.Optional.of(0l)","value":{"value":0},"type":"java.util.Optional"}]}]}],"description":" You are given an array array list arr of integers and you need to return\n sum of magnitudes of integers multiplied by product of all signs\n of each number in the array array list, represented by 1, -1 or 0.\n Note: return null for empty arr.\n Example:\n \u003e\u003e\u003e prodSigns((new ArrayList\u003cLong\u003e(Arrays.asList((long)1l, (long)2l, (long)2l, (long)-4l))))\n Optional.of(9l)\n \u003e\u003e\u003e prodSigns((new ArrayList\u003cLong\u003e(Arrays.asList((long)0l, (long)1l))))\n Optional.of(0l)\n \u003e\u003e\u003e prodSigns((new ArrayList\u003cLong\u003e(Arrays.asList())))","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You are given an array array list arr of integers and you need to return\n    // sum of magnitudes of integers multiplied by product of all signs\n    // of each number in the array array list, represented by 1, -1 or 0.\n    // Note: return null for empty arr.\n    // Example:\n    // \u003e\u003e\u003e prodSigns((new ArrayList\u003cLong\u003e(Arrays.asList((long)1l, (long)2l, (long)2l, (long)-4l))))\n    // Optional.of(9l)\n    // \u003e\u003e\u003e prodSigns((new ArrayList\u003cLong\u003e(Arrays.asList((long)0l, (long)1l))))\n    // Optional.of(0l)\n    // \u003e\u003e\u003e prodSigns((new ArrayList\u003cLong\u003e(Arrays.asList())))\n    // Optional.empty()\n    public static Optional\u003cLong\u003e prodSigns(ArrayList\u003cLong\u003e arr) {\n"}