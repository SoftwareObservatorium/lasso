{"id":"HumanEval_117_select_words","lql":"Problem {\n  selectWords(java.lang.String,long)-\u003ejava.util.ArrayList\u003cjava.lang.String\u003e\n}","sequences":[{"id":"Problem","statements":[{"operation":"selectWords","inputs":[{"code":"\"Mary had a little lamb\"","value":"Mary had a little lamb","type":"java.lang.String"},{"code":"4l","value":4,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"little\"))","value":["little"],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"selectWords","inputs":[{"code":"\"Mary had a little lamb\"","value":"Mary had a little lamb","type":"java.lang.String"},{"code":"3l","value":3,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"Mary\", (String) \"lamb\"))","value":["Mary","lamb"],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"selectWords","inputs":[{"code":"\"simple white space\"","value":"simple white space","type":"java.lang.String"},{"code":"2l","value":2,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList())","value":[],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"selectWords","inputs":[{"code":"\"Hello world\"","value":"Hello world","type":"java.lang.String"},{"code":"4l","value":4,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"world\"))","value":["world"],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"selectWords","inputs":[{"code":"\"Uncle sam\"","value":"Uncle sam","type":"java.lang.String"},{"code":"3l","value":3,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"Uncle\"))","value":["Uncle"],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"selectWords","inputs":[{"code":"\"\"","value":"","type":"java.lang.String"},{"code":"4l","value":4,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList())","value":[],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"selectWords","inputs":[{"code":"\"a b c d e f\"","value":"a b c d e f","type":"java.lang.String"},{"code":"1l","value":1,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"b\", (String) \"c\", (String) \"d\", (String) \"f\"))","value":["b","c","d","f"],"type":"java.util.ArrayList"}]}]}],"description":" Given a string s and a natural number n, you have been tasked to implement \n a function that returns an array array list of all words from string s that contain exactly \n n consonants, in order these words appear in the string s.\n If the string s is empty then the function should return an empty array list.\n Note: you may assume the input string contains only letters and spaces.\n Examples:\n \u003e\u003e\u003e selectWords((\"Mary had a little lamb\"), (4l))\n (new ArrayList\u003cString\u003e(Arrays.asList((String)\"little\")))\n \u003e\u003e\u003e selectWords((\"Mary had a little lamb\"), (3l))\n (new ArrayList\u003cString\u003e(Arrays.asList((String)\"Mary\", (String)\"lamb\")))\n \u003e\u003e\u003e selectWords((\"simple white space\"), (2l))\n (new ArrayList\u003cString\u003e(Arrays.asList()))\n \u003e\u003e\u003e selectWords((\"Hello world\"), (4l))\n (new ArrayList\u003cString\u003e(Arrays.asList((String)\"world\")))\n \u003e\u003e\u003e selectWords((\"Uncle sam\"), (3l))"}