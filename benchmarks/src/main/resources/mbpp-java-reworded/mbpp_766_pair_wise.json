{"id":"mbpp_766_pair_wise","lql":"Problem {\n  pairWise(java.util.ArrayList\u003cjava.lang.Long\u003e)-\u003ejava.util.ArrayList\u003corg.javatuples.Pair\u003cjava.lang.Long, java.lang.Long\u003e\u003e\n}","sequences":[{"id":"Problem","statements":[{"operation":"pairWise","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 1l, (long) 2l, (long) 3l, (long) 3l, (long) 4l, (long) 4l, (long) 5l))","value":[1,1,2,3,3,4,4,5],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003corg.javatuples.Pair\u003cjava.lang.Long, java.lang.Long\u003e\u003e(java.util.Arrays.asList((Pair\u003cLong, Long\u003e) org.javatuples.Pair.with(1l, 1l), (Pair\u003cLong, Long\u003e) org.javatuples.Pair.with(1l, 2l), (Pair\u003cLong, Long\u003e) org.javatuples.Pair.with(2l, 3l), (Pair\u003cLong, Long\u003e) org.javatuples.Pair.with(3l, 3l), (Pair\u003cLong, Long\u003e) org.javatuples.Pair.with(3l, 4l), (Pair\u003cLong, Long\u003e) org.javatuples.Pair.with(4l, 4l), (Pair\u003cLong, Long\u003e) org.javatuples.Pair.with(4l, 5l)))","value":[{"val0":1,"val1":1,"valueArray":[1,1],"valueList":[1,1]},{"val0":1,"val1":2,"valueArray":[1,2],"valueList":[1,2]},{"val0":2,"val1":3,"valueArray":[2,3],"valueList":[2,3]},{"val0":3,"val1":3,"valueArray":[3,3],"valueList":[3,3]},{"val0":3,"val1":4,"valueArray":[3,4],"valueList":[3,4]},{"val0":4,"val1":4,"valueArray":[4,4],"valueList":[4,4]},{"val0":4,"val1":5,"valueArray":[4,5],"valueList":[4,5]}],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"pairWise","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 5l, (long) 7l, (long) 9l, (long) 10l))","value":[1,5,7,9,10],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003corg.javatuples.Pair\u003cjava.lang.Long, java.lang.Long\u003e\u003e(java.util.Arrays.asList((Pair\u003cLong, Long\u003e) org.javatuples.Pair.with(1l, 5l), (Pair\u003cLong, Long\u003e) org.javatuples.Pair.with(5l, 7l), (Pair\u003cLong, Long\u003e) org.javatuples.Pair.with(7l, 9l), (Pair\u003cLong, Long\u003e) org.javatuples.Pair.with(9l, 10l)))","value":[{"val0":1,"val1":5,"valueArray":[1,5],"valueList":[1,5]},{"val0":5,"val1":7,"valueArray":[5,7],"valueList":[5,7]},{"val0":7,"val1":9,"valueArray":[7,9],"valueList":[7,9]},{"val0":9,"val1":10,"valueArray":[9,10],"valueList":[9,10]}],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"pairWise","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 5l, (long) 1l, (long) 9l, (long) 7l, (long) 10l))","value":[5,1,9,7,10],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003corg.javatuples.Pair\u003cjava.lang.Long, java.lang.Long\u003e\u003e(java.util.Arrays.asList((Pair\u003cLong, Long\u003e) org.javatuples.Pair.with(5l, 1l), (Pair\u003cLong, Long\u003e) org.javatuples.Pair.with(1l, 9l), (Pair\u003cLong, Long\u003e) org.javatuples.Pair.with(9l, 7l), (Pair\u003cLong, Long\u003e) org.javatuples.Pair.with(7l, 10l)))","value":[{"val0":5,"val1":1,"valueArray":[5,1],"valueList":[5,1]},{"val0":1,"val1":9,"valueArray":[1,9],"valueList":[1,9]},{"val0":9,"val1":7,"valueArray":[9,7],"valueList":[9,7]},{"val0":7,"val1":10,"valueArray":[7,10],"valueList":[7,10]}],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"pairWise","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 2l, (long) 3l, (long) 4l, (long) 5l, (long) 6l, (long) 7l, (long) 8l, (long) 9l, (long) 10l))","value":[1,2,3,4,5,6,7,8,9,10],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003corg.javatuples.Pair\u003cjava.lang.Long, java.lang.Long\u003e\u003e(java.util.Arrays.asList((Pair\u003cLong, Long\u003e) org.javatuples.Pair.with(1l, 2l), (Pair\u003cLong, Long\u003e) org.javatuples.Pair.with(2l, 3l), (Pair\u003cLong, Long\u003e) org.javatuples.Pair.with(3l, 4l), (Pair\u003cLong, Long\u003e) org.javatuples.Pair.with(4l, 5l), (Pair\u003cLong, Long\u003e) org.javatuples.Pair.with(5l, 6l), (Pair\u003cLong, Long\u003e) org.javatuples.Pair.with(6l, 7l), (Pair\u003cLong, Long\u003e) org.javatuples.Pair.with(7l, 8l), (Pair\u003cLong, Long\u003e) org.javatuples.Pair.with(8l, 9l), (Pair\u003cLong, Long\u003e) org.javatuples.Pair.with(9l, 10l)))","value":[{"val0":1,"val1":2,"valueArray":[1,2],"valueList":[1,2]},{"val0":2,"val1":3,"valueArray":[2,3],"valueList":[2,3]},{"val0":3,"val1":4,"valueArray":[3,4],"valueList":[3,4]},{"val0":4,"val1":5,"valueArray":[4,5],"valueList":[4,5]},{"val0":5,"val1":6,"valueArray":[5,6],"valueList":[5,6]},{"val0":6,"val1":7,"valueArray":[6,7],"valueList":[6,7]},{"val0":7,"val1":8,"valueArray":[7,8],"valueList":[7,8]},{"val0":8,"val1":9,"valueArray":[8,9],"valueList":[8,9]},{"val0":9,"val1":10,"valueArray":[9,10],"valueList":[9,10]}],"type":"java.util.ArrayList"}]}]}],"description":"","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to return an array array list of all pairs of consecutive items in a given array list.\n    public static ArrayList\u003cPair\u003cLong, Long\u003e\u003e pairWise(ArrayList\u003cLong\u003e l1) {\n"}