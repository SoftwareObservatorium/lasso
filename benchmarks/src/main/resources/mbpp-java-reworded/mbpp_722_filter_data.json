{"id":"mbpp_722_filter_data","lql":"Problem {\n  filterData(java.util.HashMap\u003cjava.lang.String, org.javatuples.Pair\u003cjava.lang.Float, java.lang.Long\u003e\u003e,float,long)-\u003ejava.util.HashMap\u003cjava.lang.String, org.javatuples.Pair\u003cjava.lang.Float, java.lang.Long\u003e\u003e\n}","sequences":[{"id":"Problem","statements":[{"operation":"filterData","inputs":[{"code":"new java.util.HashMap\u003cjava.lang.String, org.javatuples.Pair\u003cjava.lang.Float, java.lang.Long\u003e\u003e(java.util.Map.of(\"Cierra Vega\", org.javatuples.Pair.with(6.2f, 70l), \"Alden Cantrell\", org.javatuples.Pair.with(5.9f, 65l), \"Kierra Gentry\", org.javatuples.Pair.with(6.0f, 68l), \"Pierre Cox\", org.javatuples.Pair.with(5.8f, 66l)))","value":{"Cierra Vega":{"val0":6.2,"val1":70,"valueArray":[6.2,70],"valueList":[6.2,70]},"Pierre Cox":{"val0":5.8,"val1":66,"valueArray":[5.8,66],"valueList":[5.8,66]},"Kierra Gentry":{"val0":6.0,"val1":68,"valueArray":[6.0,68],"valueList":[6.0,68]},"Alden Cantrell":{"val0":5.9,"val1":65,"valueArray":[5.9,65],"valueList":[5.9,65]}},"type":"java.util.HashMap"},{"code":"6.0f","value":6.0,"type":"java.lang.Float"},{"code":"70l","value":70,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.HashMap\u003cjava.lang.String, org.javatuples.Pair\u003cjava.lang.Float, java.lang.Long\u003e\u003e(java.util.Map.of(\"Cierra Vega\", org.javatuples.Pair.with(6.2f, 70l)))","value":{"Cierra Vega":{"val0":6.2,"val1":70,"valueArray":[6.2,70],"valueList":[6.2,70]}},"type":"java.util.HashMap"}]}]},{"id":"Problem","statements":[{"operation":"filterData","inputs":[{"code":"new java.util.HashMap\u003cjava.lang.String, org.javatuples.Pair\u003cjava.lang.Float, java.lang.Long\u003e\u003e(java.util.Map.of(\"Cierra Vega\", org.javatuples.Pair.with(6.2f, 70l), \"Alden Cantrell\", org.javatuples.Pair.with(5.9f, 65l), \"Kierra Gentry\", org.javatuples.Pair.with(6.0f, 68l), \"Pierre Cox\", org.javatuples.Pair.with(5.8f, 66l)))","value":{"Cierra Vega":{"val0":6.2,"val1":70,"valueArray":[6.2,70],"valueList":[6.2,70]},"Pierre Cox":{"val0":5.8,"val1":66,"valueArray":[5.8,66],"valueList":[5.8,66]},"Kierra Gentry":{"val0":6.0,"val1":68,"valueArray":[6.0,68],"valueList":[6.0,68]},"Alden Cantrell":{"val0":5.9,"val1":65,"valueArray":[5.9,65],"valueList":[5.9,65]}},"type":"java.util.HashMap"},{"code":"5.9f","value":5.9,"type":"java.lang.Float"},{"code":"67l","value":67,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.HashMap\u003cjava.lang.String, org.javatuples.Pair\u003cjava.lang.Float, java.lang.Long\u003e\u003e(java.util.Map.of(\"Cierra Vega\", org.javatuples.Pair.with(6.2f, 70l), \"Kierra Gentry\", org.javatuples.Pair.with(6.0f, 68l)))","value":{"Cierra Vega":{"val0":6.2,"val1":70,"valueArray":[6.2,70],"valueList":[6.2,70]},"Kierra Gentry":{"val0":6.0,"val1":68,"valueArray":[6.0,68],"valueList":[6.0,68]}},"type":"java.util.HashMap"}]}]},{"id":"Problem","statements":[{"operation":"filterData","inputs":[{"code":"new java.util.HashMap\u003cjava.lang.String, org.javatuples.Pair\u003cjava.lang.Float, java.lang.Long\u003e\u003e(java.util.Map.of(\"Cierra Vega\", org.javatuples.Pair.with(6.2f, 70l), \"Alden Cantrell\", org.javatuples.Pair.with(5.9f, 65l), \"Kierra Gentry\", org.javatuples.Pair.with(6.0f, 68l), \"Pierre Cox\", org.javatuples.Pair.with(5.8f, 66l)))","value":{"Cierra Vega":{"val0":6.2,"val1":70,"valueArray":[6.2,70],"valueList":[6.2,70]},"Pierre Cox":{"val0":5.8,"val1":66,"valueArray":[5.8,66],"valueList":[5.8,66]},"Kierra Gentry":{"val0":6.0,"val1":68,"valueArray":[6.0,68],"valueList":[6.0,68]},"Alden Cantrell":{"val0":5.9,"val1":65,"valueArray":[5.9,65],"valueList":[5.9,65]}},"type":"java.util.HashMap"},{"code":"5.7f","value":5.7,"type":"java.lang.Float"},{"code":"64l","value":64,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.HashMap\u003cjava.lang.String, org.javatuples.Pair\u003cjava.lang.Float, java.lang.Long\u003e\u003e(java.util.Map.of(\"Cierra Vega\", org.javatuples.Pair.with(6.2f, 70l), \"Alden Cantrell\", org.javatuples.Pair.with(5.9f, 65l), \"Kierra Gentry\", org.javatuples.Pair.with(6.0f, 68l), \"Pierre Cox\", org.javatuples.Pair.with(5.8f, 66l)))","value":{"Cierra Vega":{"val0":6.2,"val1":70,"valueArray":[6.2,70],"valueList":[6.2,70]},"Pierre Cox":{"val0":5.8,"val1":66,"valueArray":[5.8,66],"valueList":[5.8,66]},"Kierra Gentry":{"val0":6.0,"val1":68,"valueArray":[6.0,68],"valueList":[6.0,68]},"Alden Cantrell":{"val0":5.9,"val1":65,"valueArray":[5.9,65],"valueList":[5.9,65]}},"type":"java.util.HashMap"}]}]}],"description":"","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is given as - a hash map with a student name as a key and a pair of float (student_height, student_weight) as a value, - minimal height, - minimal weight. Write a function to filter students that have height and weight above the minimum.\n    public static HashMap\u003cString,Pair\u003cFloat, Long\u003e\u003e filterData(HashMap\u003cString,Pair\u003cFloat, Long\u003e\u003e students, float h, long w) {\n"}