{"id":"mbpp_239_get_total_number_of_sequences","lql":"Problem {\n  getTotalNumberOfSequences(long,long)-\u003elong\n}","sequences":[{"id":"Problem","statements":[{"operation":"getTotalNumberOfSequences","inputs":[{"code":"10l","value":10,"type":"java.lang.Long"},{"code":"4l","value":4,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"4l","value":4,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"getTotalNumberOfSequences","inputs":[{"code":"5l","value":5,"type":"java.lang.Long"},{"code":"2l","value":2,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"6l","value":6,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"getTotalNumberOfSequences","inputs":[{"code":"16l","value":16,"type":"java.lang.Long"},{"code":"3l","value":3,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"84l","value":84,"type":"java.lang.Long"}]}]}],"description":"","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in positive integers m and n and finds the number of possible sequences of length n, such that each element is a positive integer and is greater than or equal to twice the previous element but less than or equal to m.\n    public static long getTotalNumberOfSequences(long m, long n) {\n"}