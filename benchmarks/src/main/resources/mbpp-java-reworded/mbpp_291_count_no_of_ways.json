{"id":"mbpp_291_count_no_of_ways","lql":"Problem {\n  countNoOfWays(long,long)-\u003elong\n}","sequences":[{"id":"Problem","statements":[{"operation":"countNoOfWays","inputs":[{"code":"2l","value":2,"type":"java.lang.Long"},{"code":"4l","value":4,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"16l","value":16,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"countNoOfWays","inputs":[{"code":"3l","value":3,"type":"java.lang.Long"},{"code":"2l","value":2,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"6l","value":6,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"countNoOfWays","inputs":[{"code":"4l","value":4,"type":"java.lang.Long"},{"code":"4l","value":4,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"228l","value":228,"type":"java.lang.Long"}]}]}],"description":"","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n"}