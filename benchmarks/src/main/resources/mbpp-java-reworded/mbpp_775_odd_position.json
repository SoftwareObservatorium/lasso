{"id":"mbpp_775_odd_position","lql":"Problem {\n  oddPosition(java.util.ArrayList\u003cjava.lang.Long\u003e)-\u003eboolean\n}","sequences":[{"id":"Problem","statements":[{"operation":"oddPosition","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 2l, (long) 1l, (long) 4l, (long) 3l, (long) 6l, (long) 7l, (long) 6l, (long) 3l))","value":[2,1,4,3,6,7,6,3],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"oddPosition","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 4l, (long) 1l, (long) 2l))","value":[4,1,2],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"oddPosition","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 2l, (long) 3l))","value":[1,2,3],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]}],"description":"","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether every odd index contains odd numbers of a given array list.\n    public static boolean oddPosition(ArrayList\u003cLong\u003e nums) {\n"}