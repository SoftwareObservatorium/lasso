{"id":"mbpp_6_differ_At_One_Bit_Pos","lql":"Problem {\n  differAtOneBitPos(long,long)-\u003eboolean\n}","sequences":[{"id":"Problem","statements":[{"operation":"differAtOneBitPos","inputs":[{"code":"13l","value":13,"type":"java.lang.Long"},{"code":"9l","value":9,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"differAtOneBitPos","inputs":[{"code":"15l","value":15,"type":"java.lang.Long"},{"code":"8l","value":8,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"differAtOneBitPos","inputs":[{"code":"2l","value":2,"type":"java.lang.Long"},{"code":"4l","value":4,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"differAtOneBitPos","inputs":[{"code":"2l","value":2,"type":"java.lang.Long"},{"code":"3l","value":3,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"differAtOneBitPos","inputs":[{"code":"5l","value":5,"type":"java.lang.Long"},{"code":"1l","value":1,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"differAtOneBitPos","inputs":[{"code":"1l","value":1,"type":"java.lang.Long"},{"code":"5l","value":5,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]}],"description":"","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the two numbers differ at one bit position only or not.\n    public static boolean differAtOneBitPos(long a, long b) {\n"}