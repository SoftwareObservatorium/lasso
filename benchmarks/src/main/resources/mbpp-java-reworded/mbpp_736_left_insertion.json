{"id":"mbpp_736_left_insertion","lql":"Problem {\n  leftInsertion(java.util.ArrayList\u003cjava.lang.Long\u003e,long)-\u003elong\n}","sequences":[{"id":"Problem","statements":[{"operation":"leftInsertion","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 2l, (long) 4l, (long) 5l))","value":[1,2,4,5],"type":"java.util.ArrayList"},{"code":"6l","value":6,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"4l","value":4,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"leftInsertion","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 2l, (long) 4l, (long) 5l))","value":[1,2,4,5],"type":"java.util.ArrayList"},{"code":"3l","value":3,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"2l","value":2,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"leftInsertion","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 2l, (long) 4l, (long) 5l))","value":[1,2,4,5],"type":"java.util.ArrayList"},{"code":"7l","value":7,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"4l","value":4,"type":"java.lang.Long"}]}]}],"description":"","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList\u003cLong\u003e a, long x) {\n"}