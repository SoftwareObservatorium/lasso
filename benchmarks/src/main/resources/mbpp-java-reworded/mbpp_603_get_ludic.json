{"id":"mbpp_603_get_ludic","lql":"Problem {\n  getLudic(long)-\u003ejava.util.ArrayList\u003cjava.lang.Long\u003e\n}","sequences":[{"id":"Problem","statements":[{"operation":"getLudic","inputs":[{"code":"10l","value":10,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 2l, (long) 3l, (long) 5l, (long) 7l))","value":[1,2,3,5,7],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"getLudic","inputs":[{"code":"25l","value":25,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 2l, (long) 3l, (long) 5l, (long) 7l, (long) 11l, (long) 13l, (long) 17l, (long) 23l, (long) 25l))","value":[1,2,3,5,7,11,13,17,23,25],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"getLudic","inputs":[{"code":"45l","value":45,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 2l, (long) 3l, (long) 5l, (long) 7l, (long) 11l, (long) 13l, (long) 17l, (long) 23l, (long) 25l, (long) 29l, (long) 37l, (long) 41l, (long) 43l))","value":[1,2,3,5,7,11,13,17,23,25,29,37,41,43],"type":"java.util.ArrayList"}]}]}],"description":"","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to get all lucid numbers smaller than or equal to a given integer.\n    public static ArrayList\u003cLong\u003e getLudic(long n) {\n"}