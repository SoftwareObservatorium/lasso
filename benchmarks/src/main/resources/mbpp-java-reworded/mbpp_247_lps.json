{"id":"mbpp_247_lps","lql":"Problem {\n  lps(java.lang.String)-\u003elong\n}","sequences":[{"id":"Problem","statements":[{"operation":"lps","inputs":[{"code":"\"TENS FOR TENS\"","value":"TENS FOR TENS","type":"java.lang.String"}],"expectedOutputs":[{"code":"5l","value":5,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"lps","inputs":[{"code":"\"CARDIO FOR CARDS\"","value":"CARDIO FOR CARDS","type":"java.lang.String"}],"expectedOutputs":[{"code":"7l","value":7,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"lps","inputs":[{"code":"\"PART OF THE JOURNEY IS PART\"","value":"PART OF THE JOURNEY IS PART","type":"java.lang.String"}],"expectedOutputs":[{"code":"9l","value":9,"type":"java.lang.Long"}]}]}],"description":"","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the length of the longest palindromic subsequence in the given string.\n    public static long lps(String str) {\n"}