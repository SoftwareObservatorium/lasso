{"id":"mbpp_123_amicable_numbers_sum","lql":"Problem {\n  amicableNumbersSum(long)-\u003elong\n}","sequences":[{"id":"Problem","statements":[{"operation":"amicableNumbersSum","inputs":[{"code":"999l","value":999,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"504l","value":504,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"amicableNumbersSum","inputs":[{"code":"9999l","value":9999,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"31626l","value":31626,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"amicableNumbersSum","inputs":[{"code":"99l","value":99,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"0l","value":0,"type":"java.lang.Long"}]}]}],"description":"","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long amicableNumbersSum(long limit) {\n"}