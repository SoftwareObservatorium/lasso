{"id":"mbpp_87_merge_dictionaries_three","lql":"Problem {\n  mergeDictionariesThree(java.util.HashMap\u003cjava.lang.String, java.lang.String\u003e,java.util.HashMap\u003cjava.lang.String, java.lang.String\u003e,java.util.HashMap\u003cjava.lang.String, java.lang.String\u003e)-\u003ejava.util.HashMap\u003cjava.lang.String, java.lang.String\u003e\n}","sequences":[{"id":"Problem","statements":[{"operation":"mergeDictionariesThree","inputs":[{"code":"new java.util.HashMap\u003cjava.lang.String, java.lang.String\u003e(java.util.Map.of(\"R\", \"Red\", \"B\", \"Black\", \"P\", \"Pink\"))","value":{"P":"Pink","R":"Red","B":"Black"},"type":"java.util.HashMap"},{"code":"new java.util.HashMap\u003cjava.lang.String, java.lang.String\u003e(java.util.Map.of(\"G\", \"Green\", \"W\", \"White\"))","value":{"G":"Green","W":"White"},"type":"java.util.HashMap"},{"code":"new java.util.HashMap\u003cjava.lang.String, java.lang.String\u003e(java.util.Map.of(\"O\", \"Orange\", \"W\", \"White\", \"B\", \"Black\"))","value":{"B":"Black","W":"White","O":"Orange"},"type":"java.util.HashMap"}],"expectedOutputs":[{"code":"new java.util.HashMap\u003cjava.lang.String, java.lang.String\u003e(java.util.Map.of(\"B\", \"Black\", \"R\", \"Red\", \"P\", \"Pink\", \"G\", \"Green\", \"W\", \"White\", \"O\", \"Orange\"))","value":{"P":"Pink","R":"Red","B":"Black","G":"Green","W":"White","O":"Orange"},"type":"java.util.HashMap"}]}]},{"id":"Problem","statements":[{"operation":"mergeDictionariesThree","inputs":[{"code":"new java.util.HashMap\u003cjava.lang.String, java.lang.String\u003e(java.util.Map.of(\"R\", \"Red\", \"B\", \"Black\", \"P\", \"Pink\"))","value":{"P":"Pink","R":"Red","B":"Black"},"type":"java.util.HashMap"},{"code":"new java.util.HashMap\u003cjava.lang.String, java.lang.String\u003e(java.util.Map.of(\"G\", \"Green\", \"W\", \"White\"))","value":{"G":"Green","W":"White"},"type":"java.util.HashMap"},{"code":"new java.util.HashMap\u003cjava.lang.String, java.lang.String\u003e(java.util.Map.of(\"L\", \"lavender\", \"B\", \"Blue\"))","value":{"L":"lavender","B":"Blue"},"type":"java.util.HashMap"}],"expectedOutputs":[{"code":"new java.util.HashMap\u003cjava.lang.String, java.lang.String\u003e(java.util.Map.of(\"W\", \"White\", \"P\", \"Pink\", \"B\", \"Black\", \"R\", \"Red\", \"G\", \"Green\", \"L\", \"lavender\"))","value":{"P":"Pink","R":"Red","B":"Black","G":"Green","W":"White","L":"lavender"},"type":"java.util.HashMap"}]}]},{"id":"Problem","statements":[{"operation":"mergeDictionariesThree","inputs":[{"code":"new java.util.HashMap\u003cjava.lang.String, java.lang.String\u003e(java.util.Map.of(\"R\", \"Red\", \"B\", \"Black\", \"P\", \"Pink\"))","value":{"P":"Pink","R":"Red","B":"Black"},"type":"java.util.HashMap"},{"code":"new java.util.HashMap\u003cjava.lang.String, java.lang.String\u003e(java.util.Map.of(\"L\", \"lavender\", \"B\", \"Blue\"))","value":{"L":"lavender","B":"Blue"},"type":"java.util.HashMap"},{"code":"new java.util.HashMap\u003cjava.lang.String, java.lang.String\u003e(java.util.Map.of(\"G\", \"Green\", \"W\", \"White\"))","value":{"G":"Green","W":"White"},"type":"java.util.HashMap"}],"expectedOutputs":[{"code":"new java.util.HashMap\u003cjava.lang.String, java.lang.String\u003e(java.util.Map.of(\"B\", \"Black\", \"P\", \"Pink\", \"R\", \"Red\", \"G\", \"Green\", \"L\", \"lavender\", \"W\", \"White\"))","value":{"P":"Pink","R":"Red","B":"Black","G":"Green","W":"White","L":"lavender"},"type":"java.util.HashMap"}]}]}],"description":"","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to merge three dictionaries into a single hash map.\n    public static HashMap\u003cString,String\u003e mergeDictionariesThree(HashMap\u003cString,String\u003e dict1, HashMap\u003cString,String\u003e dict2, HashMap\u003cString,String\u003e dict3) {\n"}