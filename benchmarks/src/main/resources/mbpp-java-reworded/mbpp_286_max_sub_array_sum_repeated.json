{"id":"mbpp_286_max_sub_array_sum_repeated","lql":"Problem {\n  maxSubArraySumRepeated(java.util.ArrayList\u003cjava.lang.Long\u003e,long,long)-\u003elong\n}","sequences":[{"id":"Problem","statements":[{"operation":"maxSubArraySumRepeated","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 10l, (long) 20l, (long) -30l, (long) -1l))","value":[10,20,-30,-1],"type":"java.util.ArrayList"},{"code":"4l","value":4,"type":"java.lang.Long"},{"code":"3l","value":3,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"30l","value":30,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"maxSubArraySumRepeated","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) -1l, (long) 10l, (long) 20l))","value":[-1,10,20],"type":"java.util.ArrayList"},{"code":"3l","value":3,"type":"java.lang.Long"},{"code":"2l","value":2,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"59l","value":59,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"maxSubArraySumRepeated","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) -1l, (long) -2l, (long) -3l))","value":[-1,-2,-3],"type":"java.util.ArrayList"},{"code":"3l","value":3,"type":"java.lang.Long"},{"code":"3l","value":3,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"-1l","value":-1,"type":"java.lang.Long"}]}]}],"description":"","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the largest sum of a contiguous array array list in the modified array array list which is formed by repeating the given array array list k times.\n    public static long maxSubArraySumRepeated(ArrayList\u003cLong\u003e a, long n, long k) {\n"}