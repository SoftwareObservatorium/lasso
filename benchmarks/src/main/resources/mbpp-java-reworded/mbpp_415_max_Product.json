{"id":"mbpp_415_max_Product","lql":"Problem {\n  maxProduct(java.util.ArrayList\u003cjava.lang.Long\u003e)-\u003eorg.javatuples.Pair\u003cjava.lang.Long, java.lang.Long\u003e\n}","sequences":[{"id":"Problem","statements":[{"operation":"maxProduct","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 2l, (long) 3l, (long) 4l, (long) 7l, (long) 0l, (long) 8l, (long) 4l))","value":[1,2,3,4,7,0,8,4],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"org.javatuples.Pair.with(7l, 8l)","value":{"val0":7,"val1":8,"valueArray":[7,8],"valueList":[7,8]},"type":"org.javatuples.Pair"}]}]},{"id":"Problem","statements":[{"operation":"maxProduct","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 0l, (long) -1l, (long) -2l, (long) -4l, (long) 5l, (long) 0l, (long) -6l))","value":[0,-1,-2,-4,5,0,-6],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"org.javatuples.Pair.with(-4l, -6l)","value":{"val0":-4,"val1":-6,"valueArray":[-4,-6],"valueList":[-4,-6]},"type":"org.javatuples.Pair"}]}]},{"id":"Problem","statements":[{"operation":"maxProduct","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 2l, (long) 3l))","value":[1,2,3],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"org.javatuples.Pair.with(2l, 3l)","value":{"val0":2,"val1":3,"valueArray":[2,3],"valueList":[2,3]},"type":"org.javatuples.Pair"}]}]}],"description":"","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find a pair with highest product from a given array array list of integers.\n    public static Pair\u003cLong, Long\u003e maxProduct(ArrayList\u003cLong\u003e arr) {\n"}