{"id":"mbpp_392_get_max_sum","lql":"Problem {\n  getMaxSum(long)-\u003elong\n}","sequences":[{"id":"Problem","statements":[{"operation":"getMaxSum","inputs":[{"code":"60l","value":60,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"106l","value":106,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"getMaxSum","inputs":[{"code":"10l","value":10,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"12l","value":12,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"getMaxSum","inputs":[{"code":"2l","value":2,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"2l","value":2,"type":"java.lang.Long"}]}]}],"description":"","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum sum possible by using the given equation f(n) \u003d max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\n    public static long getMaxSum(long n) {\n"}