{"id":"mbpp_559_max_sub_array_sum","lql":"Problem {\n  maxSubArraySum(java.util.ArrayList\u003cjava.lang.Long\u003e,long)-\u003elong\n}","sequences":[{"id":"Problem","statements":[{"operation":"maxSubArraySum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) -2l, (long) -3l, (long) 4l, (long) -1l, (long) -2l, (long) 1l, (long) 5l, (long) -3l))","value":[-2,-3,4,-1,-2,1,5,-3],"type":"java.util.ArrayList"},{"code":"8l","value":8,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"7l","value":7,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"maxSubArraySum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) -3l, (long) -4l, (long) 5l, (long) -2l, (long) -3l, (long) 2l, (long) 6l, (long) -4l))","value":[-3,-4,5,-2,-3,2,6,-4],"type":"java.util.ArrayList"},{"code":"8l","value":8,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"8l","value":8,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"maxSubArraySum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) -4l, (long) -5l, (long) 6l, (long) -3l, (long) -4l, (long) 3l, (long) 7l, (long) -5l))","value":[-4,-5,6,-3,-4,3,7,-5],"type":"java.util.ArrayList"},{"code":"8l","value":8,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"10l","value":10,"type":"java.lang.Long"}]}]}],"description":"","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the sum of the largest contiguous subarray list in the given array list.\n    public static long maxSubArraySum(ArrayList\u003cLong\u003e a, long size) {\n"}