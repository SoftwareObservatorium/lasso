{"id":"mbpp_256_count_Primes_nums","lql":"Problem {\n  countPrimesNums(long)-\u003elong\n}","sequences":[{"id":"Problem","statements":[{"operation":"countPrimesNums","inputs":[{"code":"5l","value":5,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"2l","value":2,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"countPrimesNums","inputs":[{"code":"10l","value":10,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"4l","value":4,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"countPrimesNums","inputs":[{"code":"100l","value":100,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"25l","value":25,"type":"java.lang.Long"}]}]}],"description":"","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function that takes in a non-negative number and returns the number of prime numbers less than the given non-negative number.\n    public static long countPrimesNums(long n) {\n"}