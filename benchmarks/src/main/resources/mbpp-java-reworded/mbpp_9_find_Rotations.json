{"id":"mbpp_9_find_Rotations","lql":"Problem {\n  findRotations(java.lang.String)-\u003elong\n}","sequences":[{"id":"Problem","statements":[{"operation":"findRotations","inputs":[{"code":"\"aaaa\"","value":"aaaa","type":"java.lang.String"}],"expectedOutputs":[{"code":"1l","value":1,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"findRotations","inputs":[{"code":"\"ab\"","value":"ab","type":"java.lang.String"}],"expectedOutputs":[{"code":"2l","value":2,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"findRotations","inputs":[{"code":"\"abc\"","value":"abc","type":"java.lang.String"}],"expectedOutputs":[{"code":"3l","value":3,"type":"java.lang.Long"}]}]}],"description":"","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the minimum number of rotations (greater than 0) required to get the same string.\n    public static long findRotations(String str) {\n"}