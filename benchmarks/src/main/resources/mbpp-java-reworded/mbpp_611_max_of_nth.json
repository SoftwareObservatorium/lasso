{"id":"mbpp_611_max_of_nth","lql":"Problem {\n  maxOfNth(java.util.ArrayList\u003cjava.util.ArrayList\u003cjava.lang.Long\u003e\u003e,long)-\u003elong\n}","sequences":[{"id":"Problem","statements":[{"operation":"maxOfNth","inputs":[{"code":"new java.util.ArrayList\u003cjava.util.ArrayList\u003cjava.lang.Long\u003e\u003e(java.util.Arrays.asList((ArrayList\u003cLong\u003e) new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 5l, (long) 6l, (long) 7l)), (ArrayList\u003cLong\u003e) new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 3l, (long) 5l)), (ArrayList\u003cLong\u003e) new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 8l, (long) 9l, (long) 19l))))","value":[[5,6,7],[1,3,5],[8,9,19]],"type":"java.util.ArrayList"},{"code":"2l","value":2,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"19l","value":19,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"maxOfNth","inputs":[{"code":"new java.util.ArrayList\u003cjava.util.ArrayList\u003cjava.lang.Long\u003e\u003e(java.util.Arrays.asList((ArrayList\u003cLong\u003e) new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 6l, (long) 7l, (long) 8l)), (ArrayList\u003cLong\u003e) new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 2l, (long) 4l, (long) 6l)), (ArrayList\u003cLong\u003e) new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 9l, (long) 10l, (long) 20l))))","value":[[6,7,8],[2,4,6],[9,10,20]],"type":"java.util.ArrayList"},{"code":"1l","value":1,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"10l","value":10,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"maxOfNth","inputs":[{"code":"new java.util.ArrayList\u003cjava.util.ArrayList\u003cjava.lang.Long\u003e\u003e(java.util.Arrays.asList((ArrayList\u003cLong\u003e) new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 7l, (long) 8l, (long) 9l)), (ArrayList\u003cLong\u003e) new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 3l, (long) 5l, (long) 7l)), (ArrayList\u003cLong\u003e) new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 10l, (long) 11l, (long) 21l))))","value":[[7,8,9],[3,5,7],[10,11,21]],"type":"java.util.ArrayList"},{"code":"1l","value":1,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"11l","value":11,"type":"java.lang.Long"}]}]}],"description":"","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function which given a matrix represented as an array array list of array lists returns the max of the n\u0027th column.\n    public static long maxOfNth(ArrayList\u003cArrayList\u003cLong\u003e\u003e test_list, long N) {\n"}