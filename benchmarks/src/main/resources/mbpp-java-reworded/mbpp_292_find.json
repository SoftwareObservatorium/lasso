{"id":"mbpp_292_find","lql":"Problem {\n  find(long,long)-\u003elong\n}","sequences":[{"id":"Problem","statements":[{"operation":"find","inputs":[{"code":"10l","value":10,"type":"java.lang.Long"},{"code":"3l","value":3,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"3l","value":3,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"find","inputs":[{"code":"4l","value":4,"type":"java.lang.Long"},{"code":"2l","value":2,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"2l","value":2,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"find","inputs":[{"code":"20l","value":20,"type":"java.lang.Long"},{"code":"5l","value":5,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"4l","value":4,"type":"java.lang.Long"}]}]}],"description":"","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n"}