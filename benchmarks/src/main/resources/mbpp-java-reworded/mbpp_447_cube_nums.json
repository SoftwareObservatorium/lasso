{"id":"mbpp_447_cube_nums","lql":"Problem {\n  cubeNums(java.util.ArrayList\u003cjava.lang.Long\u003e)-\u003ejava.util.ArrayList\u003cjava.lang.Long\u003e\n}","sequences":[{"id":"Problem","statements":[{"operation":"cubeNums","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 2l, (long) 3l, (long) 4l, (long) 5l, (long) 6l, (long) 7l, (long) 8l, (long) 9l, (long) 10l))","value":[1,2,3,4,5,6,7,8,9,10],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 8l, (long) 27l, (long) 64l, (long) 125l, (long) 216l, (long) 343l, (long) 512l, (long) 729l, (long) 1000l))","value":[1,8,27,64,125,216,343,512,729,1000],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"cubeNums","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 10l, (long) 20l, (long) 30l))","value":[10,20,30],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1000l, (long) 8000l, (long) 27000l))","value":[1000,8000,27000],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"cubeNums","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 12l, (long) 15l))","value":[12,15],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1728l, (long) 3375l))","value":[1728,3375],"type":"java.util.ArrayList"}]}]}],"description":"","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find cubes of individual elements in an array array list.\n    public static ArrayList\u003cLong\u003e cubeNums(ArrayList\u003cLong\u003e nums) {\n"}