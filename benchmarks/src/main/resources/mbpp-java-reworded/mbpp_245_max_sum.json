{"id":"mbpp_245_max_sum","lql":"Problem {\n  maxSum(java.util.ArrayList\u003cjava.lang.Long\u003e)-\u003elong\n}","sequences":[{"id":"Problem","statements":[{"operation":"maxSum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 15l, (long) 51l, (long) 45l, (long) 33l, (long) 100l, (long) 12l, (long) 18l, (long) 9l))","value":[1,15,51,45,33,100,12,18,9],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"194l","value":194,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"maxSum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 80l, (long) 60l, (long) 30l, (long) 40l, (long) 20l, (long) 10l))","value":[80,60,30,40,20,10],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"210l","value":210,"type":"java.lang.Long"}]}]},{"id":"Problem","statements":[{"operation":"maxSum","inputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 2l, (long) 3l, (long) 14l, (long) 16l, (long) 21l, (long) 23l, (long) 29l, (long) 30l))","value":[2,3,14,16,21,23,29,30],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"138l","value":138,"type":"java.lang.Long"}]}]}],"description":"","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes an array array list and finds the maximum sum of a bitonic subsequence for the given array array list, where a sequence is bitonic if it is first increasing and then decreasing.\n    public static long maxSum(ArrayList\u003cLong\u003e arr) {\n"}