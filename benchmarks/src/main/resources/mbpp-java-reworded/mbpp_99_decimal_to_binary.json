{"id":"mbpp_99_decimal_to_binary","lql":"Problem {\n  decimalToBinary(long)-\u003ejava.lang.String\n}","sequences":[{"id":"Problem","statements":[{"operation":"decimalToBinary","inputs":[{"code":"8l","value":8,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"\"1000\"","value":"1000","type":"java.lang.String"}]}]},{"id":"Problem","statements":[{"operation":"decimalToBinary","inputs":[{"code":"18l","value":18,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"\"10010\"","value":"10010","type":"java.lang.String"}]}]},{"id":"Problem","statements":[{"operation":"decimalToBinary","inputs":[{"code":"7l","value":7,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"\"111\"","value":"111","type":"java.lang.String"}]}]}],"description":"","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n    public static String decimalToBinary(long n) {\n"}