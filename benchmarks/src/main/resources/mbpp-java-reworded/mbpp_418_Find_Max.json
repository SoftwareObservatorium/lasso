{"id":"mbpp_418_Find_Max","lql":"Problem {\n  FindMax(java.util.ArrayList\u003cjava.util.ArrayList\u003cjava.lang.Object\u003e\u003e)-\u003ejava.util.ArrayList\u003cjava.lang.Object\u003e\n}","sequences":[{"id":"Problem","statements":[{"operation":"FindMax","inputs":[{"code":"new java.util.ArrayList\u003cjava.util.ArrayList\u003cjava.lang.Object\u003e\u003e(java.util.Arrays.asList((ArrayList\u003cString\u003e) new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"A\")), (ArrayList\u003cString\u003e) new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"A\", (String) \"B\")), (ArrayList\u003cString\u003e) new java.util.ArrayList\u003cjava.lang.String\u003e(java.util.Arrays.asList((String) \"A\", (String) \"B\", (String) \"C\"))))","value":[["A"],["A","B"],["A","B","C"]],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Object\u003e(java.util.Arrays.asList((String) \"A\", (String) \"B\", (String) \"C\"))","value":["A","B","C"],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"FindMax","inputs":[{"code":"new java.util.ArrayList\u003cjava.util.ArrayList\u003cjava.lang.Object\u003e\u003e(java.util.Arrays.asList((ArrayList\u003cLong\u003e) new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l)), (ArrayList\u003cLong\u003e) new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 2l)), (ArrayList\u003cLong\u003e) new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 2l, (long) 3l))))","value":[[1],[1,2],[1,2,3]],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Object\u003e(java.util.Arrays.asList((long) 1l, (long) 2l, (long) 3l))","value":[1,2,3],"type":"java.util.ArrayList"}]}]},{"id":"Problem","statements":[{"operation":"FindMax","inputs":[{"code":"new java.util.ArrayList\u003cjava.util.ArrayList\u003cjava.lang.Object\u003e\u003e(java.util.Arrays.asList((ArrayList\u003cLong\u003e) new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 1l)), (ArrayList\u003cLong\u003e) new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 2l, (long) 3l)), (ArrayList\u003cLong\u003e) new java.util.ArrayList\u003cjava.lang.Long\u003e(java.util.Arrays.asList((long) 1l, (long) 5l, (long) 6l, (long) 1l))))","value":[[1,1],[1,2,3],[1,5,6,1]],"type":"java.util.ArrayList"}],"expectedOutputs":[{"code":"new java.util.ArrayList\u003cjava.lang.Object\u003e(java.util.Arrays.asList((long) 1l, (long) 5l, (long) 6l, (long) 1l))","value":[1,5,6,1],"type":"java.util.ArrayList"}]}]}],"description":"","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the element of an array array list having maximum length.\n    public static ArrayList\u003cObject\u003e FindMax(ArrayList\u003cArrayList\u003cObject\u003e\u003e lst) {\n"}