{"id":"mbpp_637_noprofit_noloss","lql":"Problem {\n  noprofitNoloss(long,long)-\u003eboolean\n}","sequences":[{"id":"Problem","statements":[{"operation":"noprofitNoloss","inputs":[{"code":"1500l","value":1500,"type":"java.lang.Long"},{"code":"1200l","value":1200,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"noprofitNoloss","inputs":[{"code":"100l","value":100,"type":"java.lang.Long"},{"code":"100l","value":100,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"true","value":true,"type":"java.lang.Boolean"}]}]},{"id":"Problem","statements":[{"operation":"noprofitNoloss","inputs":[{"code":"2000l","value":2000,"type":"java.lang.Long"},{"code":"5000l","value":5000,"type":"java.lang.Long"}],"expectedOutputs":[{"code":"false","value":false,"type":"java.lang.Boolean"}]}]}],"description":"","prompt":"import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    public static boolean noprofitNoloss(long actual_cost, long sale_amount) {\n"}