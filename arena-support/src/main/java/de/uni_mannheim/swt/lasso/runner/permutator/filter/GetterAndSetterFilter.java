/*
 * LASSO - an Observatorium for the Dynamic Selection, Analysis and Comparison of Software
 * Copyright (C) 2024 Marcus Kessel (University of Mannheim) and LASSO contributers
 *
 * This file is part of LASSO.
 *
 * LASSO is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * LASSO is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with LASSO.  If not, see <https://www.gnu.org/licenses/>.
 */
package de.uni_mannheim.swt.lasso.runner.permutator.filter;

import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Method;

/**
 * Ignores getter and setter methods.
 *
 * @author Marcus Kessel
 */
public class GetterAndSetterFilter implements MethodFilter {

    @Override
    public boolean accept(Method method) {
        // ignore synthetic methods generated by compiler
        if (/*isGetterMethod(method) ||*/ isSetterMethod(method)) {
            return false;
        }

        return true;
    }

    /**
     * Any method starting with get or is
     *
     * @param method {@link Method}
     * @return true if getter method.
     * @see java.beans.PropertyDescriptor
     */
    private static boolean isGetterMethod(Method method) {
        if (StringUtils.startsWithAny(method.getName(), "get", "is")
                && method.getParameterCount() < 1 && !method.getReturnType().equals(void.class)) {
            return true;
        }

        return false;
    }

    /**
     * @param method {@link Method}
     * @return true if setter method
     * @see java.beans.PropertyDescriptor
     */
    private static boolean isSetterMethod(Method method) {
        if (StringUtils.startsWith(method.getName(), "set") && method.getParameterCount() == 1
                && method.getReturnType().equals(void.class)) {
            return true;
        }

        return false;
    }
}
