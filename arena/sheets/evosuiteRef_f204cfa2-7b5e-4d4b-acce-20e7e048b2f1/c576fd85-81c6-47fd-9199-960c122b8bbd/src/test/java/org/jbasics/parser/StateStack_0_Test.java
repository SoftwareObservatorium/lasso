/*
 * LASSO - an Observatorium for the Dynamic Selection, Analysis and Comparison of Software
 * Copyright (C) 2024 Marcus Kessel (University of Mannheim) and LASSO contributers
 *
 * This file is part of LASSO.
 *
 * LASSO is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * LASSO is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with LASSO.  If not, see <https://www.gnu.org/licenses/>.
 */
/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 04 15:34:30 GMT 2021
 */

package org.jbasics.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.EmptyStackException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
import org.jbasics.parser.StateStack;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class StateStack_0_Test {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.jbasics.parser.StateStack"; 
//    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/usr/src/mymaven/c576fd85-81c6-47fd-9199-960c122b8bbd"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(StateStack_0_Test.class.getClassLoader() ,
      "org.jbasics.parser.StateStack"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(StateStack_0_Test.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.jbasics.parser.StateStack"
    );
  }

  //Test case number: 0
  /*
   * 39 covered goals:
   * Goal 1. org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: root-Branch
   * Goal 2. org.jbasics.parser.StateStack.<init>()V: root-Branch
   * Goal 3. org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;: I4 Branch 5 IF_ICMPLT L62 - false
   * Goal 4. org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;: I9 Branch 6 IF_ICMPGE L62 - true
   * Goal 5. Branch org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: root-Branch in context: org.jbasics.parser.StateStack:push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 6. Branch org.jbasics.parser.StateStack.<init>()V: root-Branch in context: org.jbasics.parser.StateStack:<init>()V
   * Goal 7. Branch org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;: I4 Branch 5 IF_ICMPLT L62 - false in context: org.jbasics.parser.StateStack:peek(I)Ljava/lang/Object;
   * Goal 8. Branch org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;: I9 Branch 6 IF_ICMPGE L62 - true in context: org.jbasics.parser.StateStack:peek(I)Ljava/lang/Object;
   * Goal 9. [Output]: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:NonNull
   * Goal 10. [Output]: org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;:NonNull
   * Goal 11. org.jbasics.parser.StateStack.<init>()V: Line 38
   * Goal 12. org.jbasics.parser.StateStack.<init>()V: Line 39
   * Goal 13. org.jbasics.parser.StateStack.<init>()V: Line 40
   * Goal 14. org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;: Line 62
   * Goal 15. org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;: Line 65
   * Goal 16. org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 43
   * Goal 17. org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 44
   * Goal 18. [METHOD] org.jbasics.parser.StateStack.<init>()V
   * Goal 19. [METHOD] org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;
   * Goal 20. [METHOD] org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 21. [METHODNOEX] org.jbasics.parser.StateStack.<init>()V
   * Goal 22. [METHODNOEX] org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;
   * Goal 23. [METHODNOEX] org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 24. Weak Mutation 22: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - InsertUnaryOp Negation of distance
   * Goal 25. Weak Mutation 23: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - InsertUnaryOp IINC 1 distance
   * Goal 26. Weak Mutation 24: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - InsertUnaryOp IINC -1 distance
   * Goal 27. Weak Mutation 25: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - ReplaceConstant - 1 -> 0
   * Goal 28. Weak Mutation 26: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - ReplaceComparisonOperator < -> >=
   * Goal 29. Weak Mutation 27: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - InsertUnaryOp Negation of distance
   * Goal 30. Weak Mutation 28: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - InsertUnaryOp IINC 1 distance
   * Goal 31. Weak Mutation 29: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - InsertUnaryOp IINC -1 distance
   * Goal 32. Weak Mutation 32: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - ReplaceComparisonOperator >= -> ==
   * Goal 33. Weak Mutation 35: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:65 - InsertUnaryOp Negation of distance
   * Goal 34. Weak Mutation 36: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:65 - InsertUnaryOp IINC 1 distance
   * Goal 35. Weak Mutation 37: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:65 - InsertUnaryOp IINC -1 distance
   * Goal 36. Weak Mutation 38: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:65 - ReplaceArithmeticOperator - -> +
   * Goal 37. Weak Mutation 39: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:65 - ReplaceArithmeticOperator - -> %
   * Goal 38. Weak Mutation 40: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:65 - ReplaceArithmeticOperator - -> *
   * Goal 39. Weak Mutation 41: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:65 - ReplaceArithmeticOperator - -> /
   */

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StateStack<String> stateStack0 = new StateStack<String>();
      stateStack0.push("t?av");
      stateStack0.push("org.jbasics.parser.StateStack");
      String string0 = stateStack0.peek(1);
      assertEquals("org.jbasics.parser.StateStack", string0);
  }

  //Test case number: 1
  /*
   * 31 covered goals:
   * Goal 1. org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: root-Branch
   * Goal 2. org.jbasics.parser.StateStack.<init>()V: root-Branch
   * Goal 3. org.jbasics.parser.StateStack.peek()Ljava/lang/Object;: I5 Branch 3 IFLE L55 - true
   * Goal 4. org.jbasics.parser.StateStack.peek()Ljava/lang/Object;: I11 Branch 4 IFEQ L55 - true
   * Goal 5. Branch org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: root-Branch in context: org.jbasics.parser.StateStack:push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 6. Branch org.jbasics.parser.StateStack.<init>()V: root-Branch in context: org.jbasics.parser.StateStack:<init>()V
   * Goal 7. Branch org.jbasics.parser.StateStack.peek()Ljava/lang/Object;: I11 Branch 4 IFEQ L55 - true in context: org.jbasics.parser.StateStack:peek()Ljava/lang/Object;
   * Goal 8. Branch org.jbasics.parser.StateStack.peek()Ljava/lang/Object;: I5 Branch 3 IFLE L55 - true in context: org.jbasics.parser.StateStack:peek()Ljava/lang/Object;
   * Goal 9. [Output]: org.jbasics.parser.StateStack.peek()Ljava/lang/Object;:NonNull
   * Goal 10. [Output]: org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;:NonNull
   * Goal 11. org.jbasics.parser.StateStack.<init>()V: Line 38
   * Goal 12. org.jbasics.parser.StateStack.<init>()V: Line 39
   * Goal 13. org.jbasics.parser.StateStack.<init>()V: Line 40
   * Goal 14. org.jbasics.parser.StateStack.peek()Ljava/lang/Object;: Line 55
   * Goal 15. org.jbasics.parser.StateStack.peek()Ljava/lang/Object;: Line 58
   * Goal 16. org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 43
   * Goal 17. org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 44
   * Goal 18. [METHOD] org.jbasics.parser.StateStack.<init>()V
   * Goal 19. [METHOD] org.jbasics.parser.StateStack.peek()Ljava/lang/Object;
   * Goal 20. [METHOD] org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 21. [METHODNOEX] org.jbasics.parser.StateStack.<init>()V
   * Goal 22. [METHODNOEX] org.jbasics.parser.StateStack.peek()Ljava/lang/Object;
   * Goal 23. [METHODNOEX] org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 24. Weak Mutation 12: org.jbasics.parser.StateStack.peek()Ljava/lang/Object;:55 - ReplaceComparisonOperator <= -> ==
   * Goal 25. Weak Mutation 15: org.jbasics.parser.StateStack.peek()Ljava/lang/Object;:55 - ReplaceConstant - 0 -> 1
   * Goal 26. Weak Mutation 16: org.jbasics.parser.StateStack.peek()Ljava/lang/Object;:55 - ReplaceComparisonOperator == -> !=
   * Goal 27. Weak Mutation 17: org.jbasics.parser.StateStack.peek()Ljava/lang/Object;:58 - ReplaceConstant - 1 -> 0
   * Goal 28. Weak Mutation 18: org.jbasics.parser.StateStack.peek()Ljava/lang/Object;:58 - ReplaceArithmeticOperator - -> +
   * Goal 29. Weak Mutation 19: org.jbasics.parser.StateStack.peek()Ljava/lang/Object;:58 - ReplaceArithmeticOperator - -> %
   * Goal 30. Weak Mutation 20: org.jbasics.parser.StateStack.peek()Ljava/lang/Object;:58 - ReplaceArithmeticOperator - -> *
   * Goal 31. Weak Mutation 21: org.jbasics.parser.StateStack.peek()Ljava/lang/Object;:58 - ReplaceArithmeticOperator - -> /
   */

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StateStack<String> stateStack0 = new StateStack<String>();
      stateStack0.push("B^5|omEvlg");
      stateStack0.push("");
      String string0 = stateStack0.peek();
      assertEquals("", string0);
  }

  //Test case number: 2
  /*
   * 31 covered goals:
   * Goal 1. org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: root-Branch
   * Goal 2. org.jbasics.parser.StateStack.<init>()V: root-Branch
   * Goal 3. org.jbasics.parser.StateStack.pop()Ljava/lang/Object;: I5 Branch 1 IFLE L48 - true
   * Goal 4. org.jbasics.parser.StateStack.pop()Ljava/lang/Object;: I11 Branch 2 IFEQ L48 - true
   * Goal 5. Branch org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: root-Branch in context: org.jbasics.parser.StateStack:push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 6. Branch org.jbasics.parser.StateStack.<init>()V: root-Branch in context: org.jbasics.parser.StateStack:<init>()V
   * Goal 7. Branch org.jbasics.parser.StateStack.pop()Ljava/lang/Object;: I5 Branch 1 IFLE L48 - true in context: org.jbasics.parser.StateStack:pop()Ljava/lang/Object;
   * Goal 8. Branch org.jbasics.parser.StateStack.pop()Ljava/lang/Object;: I11 Branch 2 IFEQ L48 - true in context: org.jbasics.parser.StateStack:pop()Ljava/lang/Object;
   * Goal 9. [Output]: org.jbasics.parser.StateStack.pop()Ljava/lang/Object;:NonNull
   * Goal 10. [Output]: org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;:NonNull
   * Goal 11. org.jbasics.parser.StateStack.<init>()V: Line 38
   * Goal 12. org.jbasics.parser.StateStack.<init>()V: Line 39
   * Goal 13. org.jbasics.parser.StateStack.<init>()V: Line 40
   * Goal 14. org.jbasics.parser.StateStack.pop()Ljava/lang/Object;: Line 48
   * Goal 15. org.jbasics.parser.StateStack.pop()Ljava/lang/Object;: Line 51
   * Goal 16. org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 43
   * Goal 17. org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 44
   * Goal 18. [METHOD] org.jbasics.parser.StateStack.<init>()V
   * Goal 19. [METHOD] org.jbasics.parser.StateStack.pop()Ljava/lang/Object;
   * Goal 20. [METHOD] org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 21. [METHODNOEX] org.jbasics.parser.StateStack.<init>()V
   * Goal 22. [METHODNOEX] org.jbasics.parser.StateStack.pop()Ljava/lang/Object;
   * Goal 23. [METHODNOEX] org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 24. Weak Mutation 1: org.jbasics.parser.StateStack.pop()Ljava/lang/Object;:48 - ReplaceComparisonOperator <= -> ==
   * Goal 25. Weak Mutation 4: org.jbasics.parser.StateStack.pop()Ljava/lang/Object;:48 - ReplaceConstant - 0 -> 1
   * Goal 26. Weak Mutation 5: org.jbasics.parser.StateStack.pop()Ljava/lang/Object;:48 - ReplaceComparisonOperator == -> !=
   * Goal 27. Weak Mutation 6: org.jbasics.parser.StateStack.pop()Ljava/lang/Object;:51 - ReplaceConstant - 1 -> 0
   * Goal 28. Weak Mutation 7: org.jbasics.parser.StateStack.pop()Ljava/lang/Object;:51 - ReplaceArithmeticOperator - -> +
   * Goal 29. Weak Mutation 8: org.jbasics.parser.StateStack.pop()Ljava/lang/Object;:51 - ReplaceArithmeticOperator - -> %
   * Goal 30. Weak Mutation 9: org.jbasics.parser.StateStack.pop()Ljava/lang/Object;:51 - ReplaceArithmeticOperator - -> *
   * Goal 31. Weak Mutation 10: org.jbasics.parser.StateStack.pop()Ljava/lang/Object;:51 - ReplaceArithmeticOperator - -> /
   */

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StateStack<String> stateStack0 = new StateStack<String>();
      stateStack0.push("B^5|omEvlg");
      stateStack0.push("");
      String string0 = stateStack0.pop();
      assertEquals("", string0);
  }

  //Test case number: 3
  /*
   * 19 covered goals:
   * Goal 1. org.jbasics.parser.StateStack.size()I: root-Branch
   * Goal 2. org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: root-Branch
   * Goal 3. org.jbasics.parser.StateStack.<init>()V: root-Branch
   * Goal 4. Branch org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: root-Branch in context: org.jbasics.parser.StateStack:push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 5. Branch org.jbasics.parser.StateStack.<init>()V: root-Branch in context: org.jbasics.parser.StateStack:<init>()V
   * Goal 6. Branch org.jbasics.parser.StateStack.size()I: root-Branch in context: org.jbasics.parser.StateStack:size()I
   * Goal 7. [Output]: org.jbasics.parser.StateStack.size()I:Positive
   * Goal 8. org.jbasics.parser.StateStack.<init>()V: Line 38
   * Goal 9. org.jbasics.parser.StateStack.<init>()V: Line 39
   * Goal 10. org.jbasics.parser.StateStack.<init>()V: Line 40
   * Goal 11. org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 43
   * Goal 12. org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 44
   * Goal 13. org.jbasics.parser.StateStack.size()I: Line 73
   * Goal 14. [METHOD] org.jbasics.parser.StateStack.<init>()V
   * Goal 15. [METHOD] org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 16. [METHOD] org.jbasics.parser.StateStack.size()I
   * Goal 17. [METHODNOEX] org.jbasics.parser.StateStack.<init>()V
   * Goal 18. [METHODNOEX] org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 19. [METHODNOEX] org.jbasics.parser.StateStack.size()I
   */

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StateStack<Object> stateStack0 = new StateStack<Object>();
      Integer integer0 = new Integer(0);
      stateStack0.push(integer0);
      int int0 = stateStack0.size();
      assertEquals(1, int0);
  }

  //Test case number: 4
  /*
   * 38 covered goals:
   * Goal 1. org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: root-Branch
   * Goal 2. org.jbasics.parser.StateStack.<init>()V: root-Branch
   * Goal 3. org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;: I4 Branch 5 IF_ICMPLT L62 - false
   * Goal 4. org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;: I9 Branch 6 IF_ICMPGE L62 - true
   * Goal 5. Branch org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: root-Branch in context: org.jbasics.parser.StateStack:push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 6. Branch org.jbasics.parser.StateStack.<init>()V: root-Branch in context: org.jbasics.parser.StateStack:<init>()V
   * Goal 7. Branch org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;: I4 Branch 5 IF_ICMPLT L62 - false in context: org.jbasics.parser.StateStack:peek(I)Ljava/lang/Object;
   * Goal 8. Branch org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;: I9 Branch 6 IF_ICMPGE L62 - true in context: org.jbasics.parser.StateStack:peek(I)Ljava/lang/Object;
   * Goal 9. [Output]: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:NonNull
   * Goal 10. [Output]: org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;:NonNull
   * Goal 11. org.jbasics.parser.StateStack.<init>()V: Line 38
   * Goal 12. org.jbasics.parser.StateStack.<init>()V: Line 39
   * Goal 13. org.jbasics.parser.StateStack.<init>()V: Line 40
   * Goal 14. org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;: Line 62
   * Goal 15. org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;: Line 65
   * Goal 16. org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 43
   * Goal 17. org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 44
   * Goal 18. [METHOD] org.jbasics.parser.StateStack.<init>()V
   * Goal 19. [METHOD] org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;
   * Goal 20. [METHOD] org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 21. [METHODNOEX] org.jbasics.parser.StateStack.<init>()V
   * Goal 22. [METHODNOEX] org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;
   * Goal 23. [METHODNOEX] org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 24. Weak Mutation 22: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - InsertUnaryOp Negation of distance
   * Goal 25. Weak Mutation 23: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - InsertUnaryOp IINC 1 distance
   * Goal 26. Weak Mutation 24: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - InsertUnaryOp IINC -1 distance
   * Goal 27. Weak Mutation 25: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - ReplaceConstant - 1 -> 0
   * Goal 28. Weak Mutation 26: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - ReplaceComparisonOperator < -> >=
   * Goal 29. Weak Mutation 27: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - InsertUnaryOp Negation of distance
   * Goal 30. Weak Mutation 28: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - InsertUnaryOp IINC 1 distance
   * Goal 31. Weak Mutation 29: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - InsertUnaryOp IINC -1 distance
   * Goal 32. Weak Mutation 31: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - ReplaceComparisonOperator >= -> >
   * Goal 33. Weak Mutation 35: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:65 - InsertUnaryOp Negation of distance
   * Goal 34. Weak Mutation 36: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:65 - InsertUnaryOp IINC 1 distance
   * Goal 35. Weak Mutation 37: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:65 - InsertUnaryOp IINC -1 distance
   * Goal 36. Weak Mutation 38: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:65 - ReplaceArithmeticOperator - -> +
   * Goal 37. Weak Mutation 40: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:65 - ReplaceArithmeticOperator - -> *
   * Goal 38. Weak Mutation 41: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:65 - ReplaceArithmeticOperator - -> /
   */

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StateStack<String> stateStack0 = new StateStack<String>();
      stateStack0.push("t?av");
      String string0 = stateStack0.peek(1);
      assertEquals("t?av", string0);
  }

  //Test case number: 5
  /*
   * 15 covered goals:
   * Goal 1. org.jbasics.parser.StateStack.<init>()V: root-Branch
   * Goal 2. org.jbasics.parser.StateStack.isEmpty()Z: I5 Branch 7 IFLE L69 - false
   * Goal 3. Branch org.jbasics.parser.StateStack.<init>()V: root-Branch in context: org.jbasics.parser.StateStack:<init>()V
   * Goal 4. Branch org.jbasics.parser.StateStack.isEmpty()Z: I5 Branch 7 IFLE L69 - false in context: org.jbasics.parser.StateStack:isEmpty()Z
   * Goal 5. [Output]: org.jbasics.parser.StateStack.isEmpty()Z:True
   * Goal 6. org.jbasics.parser.StateStack.<init>()V: Line 38
   * Goal 7. org.jbasics.parser.StateStack.<init>()V: Line 39
   * Goal 8. org.jbasics.parser.StateStack.<init>()V: Line 40
   * Goal 9. org.jbasics.parser.StateStack.isEmpty()Z: Line 69
   * Goal 10. [METHOD] org.jbasics.parser.StateStack.<init>()V
   * Goal 11. [METHOD] org.jbasics.parser.StateStack.isEmpty()Z
   * Goal 12. [METHODNOEX] org.jbasics.parser.StateStack.<init>()V
   * Goal 13. [METHODNOEX] org.jbasics.parser.StateStack.isEmpty()Z
   * Goal 14. Weak Mutation 42: org.jbasics.parser.StateStack.isEmpty()Z:69 - ReplaceComparisonOperator <= -> -1
   * Goal 15. Weak Mutation 45: org.jbasics.parser.StateStack.isEmpty()Z:69 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StateStack<Object> stateStack0 = new StateStack<Object>();
      boolean boolean0 = stateStack0.isEmpty();
      assertTrue(boolean0);
  }

  //Test case number: 6
  /*
   * 22 covered goals:
   * Goal 1. org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: root-Branch
   * Goal 2. org.jbasics.parser.StateStack.<init>()V: root-Branch
   * Goal 3. org.jbasics.parser.StateStack.isEmpty()Z: I5 Branch 7 IFLE L69 - true
   * Goal 4. Branch org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: root-Branch in context: org.jbasics.parser.StateStack:push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 5. Branch org.jbasics.parser.StateStack.<init>()V: root-Branch in context: org.jbasics.parser.StateStack:<init>()V
   * Goal 6. Branch org.jbasics.parser.StateStack.isEmpty()Z: I5 Branch 7 IFLE L69 - true in context: org.jbasics.parser.StateStack:isEmpty()Z
   * Goal 7. [Output]: org.jbasics.parser.StateStack.isEmpty()Z:False
   * Goal 8. [Output]: org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;:Null
   * Goal 9. org.jbasics.parser.StateStack.<init>()V: Line 38
   * Goal 10. org.jbasics.parser.StateStack.<init>()V: Line 39
   * Goal 11. org.jbasics.parser.StateStack.<init>()V: Line 40
   * Goal 12. org.jbasics.parser.StateStack.isEmpty()Z: Line 69
   * Goal 13. org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 43
   * Goal 14. org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 44
   * Goal 15. [METHOD] org.jbasics.parser.StateStack.<init>()V
   * Goal 16. [METHOD] org.jbasics.parser.StateStack.isEmpty()Z
   * Goal 17. [METHOD] org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 18. [METHODNOEX] org.jbasics.parser.StateStack.<init>()V
   * Goal 19. [METHODNOEX] org.jbasics.parser.StateStack.isEmpty()Z
   * Goal 20. [METHODNOEX] org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 21. Weak Mutation 43: org.jbasics.parser.StateStack.isEmpty()Z:69 - ReplaceComparisonOperator <= -> ==
   * Goal 22. Weak Mutation 46: org.jbasics.parser.StateStack.isEmpty()Z:69 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StateStack<String> stateStack0 = new StateStack<String>();
      assertTrue(stateStack0.isEmpty());
      
      stateStack0.push((String) null);
      boolean boolean0 = stateStack0.isEmpty();
      assertFalse(boolean0);
  }

  //Test case number: 7
  /*
   * 38 covered goals:
   * Goal 1. org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: root-Branch
   * Goal 2. org.jbasics.parser.StateStack.<init>()V: root-Branch
   * Goal 3. org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;: I4 Branch 5 IF_ICMPLT L62 - false
   * Goal 4. org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;: I9 Branch 6 IF_ICMPGE L62 - true
   * Goal 5. Branch org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: root-Branch in context: org.jbasics.parser.StateStack:push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 6. Branch org.jbasics.parser.StateStack.<init>()V: root-Branch in context: org.jbasics.parser.StateStack:<init>()V
   * Goal 7. Branch org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;: I4 Branch 5 IF_ICMPLT L62 - false in context: org.jbasics.parser.StateStack:peek(I)Ljava/lang/Object;
   * Goal 8. Branch org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;: I9 Branch 6 IF_ICMPGE L62 - true in context: org.jbasics.parser.StateStack:peek(I)Ljava/lang/Object;
   * Goal 9. [Output]: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:Null
   * Goal 10. [Output]: org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;:Null
   * Goal 11. org.jbasics.parser.StateStack.<init>()V: Line 38
   * Goal 12. org.jbasics.parser.StateStack.<init>()V: Line 39
   * Goal 13. org.jbasics.parser.StateStack.<init>()V: Line 40
   * Goal 14. org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;: Line 62
   * Goal 15. org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;: Line 65
   * Goal 16. org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 43
   * Goal 17. org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 44
   * Goal 18. [METHOD] org.jbasics.parser.StateStack.<init>()V
   * Goal 19. [METHOD] org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;
   * Goal 20. [METHOD] org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 21. [METHODNOEX] org.jbasics.parser.StateStack.<init>()V
   * Goal 22. [METHODNOEX] org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;
   * Goal 23. [METHODNOEX] org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 24. Weak Mutation 22: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - InsertUnaryOp Negation of distance
   * Goal 25. Weak Mutation 23: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - InsertUnaryOp IINC 1 distance
   * Goal 26. Weak Mutation 24: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - InsertUnaryOp IINC -1 distance
   * Goal 27. Weak Mutation 25: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - ReplaceConstant - 1 -> 0
   * Goal 28. Weak Mutation 26: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - ReplaceComparisonOperator < -> >=
   * Goal 29. Weak Mutation 27: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - InsertUnaryOp Negation of distance
   * Goal 30. Weak Mutation 28: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - InsertUnaryOp IINC 1 distance
   * Goal 31. Weak Mutation 29: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - InsertUnaryOp IINC -1 distance
   * Goal 32. Weak Mutation 31: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - ReplaceComparisonOperator >= -> >
   * Goal 33. Weak Mutation 35: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:65 - InsertUnaryOp Negation of distance
   * Goal 34. Weak Mutation 36: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:65 - InsertUnaryOp IINC 1 distance
   * Goal 35. Weak Mutation 37: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:65 - InsertUnaryOp IINC -1 distance
   * Goal 36. Weak Mutation 38: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:65 - ReplaceArithmeticOperator - -> +
   * Goal 37. Weak Mutation 40: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:65 - ReplaceArithmeticOperator - -> *
   * Goal 38. Weak Mutation 41: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:65 - ReplaceArithmeticOperator - -> /
   */

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StateStack<String> stateStack0 = new StateStack<String>();
      stateStack0.push((String) null);
      String string0 = stateStack0.peek(1);
      assertNull(string0);
  }

  //Test case number: 8
  /*
   * 26 covered goals:
   * Goal 1. org.jbasics.parser.StateStack.<init>()V: root-Branch
   * Goal 2. org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;: I4 Branch 5 IF_ICMPLT L62 - false
   * Goal 3. org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;: I9 Branch 6 IF_ICMPGE L62 - false
   * Goal 4. Branch org.jbasics.parser.StateStack.<init>()V: root-Branch in context: org.jbasics.parser.StateStack:<init>()V
   * Goal 5. Branch org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;: I4 Branch 5 IF_ICMPLT L62 - false in context: org.jbasics.parser.StateStack:peek(I)Ljava/lang/Object;
   * Goal 6. Branch org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;: I9 Branch 6 IF_ICMPGE L62 - false in context: org.jbasics.parser.StateStack:peek(I)Ljava/lang/Object;
   * Goal 7. peek(I)Ljava/lang/Object;_java.lang.IndexOutOfBoundsException_EXPLICIT
   * Goal 8. org.jbasics.parser.StateStack.<init>()V: Line 38
   * Goal 9. org.jbasics.parser.StateStack.<init>()V: Line 39
   * Goal 10. org.jbasics.parser.StateStack.<init>()V: Line 40
   * Goal 11. org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;: Line 62
   * Goal 12. org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;: Line 63
   * Goal 13. [METHOD] org.jbasics.parser.StateStack.<init>()V
   * Goal 14. [METHOD] org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;
   * Goal 15. [METHODNOEX] org.jbasics.parser.StateStack.<init>()V
   * Goal 16. Weak Mutation 22: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - InsertUnaryOp Negation of distance
   * Goal 17. Weak Mutation 23: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - InsertUnaryOp IINC 1 distance
   * Goal 18. Weak Mutation 24: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - InsertUnaryOp IINC -1 distance
   * Goal 19. Weak Mutation 25: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - ReplaceConstant - 1 -> 0
   * Goal 20. Weak Mutation 26: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - ReplaceComparisonOperator < -> >=
   * Goal 21. Weak Mutation 27: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - InsertUnaryOp Negation of distance
   * Goal 22. Weak Mutation 28: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - InsertUnaryOp IINC 1 distance
   * Goal 23. Weak Mutation 29: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - InsertUnaryOp IINC -1 distance
   * Goal 24. Weak Mutation 30: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - ReplaceComparisonOperator >= -> -1
   * Goal 25. Weak Mutation 33: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:63 - ReplaceConstant - Distance out of range [1, -> 
   * Goal 26. Weak Mutation 34: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:63 - ReplaceConstant - ] -> 
   */

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StateStack<String> stateStack0 = new StateStack<String>();
      // Undeclared exception!
      try { 
        stateStack0.peek(1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Distance out of range [1,0]
         //
         verifyException("org.jbasics.parser.StateStack", e);
      }
  }

  //Test case number: 9
  /*
   * 20 covered goals:
   * Goal 1. org.jbasics.parser.StateStack.<init>()V: root-Branch
   * Goal 2. org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;: I4 Branch 5 IF_ICMPLT L62 - true
   * Goal 3. Branch org.jbasics.parser.StateStack.<init>()V: root-Branch in context: org.jbasics.parser.StateStack:<init>()V
   * Goal 4. Branch org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;: I4 Branch 5 IF_ICMPLT L62 - true in context: org.jbasics.parser.StateStack:peek(I)Ljava/lang/Object;
   * Goal 5. peek(I)Ljava/lang/Object;_java.lang.IndexOutOfBoundsException_EXPLICIT
   * Goal 6. org.jbasics.parser.StateStack.<init>()V: Line 38
   * Goal 7. org.jbasics.parser.StateStack.<init>()V: Line 39
   * Goal 8. org.jbasics.parser.StateStack.<init>()V: Line 40
   * Goal 9. org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;: Line 62
   * Goal 10. org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;: Line 63
   * Goal 11. [METHOD] org.jbasics.parser.StateStack.<init>()V
   * Goal 12. [METHOD] org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;
   * Goal 13. [METHODNOEX] org.jbasics.parser.StateStack.<init>()V
   * Goal 14. Weak Mutation 22: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - InsertUnaryOp Negation of distance
   * Goal 15. Weak Mutation 23: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - InsertUnaryOp IINC 1 distance
   * Goal 16. Weak Mutation 24: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - InsertUnaryOp IINC -1 distance
   * Goal 17. Weak Mutation 25: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - ReplaceConstant - 1 -> 0
   * Goal 18. Weak Mutation 26: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:62 - ReplaceComparisonOperator < -> >=
   * Goal 19. Weak Mutation 33: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:63 - ReplaceConstant - Distance out of range [1, -> 
   * Goal 20. Weak Mutation 34: org.jbasics.parser.StateStack.peek(I)Ljava/lang/Object;:63 - ReplaceConstant - ] -> 
   */

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StateStack<String> stateStack0 = new StateStack<String>();
      // Undeclared exception!
      try { 
        stateStack0.peek((-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Distance out of range [1,0]
         //
         verifyException("org.jbasics.parser.StateStack", e);
      }
  }

  //Test case number: 10
  /*
   * 18 covered goals:
   * Goal 1. org.jbasics.parser.StateStack.<init>()V: root-Branch
   * Goal 2. org.jbasics.parser.StateStack.peek()Ljava/lang/Object;: I5 Branch 3 IFLE L55 - false
   * Goal 3. org.jbasics.parser.StateStack.peek()Ljava/lang/Object;: I11 Branch 4 IFEQ L55 - false
   * Goal 4. Branch org.jbasics.parser.StateStack.<init>()V: root-Branch in context: org.jbasics.parser.StateStack:<init>()V
   * Goal 5. Branch org.jbasics.parser.StateStack.peek()Ljava/lang/Object;: I5 Branch 3 IFLE L55 - false in context: org.jbasics.parser.StateStack:peek()Ljava/lang/Object;
   * Goal 6. Branch org.jbasics.parser.StateStack.peek()Ljava/lang/Object;: I11 Branch 4 IFEQ L55 - false in context: org.jbasics.parser.StateStack:peek()Ljava/lang/Object;
   * Goal 7. peek()Ljava/lang/Object;_java.util.EmptyStackException_EXPLICIT
   * Goal 8. org.jbasics.parser.StateStack.<init>()V: Line 38
   * Goal 9. org.jbasics.parser.StateStack.<init>()V: Line 39
   * Goal 10. org.jbasics.parser.StateStack.<init>()V: Line 40
   * Goal 11. org.jbasics.parser.StateStack.peek()Ljava/lang/Object;: Line 55
   * Goal 12. org.jbasics.parser.StateStack.peek()Ljava/lang/Object;: Line 56
   * Goal 13. [METHOD] org.jbasics.parser.StateStack.<init>()V
   * Goal 14. [METHOD] org.jbasics.parser.StateStack.peek()Ljava/lang/Object;
   * Goal 15. [METHODNOEX] org.jbasics.parser.StateStack.<init>()V
   * Goal 16. Weak Mutation 11: org.jbasics.parser.StateStack.peek()Ljava/lang/Object;:55 - ReplaceComparisonOperator <= -> -1
   * Goal 17. Weak Mutation 14: org.jbasics.parser.StateStack.peek()Ljava/lang/Object;:55 - ReplaceConstant - 1 -> 0
   * Goal 18. Weak Mutation 16: org.jbasics.parser.StateStack.peek()Ljava/lang/Object;:55 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StateStack<Object> stateStack0 = new StateStack<Object>();
      // Undeclared exception!
      try { 
        stateStack0.peek();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jbasics.parser.StateStack", e);
      }
  }

  //Test case number: 11
  /*
   * 30 covered goals:
   * Goal 1. org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: root-Branch
   * Goal 2. org.jbasics.parser.StateStack.<init>()V: root-Branch
   * Goal 3. org.jbasics.parser.StateStack.peek()Ljava/lang/Object;: I5 Branch 3 IFLE L55 - true
   * Goal 4. org.jbasics.parser.StateStack.peek()Ljava/lang/Object;: I11 Branch 4 IFEQ L55 - true
   * Goal 5. Branch org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: root-Branch in context: org.jbasics.parser.StateStack:push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 6. Branch org.jbasics.parser.StateStack.<init>()V: root-Branch in context: org.jbasics.parser.StateStack:<init>()V
   * Goal 7. Branch org.jbasics.parser.StateStack.peek()Ljava/lang/Object;: I11 Branch 4 IFEQ L55 - true in context: org.jbasics.parser.StateStack:peek()Ljava/lang/Object;
   * Goal 8. Branch org.jbasics.parser.StateStack.peek()Ljava/lang/Object;: I5 Branch 3 IFLE L55 - true in context: org.jbasics.parser.StateStack:peek()Ljava/lang/Object;
   * Goal 9. [Output]: org.jbasics.parser.StateStack.peek()Ljava/lang/Object;:Null
   * Goal 10. [Output]: org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;:Null
   * Goal 11. org.jbasics.parser.StateStack.<init>()V: Line 38
   * Goal 12. org.jbasics.parser.StateStack.<init>()V: Line 39
   * Goal 13. org.jbasics.parser.StateStack.<init>()V: Line 40
   * Goal 14. org.jbasics.parser.StateStack.peek()Ljava/lang/Object;: Line 55
   * Goal 15. org.jbasics.parser.StateStack.peek()Ljava/lang/Object;: Line 58
   * Goal 16. org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 43
   * Goal 17. org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 44
   * Goal 18. [METHOD] org.jbasics.parser.StateStack.<init>()V
   * Goal 19. [METHOD] org.jbasics.parser.StateStack.peek()Ljava/lang/Object;
   * Goal 20. [METHOD] org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 21. [METHODNOEX] org.jbasics.parser.StateStack.<init>()V
   * Goal 22. [METHODNOEX] org.jbasics.parser.StateStack.peek()Ljava/lang/Object;
   * Goal 23. [METHODNOEX] org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 24. Weak Mutation 12: org.jbasics.parser.StateStack.peek()Ljava/lang/Object;:55 - ReplaceComparisonOperator <= -> ==
   * Goal 25. Weak Mutation 15: org.jbasics.parser.StateStack.peek()Ljava/lang/Object;:55 - ReplaceConstant - 0 -> 1
   * Goal 26. Weak Mutation 16: org.jbasics.parser.StateStack.peek()Ljava/lang/Object;:55 - ReplaceComparisonOperator == -> !=
   * Goal 27. Weak Mutation 17: org.jbasics.parser.StateStack.peek()Ljava/lang/Object;:58 - ReplaceConstant - 1 -> 0
   * Goal 28. Weak Mutation 18: org.jbasics.parser.StateStack.peek()Ljava/lang/Object;:58 - ReplaceArithmeticOperator - -> +
   * Goal 29. Weak Mutation 20: org.jbasics.parser.StateStack.peek()Ljava/lang/Object;:58 - ReplaceArithmeticOperator - -> *
   * Goal 30. Weak Mutation 21: org.jbasics.parser.StateStack.peek()Ljava/lang/Object;:58 - ReplaceArithmeticOperator - -> /
   */

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StateStack<String> stateStack0 = new StateStack<String>();
      stateStack0.push((String) null);
      String string0 = stateStack0.peek();
      assertNull(string0);
  }

  //Test case number: 12
  /*
   * 18 covered goals:
   * Goal 1. org.jbasics.parser.StateStack.<init>()V: root-Branch
   * Goal 2. org.jbasics.parser.StateStack.pop()Ljava/lang/Object;: I5 Branch 1 IFLE L48 - false
   * Goal 3. org.jbasics.parser.StateStack.pop()Ljava/lang/Object;: I11 Branch 2 IFEQ L48 - false
   * Goal 4. Branch org.jbasics.parser.StateStack.<init>()V: root-Branch in context: org.jbasics.parser.StateStack:<init>()V
   * Goal 5. Branch org.jbasics.parser.StateStack.pop()Ljava/lang/Object;: I5 Branch 1 IFLE L48 - false in context: org.jbasics.parser.StateStack:pop()Ljava/lang/Object;
   * Goal 6. Branch org.jbasics.parser.StateStack.pop()Ljava/lang/Object;: I11 Branch 2 IFEQ L48 - false in context: org.jbasics.parser.StateStack:pop()Ljava/lang/Object;
   * Goal 7. pop()Ljava/lang/Object;_java.util.EmptyStackException_EXPLICIT
   * Goal 8. org.jbasics.parser.StateStack.<init>()V: Line 38
   * Goal 9. org.jbasics.parser.StateStack.<init>()V: Line 39
   * Goal 10. org.jbasics.parser.StateStack.<init>()V: Line 40
   * Goal 11. org.jbasics.parser.StateStack.pop()Ljava/lang/Object;: Line 48
   * Goal 12. org.jbasics.parser.StateStack.pop()Ljava/lang/Object;: Line 49
   * Goal 13. [METHOD] org.jbasics.parser.StateStack.<init>()V
   * Goal 14. [METHOD] org.jbasics.parser.StateStack.pop()Ljava/lang/Object;
   * Goal 15. [METHODNOEX] org.jbasics.parser.StateStack.<init>()V
   * Goal 16. Weak Mutation 0: org.jbasics.parser.StateStack.pop()Ljava/lang/Object;:48 - ReplaceComparisonOperator <= -> -1
   * Goal 17. Weak Mutation 3: org.jbasics.parser.StateStack.pop()Ljava/lang/Object;:48 - ReplaceConstant - 1 -> 0
   * Goal 18. Weak Mutation 5: org.jbasics.parser.StateStack.pop()Ljava/lang/Object;:48 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StateStack<String> stateStack0 = new StateStack<String>();
      // Undeclared exception!
      try { 
        stateStack0.pop();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jbasics.parser.StateStack", e);
      }
  }

  //Test case number: 13
  /*
   * 30 covered goals:
   * Goal 1. org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: root-Branch
   * Goal 2. org.jbasics.parser.StateStack.<init>()V: root-Branch
   * Goal 3. org.jbasics.parser.StateStack.pop()Ljava/lang/Object;: I5 Branch 1 IFLE L48 - true
   * Goal 4. org.jbasics.parser.StateStack.pop()Ljava/lang/Object;: I11 Branch 2 IFEQ L48 - true
   * Goal 5. Branch org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: root-Branch in context: org.jbasics.parser.StateStack:push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 6. Branch org.jbasics.parser.StateStack.<init>()V: root-Branch in context: org.jbasics.parser.StateStack:<init>()V
   * Goal 7. Branch org.jbasics.parser.StateStack.pop()Ljava/lang/Object;: I5 Branch 1 IFLE L48 - true in context: org.jbasics.parser.StateStack:pop()Ljava/lang/Object;
   * Goal 8. Branch org.jbasics.parser.StateStack.pop()Ljava/lang/Object;: I11 Branch 2 IFEQ L48 - true in context: org.jbasics.parser.StateStack:pop()Ljava/lang/Object;
   * Goal 9. [Output]: org.jbasics.parser.StateStack.pop()Ljava/lang/Object;:Null
   * Goal 10. [Output]: org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;:Null
   * Goal 11. org.jbasics.parser.StateStack.<init>()V: Line 38
   * Goal 12. org.jbasics.parser.StateStack.<init>()V: Line 39
   * Goal 13. org.jbasics.parser.StateStack.<init>()V: Line 40
   * Goal 14. org.jbasics.parser.StateStack.pop()Ljava/lang/Object;: Line 48
   * Goal 15. org.jbasics.parser.StateStack.pop()Ljava/lang/Object;: Line 51
   * Goal 16. org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 43
   * Goal 17. org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 44
   * Goal 18. [METHOD] org.jbasics.parser.StateStack.<init>()V
   * Goal 19. [METHOD] org.jbasics.parser.StateStack.pop()Ljava/lang/Object;
   * Goal 20. [METHOD] org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 21. [METHODNOEX] org.jbasics.parser.StateStack.<init>()V
   * Goal 22. [METHODNOEX] org.jbasics.parser.StateStack.pop()Ljava/lang/Object;
   * Goal 23. [METHODNOEX] org.jbasics.parser.StateStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 24. Weak Mutation 1: org.jbasics.parser.StateStack.pop()Ljava/lang/Object;:48 - ReplaceComparisonOperator <= -> ==
   * Goal 25. Weak Mutation 4: org.jbasics.parser.StateStack.pop()Ljava/lang/Object;:48 - ReplaceConstant - 0 -> 1
   * Goal 26. Weak Mutation 5: org.jbasics.parser.StateStack.pop()Ljava/lang/Object;:48 - ReplaceComparisonOperator == -> !=
   * Goal 27. Weak Mutation 6: org.jbasics.parser.StateStack.pop()Ljava/lang/Object;:51 - ReplaceConstant - 1 -> 0
   * Goal 28. Weak Mutation 7: org.jbasics.parser.StateStack.pop()Ljava/lang/Object;:51 - ReplaceArithmeticOperator - -> +
   * Goal 29. Weak Mutation 9: org.jbasics.parser.StateStack.pop()Ljava/lang/Object;:51 - ReplaceArithmeticOperator - -> *
   * Goal 30. Weak Mutation 10: org.jbasics.parser.StateStack.pop()Ljava/lang/Object;:51 - ReplaceArithmeticOperator - -> /
   */

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StateStack<String> stateStack0 = new StateStack<String>();
      stateStack0.push((String) null);
      String string0 = stateStack0.pop();
      assertNull(string0);
  }

  //Test case number: 14
  /*
   * 13 covered goals:
   * Goal 1. org.jbasics.parser.StateStack.size()I: root-Branch
   * Goal 2. org.jbasics.parser.StateStack.<init>()V: root-Branch
   * Goal 3. Branch org.jbasics.parser.StateStack.<init>()V: root-Branch in context: org.jbasics.parser.StateStack:<init>()V
   * Goal 4. Branch org.jbasics.parser.StateStack.size()I: root-Branch in context: org.jbasics.parser.StateStack:size()I
   * Goal 5. [Output]: org.jbasics.parser.StateStack.size()I:Zero
   * Goal 6. org.jbasics.parser.StateStack.<init>()V: Line 38
   * Goal 7. org.jbasics.parser.StateStack.<init>()V: Line 39
   * Goal 8. org.jbasics.parser.StateStack.<init>()V: Line 40
   * Goal 9. org.jbasics.parser.StateStack.size()I: Line 73
   * Goal 10. [METHOD] org.jbasics.parser.StateStack.<init>()V
   * Goal 11. [METHOD] org.jbasics.parser.StateStack.size()I
   * Goal 12. [METHODNOEX] org.jbasics.parser.StateStack.<init>()V
   * Goal 13. [METHODNOEX] org.jbasics.parser.StateStack.size()I
   */

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StateStack<String> stateStack0 = new StateStack<String>();
      int int0 = stateStack0.size();
      assertEquals(0, int0);
  }
}
