/*
 * LASSO - an Observatorium for the Dynamic Selection, Analysis and Comparison of Software
 * Copyright (C) 2024 Marcus Kessel (University of Mannheim) and LASSO contributers
 *
 * This file is part of LASSO.
 *
 * LASSO is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * LASSO is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with LASSO.  If not, see <https://www.gnu.org/licenses/>.
 */
/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 04 15:30:19 GMT 2021
 */

package com.jkoolcloud.tnt4j.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.BoundType;
import com.jkoolcloud.tnt4j.utils.LightStack;
import java.io.InputStream;
import java.util.EmptyStackException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class LightStack_0_Test {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.jkoolcloud.tnt4j.utils.LightStack"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/usr/src/mymaven/91a8e57d-cffe-4bd6-b1f0-1859366e8f5e"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(LightStack_0_Test.class.getClassLoader() ,
      "com.jkoolcloud.tnt4j.utils.LightStack",
      "com.google.common.collect.BoundType"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(LightStack_0_Test.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.jkoolcloud.tnt4j.utils.LightStack",
      "com.google.common.collect.RangeGwtSerializationDependencies",
      "com.google.common.collect.Cut",
      "com.google.common.collect.Cut$BelowAll",
      "com.google.common.collect.Cut$AboveAll",
      "com.google.common.base.Preconditions",
      "com.google.common.collect.Range",
      "com.google.common.hash.BloomFilter",
      "com.google.common.hash.BloomFilterStrategies",
      "com.google.common.base.Strings",
      "com.google.common.hash.BloomFilterStrategies$LockFreeBitArray",
      "com.google.common.math.LongMath",
      "com.google.common.math.LongMath$1",
      "com.google.common.primitives.IntsMethodsForWeb",
      "com.google.common.primitives.Ints",
      "com.google.common.hash.Striped64$1",
      "com.google.common.hash.Striped64",
      "com.google.common.hash.LongAdder",
      "com.google.common.hash.LongAddables$1",
      "com.google.common.hash.LongAddables",
      "com.google.common.collect.Cut$AboveValue",
      "com.google.common.collect.Range$1",
      "com.google.common.collect.Cut$BelowValue",
      "com.google.common.primitives.Booleans",
      "com.google.common.collect.DiscreteDomain",
      "com.google.common.collect.DiscreteDomain$IntegerDomain",
      "com.google.common.base.Converter",
      "com.google.common.base.Converter$FunctionBasedConverter",
      "com.google.common.base.Converter$IdentityConverter",
      "com.google.common.base.Converter$ConverterComposition",
      "com.google.common.math.DoubleMath",
      "com.google.common.math.DoubleUtils",
      "com.google.common.math.DoubleMath$1",
      "com.google.common.math.MathPreconditions",
      "com.google.common.primitives.UnsignedBytes"
    );
  }

  //Test case number: 0
  /*
   * 40 covered goals:
   * Goal 1. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch
   * Goal 2. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: I6 Branch 1 IF_ICMPLT L60 - false
   * Goal 3. com.jkoolcloud.tnt4j.utils.LightStack.empty()Z: I4 Branch 5 IFNE L139 - true
   * Goal 4. Branch com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:<init>()V
   * Goal 5. Branch com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: I6 Branch 1 IF_ICMPLT L60 - false in context: com.jkoolcloud.tnt4j.utils.LightStack:push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 6. Branch com.jkoolcloud.tnt4j.utils.LightStack.empty()Z: I4 Branch 5 IFNE L139 - true in context: com.jkoolcloud.tnt4j.utils.LightStack:empty()Z
   * Goal 7. [Output]: com.jkoolcloud.tnt4j.utils.LightStack.empty()Z:False
   * Goal 8. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 32
   * Goal 9. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 39
   * Goal 10. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 40
   * Goal 11. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: Line 32
   * Goal 12. com.jkoolcloud.tnt4j.utils.LightStack.empty()Z: Line 139
   * Goal 13. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 60
   * Goal 14. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 61
   * Goal 15. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 65
   * Goal 16. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 66
   * Goal 17. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 18. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.empty()Z
   * Goal 19. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 20. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 21. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.empty()Z
   * Goal 22. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 23. Weak Mutation 0: com.jkoolcloud.tnt4j.utils.LightStack.<init>()V:32 - ReplaceConstant - 0 -> 1
   * Goal 24. Weak Mutation 2: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp Negation
   * Goal 25. Weak Mutation 3: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp +1
   * Goal 26. Weak Mutation 4: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp -1
   * Goal 27. Weak Mutation 7: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - ReplaceComparisonOperator < -> <=
   * Goal 28. Weak Mutation 11: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - InsertUnaryOp Negation
   * Goal 29. Weak Mutation 12: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - InsertUnaryOp +1
   * Goal 30. Weak Mutation 13: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - InsertUnaryOp -1
   * Goal 31. Weak Mutation 14: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceConstant - 1 -> 0
   * Goal 32. Weak Mutation 15: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> %
   * Goal 33. Weak Mutation 16: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> -
   * Goal 34. Weak Mutation 17: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> *
   * Goal 35. Weak Mutation 18: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> /
   * Goal 36. Weak Mutation 74: com.jkoolcloud.tnt4j.utils.LightStack.empty()Z:139 - InsertUnaryOp Negation
   * Goal 37. Weak Mutation 75: com.jkoolcloud.tnt4j.utils.LightStack.empty()Z:139 - InsertUnaryOp +1
   * Goal 38. Weak Mutation 76: com.jkoolcloud.tnt4j.utils.LightStack.empty()Z:139 - InsertUnaryOp -1
   * Goal 39. Weak Mutation 78: com.jkoolcloud.tnt4j.utils.LightStack.empty()Z:139 - ReplaceComparisonOperator != -> <
   * Goal 40. Weak Mutation 81: com.jkoolcloud.tnt4j.utils.LightStack.empty()Z:139 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LightStack<Object> lightStack0 = new LightStack<Object>();
      assertTrue(lightStack0.empty());
      
      Integer integer0 = new Integer((-1971));
      lightStack0.push(integer0);
      boolean boolean0 = lightStack0.empty();
      assertFalse(boolean0);
  }

  //Test case number: 1
  /*
   * 67 covered goals:
   * Goal 1. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch
   * Goal 2. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: I6 Branch 1 IF_ICMPLT L60 - false
   * Goal 3. com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;: I9 Branch 2 IF_ACMPEQ L97 - true
   * Goal 4. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: I4 Branch 3 IFNE L113 - true
   * Goal 5. Branch com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:<init>()V
   * Goal 6. Branch com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: I6 Branch 1 IF_ICMPLT L60 - false in context: com.jkoolcloud.tnt4j.utils.LightStack:push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 7. Branch com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;: I9 Branch 2 IF_ACMPEQ L97 - true in context: com.jkoolcloud.tnt4j.utils.LightStack:pop(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 8. [Output]: com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;:NonNull
   * Goal 9. [Output]: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:NonNull
   * Goal 10. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 32
   * Goal 11. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 39
   * Goal 12. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 40
   * Goal 13. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: Line 32
   * Goal 14. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: Line 113
   * Goal 15. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: Line 116
   * Goal 16. com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;: Line 96
   * Goal 17. com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;: Line 97
   * Goal 18. com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;: Line 100
   * Goal 19. com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;: Line 101
   * Goal 20. com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;: Line 102
   * Goal 21. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 60
   * Goal 22. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 61
   * Goal 23. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 65
   * Goal 24. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 66
   * Goal 25. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 26. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 27. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 28. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 29. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 30. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 31. Weak Mutation 0: com.jkoolcloud.tnt4j.utils.LightStack.<init>()V:32 - ReplaceConstant - 0 -> 1
   * Goal 32. Weak Mutation 2: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp Negation
   * Goal 33. Weak Mutation 3: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp +1
   * Goal 34. Weak Mutation 4: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp -1
   * Goal 35. Weak Mutation 7: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - ReplaceComparisonOperator < -> <=
   * Goal 36. Weak Mutation 11: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - InsertUnaryOp Negation
   * Goal 37. Weak Mutation 12: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - InsertUnaryOp +1
   * Goal 38. Weak Mutation 13: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - InsertUnaryOp -1
   * Goal 39. Weak Mutation 14: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceConstant - 1 -> 0
   * Goal 40. Weak Mutation 15: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> %
   * Goal 41. Weak Mutation 16: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> -
   * Goal 42. Weak Mutation 17: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> *
   * Goal 43. Weak Mutation 18: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> /
   * Goal 44. Weak Mutation 32: com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;:97 - ReplaceComparisonOperator == -> !=
   * Goal 45. Weak Mutation 34: com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;:100 - InsertUnaryOp Negation
   * Goal 46. Weak Mutation 35: com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;:100 - InsertUnaryOp +1
   * Goal 47. Weak Mutation 36: com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;:100 - InsertUnaryOp -1
   * Goal 48. Weak Mutation 37: com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;:100 - ReplaceConstant - 1 -> 0
   * Goal 49. Weak Mutation 38: com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;:100 - ReplaceArithmeticOperator - -> +
   * Goal 50. Weak Mutation 39: com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;:100 - ReplaceArithmeticOperator - -> %
   * Goal 51. Weak Mutation 40: com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;:100 - ReplaceArithmeticOperator - -> *
   * Goal 52. Weak Mutation 41: com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;:100 - ReplaceArithmeticOperator - -> /
   * Goal 53. Weak Mutation 42: com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;:101 - InsertUnaryOp Negation
   * Goal 54. Weak Mutation 43: com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;:101 - InsertUnaryOp +1
   * Goal 55. Weak Mutation 44: com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;:101 - InsertUnaryOp -1
   * Goal 56. Weak Mutation 46: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp Negation
   * Goal 57. Weak Mutation 47: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp +1
   * Goal 58. Weak Mutation 48: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp -1
   * Goal 59. Weak Mutation 50: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - ReplaceComparisonOperator != -> <
   * Goal 60. Weak Mutation 52: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp Negation
   * Goal 61. Weak Mutation 53: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp +1
   * Goal 62. Weak Mutation 54: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp -1
   * Goal 63. Weak Mutation 55: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceConstant - 1 -> 0
   * Goal 64. Weak Mutation 56: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> +
   * Goal 65. Weak Mutation 57: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> %
   * Goal 66. Weak Mutation 58: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> *
   * Goal 67. Weak Mutation 59: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> /
   */

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BoundType boundType0 = BoundType.OPEN;
      LightStack<BoundType> lightStack0 = new LightStack<BoundType>();
      BoundType boundType1 = lightStack0.push(boundType0);
      lightStack0.push(boundType1);
      lightStack0.pop(boundType0);
      assertFalse(lightStack0.empty());
  }

  //Test case number: 2
  /*
   * 65 covered goals:
   * Goal 1. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch
   * Goal 2. com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;: root-Branch
   * Goal 3. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: I6 Branch 1 IF_ICMPLT L60 - false
   * Goal 4. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: I4 Branch 3 IFNE L113 - true
   * Goal 5. Branch com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:pop()Ljava/lang/Object;
   * Goal 6. Branch com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:<init>()V
   * Goal 7. Branch com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: I6 Branch 1 IF_ICMPLT L60 - false in context: com.jkoolcloud.tnt4j.utils.LightStack:push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 8. [Output]: com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;:Null
   * Goal 9. [Output]: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:Null
   * Goal 10. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 32
   * Goal 11. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 39
   * Goal 12. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 40
   * Goal 13. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: Line 32
   * Goal 14. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: Line 113
   * Goal 15. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: Line 116
   * Goal 16. com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;: Line 77
   * Goal 17. com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;: Line 78
   * Goal 18. com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;: Line 79
   * Goal 19. com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;: Line 80
   * Goal 20. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 60
   * Goal 21. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 61
   * Goal 22. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 65
   * Goal 23. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 66
   * Goal 24. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 25. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;
   * Goal 26. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 27. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 28. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;
   * Goal 29. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 30. Weak Mutation 0: com.jkoolcloud.tnt4j.utils.LightStack.<init>()V:32 - ReplaceConstant - 0 -> 1
   * Goal 31. Weak Mutation 2: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp Negation
   * Goal 32. Weak Mutation 3: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp +1
   * Goal 33. Weak Mutation 4: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp -1
   * Goal 34. Weak Mutation 7: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - ReplaceComparisonOperator < -> <=
   * Goal 35. Weak Mutation 11: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - InsertUnaryOp Negation
   * Goal 36. Weak Mutation 12: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - InsertUnaryOp +1
   * Goal 37. Weak Mutation 13: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - InsertUnaryOp -1
   * Goal 38. Weak Mutation 14: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceConstant - 1 -> 0
   * Goal 39. Weak Mutation 15: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> %
   * Goal 40. Weak Mutation 16: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> -
   * Goal 41. Weak Mutation 17: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> *
   * Goal 42. Weak Mutation 18: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> /
   * Goal 43. Weak Mutation 19: com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;:78 - InsertUnaryOp Negation
   * Goal 44. Weak Mutation 20: com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;:78 - InsertUnaryOp +1
   * Goal 45. Weak Mutation 21: com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;:78 - InsertUnaryOp -1
   * Goal 46. Weak Mutation 22: com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;:78 - ReplaceConstant - 1 -> 0
   * Goal 47. Weak Mutation 23: com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;:78 - ReplaceArithmeticOperator - -> +
   * Goal 48. Weak Mutation 24: com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;:78 - ReplaceArithmeticOperator - -> %
   * Goal 49. Weak Mutation 25: com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;:78 - ReplaceArithmeticOperator - -> *
   * Goal 50. Weak Mutation 26: com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;:78 - ReplaceArithmeticOperator - -> /
   * Goal 51. Weak Mutation 27: com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;:79 - InsertUnaryOp Negation
   * Goal 52. Weak Mutation 28: com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;:79 - InsertUnaryOp +1
   * Goal 53. Weak Mutation 29: com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;:79 - InsertUnaryOp -1
   * Goal 54. Weak Mutation 46: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp Negation
   * Goal 55. Weak Mutation 47: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp +1
   * Goal 56. Weak Mutation 48: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp -1
   * Goal 57. Weak Mutation 50: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - ReplaceComparisonOperator != -> <
   * Goal 58. Weak Mutation 52: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp Negation
   * Goal 59. Weak Mutation 53: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp +1
   * Goal 60. Weak Mutation 54: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp -1
   * Goal 61. Weak Mutation 55: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceConstant - 1 -> 0
   * Goal 62. Weak Mutation 56: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> +
   * Goal 63. Weak Mutation 57: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> %
   * Goal 64. Weak Mutation 58: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> *
   * Goal 65. Weak Mutation 59: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> /
   */

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LightStack<String> lightStack0 = new LightStack<String>();
      lightStack0.push((String) null);
      lightStack0.push((String) null);
      lightStack0.pop();
      assertFalse(lightStack0.empty());
  }

  //Test case number: 3
  /*
   * 30 covered goals:
   * Goal 1. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch
   * Goal 2. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: I6 Branch 1 IF_ICMPLT L60 - false
   * Goal 3. Branch com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:<init>()V
   * Goal 4. Branch com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: I6 Branch 1 IF_ICMPLT L60 - false in context: com.jkoolcloud.tnt4j.utils.LightStack:push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 5. [Output]: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:NonNull
   * Goal 6. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 32
   * Goal 7. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 39
   * Goal 8. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 40
   * Goal 9. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: Line 32
   * Goal 10. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 60
   * Goal 11. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 61
   * Goal 12. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 65
   * Goal 13. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 66
   * Goal 14. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 15. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 16. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 17. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 18. Weak Mutation 0: com.jkoolcloud.tnt4j.utils.LightStack.<init>()V:32 - ReplaceConstant - 0 -> 1
   * Goal 19. Weak Mutation 2: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp Negation
   * Goal 20. Weak Mutation 3: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp +1
   * Goal 21. Weak Mutation 4: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp -1
   * Goal 22. Weak Mutation 5: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - ReplaceComparisonOperator < -> !=
   * Goal 23. Weak Mutation 11: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - InsertUnaryOp Negation
   * Goal 24. Weak Mutation 12: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - InsertUnaryOp +1
   * Goal 25. Weak Mutation 13: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - InsertUnaryOp -1
   * Goal 26. Weak Mutation 14: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceConstant - 1 -> 0
   * Goal 27. Weak Mutation 15: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> %
   * Goal 28. Weak Mutation 16: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> -
   * Goal 29. Weak Mutation 17: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> *
   * Goal 30. Weak Mutation 18: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> /
   */

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LightStack<String> lightStack0 = new LightStack<String>();
      lightStack0.cursor = 3832;
      lightStack0.push("");
      assertEquals(3833, lightStack0.size());
  }

  //Test case number: 4
  /*
   * 39 covered goals:
   * Goal 1. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: root-Branch
   * Goal 2. com.jkoolcloud.tnt4j.utils.LightStack.size()I: root-Branch
   * Goal 3. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: I6 Branch 1 IF_ICMPLT L60 - false
   * Goal 4. Branch com.jkoolcloud.tnt4j.utils.LightStack.size()I: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:size()I
   * Goal 5. Branch com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:<init>(I)V
   * Goal 6. Branch com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: I6 Branch 1 IF_ICMPLT L60 - false in context: com.jkoolcloud.tnt4j.utils.LightStack:push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 7. [Output]: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:NonNull
   * Goal 8. [Output]: com.jkoolcloud.tnt4j.utils.LightStack.size()I:Positive
   * Goal 9. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 32
   * Goal 10. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: Line 32
   * Goal 11. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: Line 49
   * Goal 12. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: Line 50
   * Goal 13. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 60
   * Goal 14. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 61
   * Goal 15. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 65
   * Goal 16. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 66
   * Goal 17. com.jkoolcloud.tnt4j.utils.LightStack.size()I: Line 144
   * Goal 18. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V
   * Goal 19. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 20. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.size()I
   * Goal 21. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V
   * Goal 22. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 23. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.size()I
   * Goal 24. Weak Mutation 1: com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V:32 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 2: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp Negation
   * Goal 26. Weak Mutation 3: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp +1
   * Goal 27. Weak Mutation 4: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp -1
   * Goal 28. Weak Mutation 7: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - ReplaceComparisonOperator < -> <=
   * Goal 29. Weak Mutation 11: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - InsertUnaryOp Negation
   * Goal 30. Weak Mutation 12: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - InsertUnaryOp +1
   * Goal 31. Weak Mutation 13: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - InsertUnaryOp -1
   * Goal 32. Weak Mutation 14: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceConstant - 1 -> 0
   * Goal 33. Weak Mutation 15: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> %
   * Goal 34. Weak Mutation 16: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> -
   * Goal 35. Weak Mutation 17: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> *
   * Goal 36. Weak Mutation 18: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> /
   * Goal 37. Weak Mutation 82: com.jkoolcloud.tnt4j.utils.LightStack.size()I:144 - InsertUnaryOp Negation
   * Goal 38. Weak Mutation 83: com.jkoolcloud.tnt4j.utils.LightStack.size()I:144 - InsertUnaryOp +1
   * Goal 39. Weak Mutation 84: com.jkoolcloud.tnt4j.utils.LightStack.size()I:144 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LightStack<String> lightStack0 = new LightStack<String>(0);
      lightStack0.push("");
      int int0 = lightStack0.size();
      assertEquals(1, int0);
  }

  //Test case number: 5
  /*
   * 18 covered goals:
   * Goal 1. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch
   * Goal 2. com.jkoolcloud.tnt4j.utils.LightStack.size()I: root-Branch
   * Goal 3. Branch com.jkoolcloud.tnt4j.utils.LightStack.size()I: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:size()I
   * Goal 4. Branch com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:<init>()V
   * Goal 5. [Output]: com.jkoolcloud.tnt4j.utils.LightStack.size()I:Negative
   * Goal 6. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 32
   * Goal 7. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 39
   * Goal 8. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 40
   * Goal 9. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: Line 32
   * Goal 10. com.jkoolcloud.tnt4j.utils.LightStack.size()I: Line 144
   * Goal 11. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 12. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.size()I
   * Goal 13. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 14. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.size()I
   * Goal 15. Weak Mutation 0: com.jkoolcloud.tnt4j.utils.LightStack.<init>()V:32 - ReplaceConstant - 0 -> 1
   * Goal 16. Weak Mutation 82: com.jkoolcloud.tnt4j.utils.LightStack.size()I:144 - InsertUnaryOp Negation
   * Goal 17. Weak Mutation 83: com.jkoolcloud.tnt4j.utils.LightStack.size()I:144 - InsertUnaryOp +1
   * Goal 18. Weak Mutation 84: com.jkoolcloud.tnt4j.utils.LightStack.size()I:144 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LightStack<Object> lightStack0 = new LightStack<Object>();
      lightStack0.cursor = (-2045);
      int int0 = lightStack0.size();
      assertEquals((-2045), int0);
  }

  //Test case number: 6
  /*
   * 63 covered goals:
   * Goal 1. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: root-Branch
   * Goal 2. com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;: root-Branch
   * Goal 3. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: I6 Branch 1 IF_ICMPLT L60 - false
   * Goal 4. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: I4 Branch 3 IFNE L113 - true
   * Goal 5. Branch com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:pop()Ljava/lang/Object;
   * Goal 6. Branch com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:<init>(I)V
   * Goal 7. Branch com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: I6 Branch 1 IF_ICMPLT L60 - false in context: com.jkoolcloud.tnt4j.utils.LightStack:push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 8. [Output]: com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;:NonNull
   * Goal 9. [Output]: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:NonNull
   * Goal 10. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 32
   * Goal 11. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: Line 32
   * Goal 12. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: Line 49
   * Goal 13. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: Line 50
   * Goal 14. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: Line 113
   * Goal 15. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: Line 116
   * Goal 16. com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;: Line 77
   * Goal 17. com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;: Line 78
   * Goal 18. com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;: Line 79
   * Goal 19. com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;: Line 80
   * Goal 20. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 60
   * Goal 21. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 61
   * Goal 22. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 65
   * Goal 23. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 66
   * Goal 24. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V
   * Goal 25. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;
   * Goal 26. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 27. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V
   * Goal 28. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;
   * Goal 29. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 30. Weak Mutation 1: com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V:32 - ReplaceConstant - 0 -> 1
   * Goal 31. Weak Mutation 2: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp Negation
   * Goal 32. Weak Mutation 3: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp +1
   * Goal 33. Weak Mutation 4: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp -1
   * Goal 34. Weak Mutation 7: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - ReplaceComparisonOperator < -> <=
   * Goal 35. Weak Mutation 11: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - InsertUnaryOp Negation
   * Goal 36. Weak Mutation 12: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - InsertUnaryOp +1
   * Goal 37. Weak Mutation 13: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - InsertUnaryOp -1
   * Goal 38. Weak Mutation 14: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceConstant - 1 -> 0
   * Goal 39. Weak Mutation 15: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> %
   * Goal 40. Weak Mutation 16: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> -
   * Goal 41. Weak Mutation 17: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> *
   * Goal 42. Weak Mutation 18: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> /
   * Goal 43. Weak Mutation 19: com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;:78 - InsertUnaryOp Negation
   * Goal 44. Weak Mutation 20: com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;:78 - InsertUnaryOp +1
   * Goal 45. Weak Mutation 21: com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;:78 - InsertUnaryOp -1
   * Goal 46. Weak Mutation 22: com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;:78 - ReplaceConstant - 1 -> 0
   * Goal 47. Weak Mutation 23: com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;:78 - ReplaceArithmeticOperator - -> +
   * Goal 48. Weak Mutation 25: com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;:78 - ReplaceArithmeticOperator - -> *
   * Goal 49. Weak Mutation 26: com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;:78 - ReplaceArithmeticOperator - -> /
   * Goal 50. Weak Mutation 27: com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;:79 - InsertUnaryOp Negation
   * Goal 51. Weak Mutation 28: com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;:79 - InsertUnaryOp +1
   * Goal 52. Weak Mutation 29: com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;:79 - InsertUnaryOp -1
   * Goal 53. Weak Mutation 46: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp Negation
   * Goal 54. Weak Mutation 47: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp +1
   * Goal 55. Weak Mutation 48: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp -1
   * Goal 56. Weak Mutation 50: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - ReplaceComparisonOperator != -> <
   * Goal 57. Weak Mutation 52: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp Negation
   * Goal 58. Weak Mutation 53: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp +1
   * Goal 59. Weak Mutation 54: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp -1
   * Goal 60. Weak Mutation 55: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceConstant - 1 -> 0
   * Goal 61. Weak Mutation 56: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> +
   * Goal 62. Weak Mutation 58: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> *
   * Goal 63. Weak Mutation 59: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> /
   */

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LightStack<String> lightStack0 = new LightStack<String>(0);
      lightStack0.push("");
      String string0 = lightStack0.pop();
      assertEquals("", string0);
  }

  //Test case number: 7
  /*
   * 20 covered goals:
   * Goal 1. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch
   * Goal 2. com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;: I4 Branch 4 IFNE L127 - false
   * Goal 3. Branch com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:<init>()V
   * Goal 4. Branch com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;: I4 Branch 4 IFNE L127 - false in context: com.jkoolcloud.tnt4j.utils.LightStack:peek(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 5. [Output]: com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;:Null
   * Goal 6. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 32
   * Goal 7. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 39
   * Goal 8. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 40
   * Goal 9. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: Line 32
   * Goal 10. com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;: Line 127
   * Goal 11. com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;: Line 128
   * Goal 12. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 13. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 14. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 15. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 16. Weak Mutation 0: com.jkoolcloud.tnt4j.utils.LightStack.<init>()V:32 - ReplaceConstant - 0 -> 1
   * Goal 17. Weak Mutation 60: com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;:127 - InsertUnaryOp Negation
   * Goal 18. Weak Mutation 61: com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;:127 - InsertUnaryOp +1
   * Goal 19. Weak Mutation 62: com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;:127 - InsertUnaryOp -1
   * Goal 20. Weak Mutation 63: com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;:127 - ReplaceComparisonOperator != -> -1
   */

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LightStack<Object> lightStack0 = new LightStack<Object>();
      Object object0 = lightStack0.peek((Object) null);
      assertNull(object0);
  }

  //Test case number: 8
  /*
   * 48 covered goals:
   * Goal 1. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch
   * Goal 2. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: I6 Branch 1 IF_ICMPLT L60 - false
   * Goal 3. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: I4 Branch 3 IFNE L113 - true
   * Goal 4. Branch com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:<init>()V
   * Goal 5. Branch com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: I6 Branch 1 IF_ICMPLT L60 - false in context: com.jkoolcloud.tnt4j.utils.LightStack:push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 6. Branch com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: I4 Branch 3 IFNE L113 - true in context: com.jkoolcloud.tnt4j.utils.LightStack:peek()Ljava/lang/Object;
   * Goal 7. [Output]: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:NonNull
   * Goal 8. [Output]: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:NonNull
   * Goal 9. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 32
   * Goal 10. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 39
   * Goal 11. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 40
   * Goal 12. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: Line 32
   * Goal 13. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: Line 113
   * Goal 14. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: Line 116
   * Goal 15. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 60
   * Goal 16. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 61
   * Goal 17. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 65
   * Goal 18. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 66
   * Goal 19. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 20. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;
   * Goal 21. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 22. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 23. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;
   * Goal 24. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 25. Weak Mutation 0: com.jkoolcloud.tnt4j.utils.LightStack.<init>()V:32 - ReplaceConstant - 0 -> 1
   * Goal 26. Weak Mutation 2: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp Negation
   * Goal 27. Weak Mutation 3: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp +1
   * Goal 28. Weak Mutation 4: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp -1
   * Goal 29. Weak Mutation 7: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - ReplaceComparisonOperator < -> <=
   * Goal 30. Weak Mutation 11: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - InsertUnaryOp Negation
   * Goal 31. Weak Mutation 12: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - InsertUnaryOp +1
   * Goal 32. Weak Mutation 13: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - InsertUnaryOp -1
   * Goal 33. Weak Mutation 14: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceConstant - 1 -> 0
   * Goal 34. Weak Mutation 15: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> %
   * Goal 35. Weak Mutation 16: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> -
   * Goal 36. Weak Mutation 17: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> *
   * Goal 37. Weak Mutation 18: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> /
   * Goal 38. Weak Mutation 46: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp Negation
   * Goal 39. Weak Mutation 47: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp +1
   * Goal 40. Weak Mutation 48: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp -1
   * Goal 41. Weak Mutation 50: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - ReplaceComparisonOperator != -> <
   * Goal 42. Weak Mutation 52: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp Negation
   * Goal 43. Weak Mutation 53: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp +1
   * Goal 44. Weak Mutation 54: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp -1
   * Goal 45. Weak Mutation 55: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceConstant - 1 -> 0
   * Goal 46. Weak Mutation 56: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> +
   * Goal 47. Weak Mutation 58: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> *
   * Goal 48. Weak Mutation 59: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> /
   */

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LightStack<String> lightStack0 = new LightStack<String>();
      lightStack0.push("");
      String string0 = lightStack0.peek();
      assertEquals("", string0);
  }

  //Test case number: 9
  /*
   * 22 covered goals:
   * Goal 1. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch
   * Goal 2. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: I6 Branch 1 IF_ICMPLT L60 - true
   * Goal 3. Branch com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:<init>()V
   * Goal 4. Branch com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: I6 Branch 1 IF_ICMPLT L60 - true in context: com.jkoolcloud.tnt4j.utils.LightStack:push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 5. push(Ljava/lang/Object;)Ljava/lang/Object;_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 6. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 32
   * Goal 7. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 39
   * Goal 8. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 40
   * Goal 9. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: Line 32
   * Goal 10. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 60
   * Goal 11. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 63
   * Goal 12. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 13. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 14. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 15. Weak Mutation 0: com.jkoolcloud.tnt4j.utils.LightStack.<init>()V:32 - ReplaceConstant - 0 -> 1
   * Goal 16. Weak Mutation 2: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp Negation
   * Goal 17. Weak Mutation 3: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp +1
   * Goal 18. Weak Mutation 4: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp -1
   * Goal 19. Weak Mutation 6: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - ReplaceComparisonOperator < -> -2
   * Goal 20. Weak Mutation 8: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:63 - InsertUnaryOp Negation
   * Goal 21. Weak Mutation 9: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:63 - InsertUnaryOp +1
   * Goal 22. Weak Mutation 10: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:63 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LightStack<BoundType> lightStack0 = new LightStack<BoundType>();
      lightStack0.cursor = (-2304);
      BoundType boundType0 = BoundType.CLOSED;
      // Undeclared exception!
      try { 
        lightStack0.push(boundType0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2304
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  //Test case number: 10
  /*
   * 19 covered goals:
   * Goal 1. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch
   * Goal 2. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: I4 Branch 3 IFNE L113 - false
   * Goal 3. Branch com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:<init>()V
   * Goal 4. pop(Ljava/lang/Object;)Ljava/lang/Object;_java.util.EmptyStackException_EXPLICIT
   * Goal 5. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 32
   * Goal 6. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 39
   * Goal 7. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 40
   * Goal 8. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: Line 32
   * Goal 9. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: Line 113
   * Goal 10. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: Line 114
   * Goal 11. com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;: Line 96
   * Goal 12. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 13. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 14. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 15. Weak Mutation 0: com.jkoolcloud.tnt4j.utils.LightStack.<init>()V:32 - ReplaceConstant - 0 -> 1
   * Goal 16. Weak Mutation 46: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp Negation
   * Goal 17. Weak Mutation 47: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp +1
   * Goal 18. Weak Mutation 48: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp -1
   * Goal 19. Weak Mutation 49: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - ReplaceComparisonOperator != -> -1
   */

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LightStack<String> lightStack0 = new LightStack<String>();
      // Undeclared exception!
      try { 
        lightStack0.pop("[]");
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jkoolcloud.tnt4j.utils.LightStack", e);
      }
  }

  //Test case number: 11
  /*
   * 27 covered goals:
   * Goal 1. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch
   * Goal 2. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: I4 Branch 3 IFNE L113 - true
   * Goal 3. Branch com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:<init>()V
   * Goal 4. pop(Ljava/lang/Object;)Ljava/lang/Object;_java.lang.IndexOutOfBoundsException_IMPLICIT
   * Goal 5. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 32
   * Goal 6. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 39
   * Goal 7. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 40
   * Goal 8. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: Line 32
   * Goal 9. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: Line 113
   * Goal 10. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: Line 116
   * Goal 11. com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;: Line 96
   * Goal 12. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 13. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 14. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 15. Weak Mutation 0: com.jkoolcloud.tnt4j.utils.LightStack.<init>()V:32 - ReplaceConstant - 0 -> 1
   * Goal 16. Weak Mutation 46: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp Negation
   * Goal 17. Weak Mutation 47: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp +1
   * Goal 18. Weak Mutation 48: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp -1
   * Goal 19. Weak Mutation 50: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - ReplaceComparisonOperator != -> <
   * Goal 20. Weak Mutation 52: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp Negation
   * Goal 21. Weak Mutation 53: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp +1
   * Goal 22. Weak Mutation 54: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp -1
   * Goal 23. Weak Mutation 55: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceConstant - 1 -> 0
   * Goal 24. Weak Mutation 56: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> +
   * Goal 25. Weak Mutation 57: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> %
   * Goal 26. Weak Mutation 58: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> *
   * Goal 27. Weak Mutation 59: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> /
   */

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LightStack<Object> lightStack0 = new LightStack<Object>();
      lightStack0.cursor = 3833;
      // Undeclared exception!
      try { 
        lightStack0.pop((Object) "");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 3832, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  //Test case number: 12
  /*
   * 27 covered goals:
   * Goal 1. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch
   * Goal 2. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: I4 Branch 3 IFNE L113 - true
   * Goal 3. Branch com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:<init>()V
   * Goal 4. pop(Ljava/lang/Object;)Ljava/lang/Object;_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 5. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 32
   * Goal 6. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 39
   * Goal 7. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 40
   * Goal 8. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: Line 32
   * Goal 9. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: Line 113
   * Goal 10. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: Line 116
   * Goal 11. com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;: Line 96
   * Goal 12. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 13. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 14. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 15. Weak Mutation 0: com.jkoolcloud.tnt4j.utils.LightStack.<init>()V:32 - ReplaceConstant - 0 -> 1
   * Goal 16. Weak Mutation 46: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp Negation
   * Goal 17. Weak Mutation 47: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp +1
   * Goal 18. Weak Mutation 48: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp -1
   * Goal 19. Weak Mutation 51: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - ReplaceComparisonOperator != -> >
   * Goal 20. Weak Mutation 52: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp Negation
   * Goal 21. Weak Mutation 53: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp +1
   * Goal 22. Weak Mutation 54: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp -1
   * Goal 23. Weak Mutation 55: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceConstant - 1 -> 0
   * Goal 24. Weak Mutation 56: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> +
   * Goal 25. Weak Mutation 57: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> %
   * Goal 26. Weak Mutation 58: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> *
   * Goal 27. Weak Mutation 59: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> /
   */

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LightStack<Object> lightStack0 = new LightStack<Object>();
      lightStack0.cursor = (-591);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        lightStack0.pop(object0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -592
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  //Test case number: 13
  /*
   * 28 covered goals:
   * Goal 1. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch
   * Goal 2. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: I4 Branch 3 IFNE L113 - true
   * Goal 3. Branch com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:pop()Ljava/lang/Object;
   * Goal 4. Branch com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:<init>()V
   * Goal 5. pop()Ljava/lang/Object;_java.lang.IndexOutOfBoundsException_IMPLICIT
   * Goal 6. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 32
   * Goal 7. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 39
   * Goal 8. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 40
   * Goal 9. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: Line 32
   * Goal 10. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: Line 113
   * Goal 11. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: Line 116
   * Goal 12. com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;: Line 77
   * Goal 13. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 14. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;
   * Goal 15. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 16. Weak Mutation 0: com.jkoolcloud.tnt4j.utils.LightStack.<init>()V:32 - ReplaceConstant - 0 -> 1
   * Goal 17. Weak Mutation 46: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp Negation
   * Goal 18. Weak Mutation 47: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp +1
   * Goal 19. Weak Mutation 48: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp -1
   * Goal 20. Weak Mutation 50: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 52: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp Negation
   * Goal 22. Weak Mutation 53: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp +1
   * Goal 23. Weak Mutation 54: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp -1
   * Goal 24. Weak Mutation 55: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceConstant - 1 -> 0
   * Goal 25. Weak Mutation 56: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> +
   * Goal 26. Weak Mutation 57: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> %
   * Goal 27. Weak Mutation 58: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> *
   * Goal 28. Weak Mutation 59: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> /
   */

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LightStack<Object> lightStack0 = new LightStack<Object>();
      lightStack0.cursor = 1508;
      // Undeclared exception!
      try { 
        lightStack0.pop();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1507, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  //Test case number: 14
  /*
   * 28 covered goals:
   * Goal 1. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: root-Branch
   * Goal 2. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: I4 Branch 3 IFNE L113 - true
   * Goal 3. Branch com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:pop()Ljava/lang/Object;
   * Goal 4. Branch com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:<init>(I)V
   * Goal 5. pop()Ljava/lang/Object;_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 6. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 32
   * Goal 7. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: Line 32
   * Goal 8. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: Line 49
   * Goal 9. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: Line 50
   * Goal 10. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: Line 113
   * Goal 11. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: Line 116
   * Goal 12. com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;: Line 77
   * Goal 13. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V
   * Goal 14. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;
   * Goal 15. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V
   * Goal 16. Weak Mutation 1: com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V:32 - ReplaceConstant - 0 -> 1
   * Goal 17. Weak Mutation 46: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp Negation
   * Goal 18. Weak Mutation 47: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp +1
   * Goal 19. Weak Mutation 48: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp -1
   * Goal 20. Weak Mutation 51: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - ReplaceComparisonOperator != -> >
   * Goal 21. Weak Mutation 52: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp Negation
   * Goal 22. Weak Mutation 53: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp +1
   * Goal 23. Weak Mutation 54: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp -1
   * Goal 24. Weak Mutation 55: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceConstant - 1 -> 0
   * Goal 25. Weak Mutation 56: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> +
   * Goal 26. Weak Mutation 57: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> %
   * Goal 27. Weak Mutation 58: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> *
   * Goal 28. Weak Mutation 59: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> /
   */

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LightStack<InputStream> lightStack0 = new LightStack<InputStream>(121978);
      lightStack0.cursor = (-3678);
      // Undeclared exception!
      try { 
        lightStack0.pop();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3679
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  //Test case number: 15
  /*
   * 27 covered goals:
   * Goal 1. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch
   * Goal 2. com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;: I4 Branch 4 IFNE L127 - true
   * Goal 3. Branch com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:<init>()V
   * Goal 4. Branch com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;: I4 Branch 4 IFNE L127 - true in context: com.jkoolcloud.tnt4j.utils.LightStack:peek(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 5. peek(Ljava/lang/Object;)Ljava/lang/Object;_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 6. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 32
   * Goal 7. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 39
   * Goal 8. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 40
   * Goal 9. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: Line 32
   * Goal 10. com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;: Line 127
   * Goal 11. com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;: Line 130
   * Goal 12. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 13. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 14. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 15. Weak Mutation 0: com.jkoolcloud.tnt4j.utils.LightStack.<init>()V:32 - ReplaceConstant - 0 -> 1
   * Goal 16. Weak Mutation 60: com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;:127 - InsertUnaryOp Negation
   * Goal 17. Weak Mutation 61: com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;:127 - InsertUnaryOp +1
   * Goal 18. Weak Mutation 62: com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;:127 - InsertUnaryOp -1
   * Goal 19. Weak Mutation 65: com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;:127 - ReplaceComparisonOperator != -> >
   * Goal 20. Weak Mutation 66: com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;:130 - InsertUnaryOp Negation
   * Goal 21. Weak Mutation 67: com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;:130 - InsertUnaryOp +1
   * Goal 22. Weak Mutation 68: com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;:130 - InsertUnaryOp -1
   * Goal 23. Weak Mutation 69: com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;:130 - ReplaceConstant - 1 -> 0
   * Goal 24. Weak Mutation 70: com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;:130 - ReplaceArithmeticOperator - -> +
   * Goal 25. Weak Mutation 71: com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;:130 - ReplaceArithmeticOperator - -> %
   * Goal 26. Weak Mutation 72: com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;:130 - ReplaceArithmeticOperator - -> *
   * Goal 27. Weak Mutation 73: com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;:130 - ReplaceArithmeticOperator - -> /
   */

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LightStack<Object> lightStack0 = new LightStack<Object>();
      lightStack0.cursor = (-3178);
      // Undeclared exception!
      try { 
        lightStack0.peek((Object) lightStack0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 16
  /*
   * 27 covered goals:
   * Goal 1. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch
   * Goal 2. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: I4 Branch 3 IFNE L113 - true
   * Goal 3. Branch com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:<init>()V
   * Goal 4. Branch com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: I4 Branch 3 IFNE L113 - true in context: com.jkoolcloud.tnt4j.utils.LightStack:peek()Ljava/lang/Object;
   * Goal 5. peek()Ljava/lang/Object;_java.lang.IndexOutOfBoundsException_IMPLICIT
   * Goal 6. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 32
   * Goal 7. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 39
   * Goal 8. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 40
   * Goal 9. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: Line 32
   * Goal 10. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: Line 113
   * Goal 11. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: Line 116
   * Goal 12. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 13. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;
   * Goal 14. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 15. Weak Mutation 0: com.jkoolcloud.tnt4j.utils.LightStack.<init>()V:32 - ReplaceConstant - 0 -> 1
   * Goal 16. Weak Mutation 46: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp Negation
   * Goal 17. Weak Mutation 47: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp +1
   * Goal 18. Weak Mutation 48: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp -1
   * Goal 19. Weak Mutation 50: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - ReplaceComparisonOperator != -> <
   * Goal 20. Weak Mutation 52: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp Negation
   * Goal 21. Weak Mutation 53: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp +1
   * Goal 22. Weak Mutation 54: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp -1
   * Goal 23. Weak Mutation 55: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceConstant - 1 -> 0
   * Goal 24. Weak Mutation 56: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> +
   * Goal 25. Weak Mutation 57: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> %
   * Goal 26. Weak Mutation 58: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> *
   * Goal 27. Weak Mutation 59: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> /
   */

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LightStack<BoundType> lightStack0 = new LightStack<BoundType>();
      lightStack0.cursor = 36;
      // Undeclared exception!
      try { 
        lightStack0.peek();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 35, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  //Test case number: 17
  /*
   * 27 covered goals:
   * Goal 1. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch
   * Goal 2. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: I4 Branch 3 IFNE L113 - true
   * Goal 3. Branch com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:<init>()V
   * Goal 4. Branch com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: I4 Branch 3 IFNE L113 - true in context: com.jkoolcloud.tnt4j.utils.LightStack:peek()Ljava/lang/Object;
   * Goal 5. peek()Ljava/lang/Object;_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 6. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 32
   * Goal 7. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 39
   * Goal 8. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 40
   * Goal 9. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: Line 32
   * Goal 10. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: Line 113
   * Goal 11. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: Line 116
   * Goal 12. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 13. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;
   * Goal 14. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 15. Weak Mutation 0: com.jkoolcloud.tnt4j.utils.LightStack.<init>()V:32 - ReplaceConstant - 0 -> 1
   * Goal 16. Weak Mutation 46: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp Negation
   * Goal 17. Weak Mutation 47: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp +1
   * Goal 18. Weak Mutation 48: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp -1
   * Goal 19. Weak Mutation 51: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - ReplaceComparisonOperator != -> >
   * Goal 20. Weak Mutation 52: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp Negation
   * Goal 21. Weak Mutation 53: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp +1
   * Goal 22. Weak Mutation 54: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp -1
   * Goal 23. Weak Mutation 55: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceConstant - 1 -> 0
   * Goal 24. Weak Mutation 56: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> +
   * Goal 25. Weak Mutation 57: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> %
   * Goal 26. Weak Mutation 58: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> *
   * Goal 27. Weak Mutation 59: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> /
   */

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LightStack<BoundType> lightStack0 = new LightStack<BoundType>();
      lightStack0.cursor = (-627);
      // Undeclared exception!
      try { 
        lightStack0.peek();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -628
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  //Test case number: 18
  /*
   * 2 covered goals:
   * Goal 1. <init>(I)V_java.lang.IllegalArgumentException_IMPLICIT
   * Goal 2. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V
   */

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LightStack<BoundType> lightStack0 = null;
      try {
        lightStack0 = new LightStack<BoundType>((-5108));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -5108
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  //Test case number: 19
  /*
   * 19 covered goals:
   * Goal 1. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch
   * Goal 2. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: I4 Branch 3 IFNE L113 - false
   * Goal 3. Branch com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:<init>()V
   * Goal 4. Branch com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: I4 Branch 3 IFNE L113 - false in context: com.jkoolcloud.tnt4j.utils.LightStack:peek()Ljava/lang/Object;
   * Goal 5. peek()Ljava/lang/Object;_java.util.EmptyStackException_EXPLICIT
   * Goal 6. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 32
   * Goal 7. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 39
   * Goal 8. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 40
   * Goal 9. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: Line 32
   * Goal 10. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: Line 113
   * Goal 11. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: Line 114
   * Goal 12. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 13. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;
   * Goal 14. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 15. Weak Mutation 0: com.jkoolcloud.tnt4j.utils.LightStack.<init>()V:32 - ReplaceConstant - 0 -> 1
   * Goal 16. Weak Mutation 46: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp Negation
   * Goal 17. Weak Mutation 47: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp +1
   * Goal 18. Weak Mutation 48: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp -1
   * Goal 19. Weak Mutation 49: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - ReplaceComparisonOperator != -> -1
   */

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LightStack<Object> lightStack0 = new LightStack<Object>();
      // Undeclared exception!
      try { 
        lightStack0.peek();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jkoolcloud.tnt4j.utils.LightStack", e);
      }
  }

  //Test case number: 20
  /*
   * 48 covered goals:
   * Goal 1. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch
   * Goal 2. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: I6 Branch 1 IF_ICMPLT L60 - false
   * Goal 3. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: I4 Branch 3 IFNE L113 - true
   * Goal 4. Branch com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:<init>()V
   * Goal 5. Branch com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: I6 Branch 1 IF_ICMPLT L60 - false in context: com.jkoolcloud.tnt4j.utils.LightStack:push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 6. Branch com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: I4 Branch 3 IFNE L113 - true in context: com.jkoolcloud.tnt4j.utils.LightStack:peek()Ljava/lang/Object;
   * Goal 7. [Output]: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:Null
   * Goal 8. [Output]: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:Null
   * Goal 9. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 32
   * Goal 10. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 39
   * Goal 11. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 40
   * Goal 12. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: Line 32
   * Goal 13. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: Line 113
   * Goal 14. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: Line 116
   * Goal 15. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 60
   * Goal 16. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 61
   * Goal 17. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 65
   * Goal 18. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 66
   * Goal 19. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 20. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;
   * Goal 21. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 22. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 23. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;
   * Goal 24. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 25. Weak Mutation 0: com.jkoolcloud.tnt4j.utils.LightStack.<init>()V:32 - ReplaceConstant - 0 -> 1
   * Goal 26. Weak Mutation 2: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp Negation
   * Goal 27. Weak Mutation 3: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp +1
   * Goal 28. Weak Mutation 4: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp -1
   * Goal 29. Weak Mutation 7: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - ReplaceComparisonOperator < -> <=
   * Goal 30. Weak Mutation 11: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - InsertUnaryOp Negation
   * Goal 31. Weak Mutation 12: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - InsertUnaryOp +1
   * Goal 32. Weak Mutation 13: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - InsertUnaryOp -1
   * Goal 33. Weak Mutation 14: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceConstant - 1 -> 0
   * Goal 34. Weak Mutation 15: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> %
   * Goal 35. Weak Mutation 16: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> -
   * Goal 36. Weak Mutation 17: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> *
   * Goal 37. Weak Mutation 18: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> /
   * Goal 38. Weak Mutation 46: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp Negation
   * Goal 39. Weak Mutation 47: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp +1
   * Goal 40. Weak Mutation 48: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp -1
   * Goal 41. Weak Mutation 50: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - ReplaceComparisonOperator != -> <
   * Goal 42. Weak Mutation 52: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp Negation
   * Goal 43. Weak Mutation 53: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp +1
   * Goal 44. Weak Mutation 54: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp -1
   * Goal 45. Weak Mutation 55: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceConstant - 1 -> 0
   * Goal 46. Weak Mutation 56: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> +
   * Goal 47. Weak Mutation 58: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> *
   * Goal 48. Weak Mutation 59: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> /
   */

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LightStack<Object> lightStack0 = new LightStack<Object>();
      lightStack0.push((Object) null);
      Object object0 = lightStack0.peek();
      assertNull(object0);
  }

  //Test case number: 21
  /*
   * 74 covered goals:
   * Goal 1. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch
   * Goal 2. com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;: root-Branch
   * Goal 3. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: I6 Branch 1 IF_ICMPLT L60 - false
   * Goal 4. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: I4 Branch 3 IFNE L113 - true
   * Goal 5. com.jkoolcloud.tnt4j.utils.LightStack.empty()Z: I4 Branch 5 IFNE L139 - false
   * Goal 6. Branch com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:pop()Ljava/lang/Object;
   * Goal 7. Branch com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:<init>()V
   * Goal 8. Branch com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: I6 Branch 1 IF_ICMPLT L60 - false in context: com.jkoolcloud.tnt4j.utils.LightStack:push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 9. Branch com.jkoolcloud.tnt4j.utils.LightStack.empty()Z: I4 Branch 5 IFNE L139 - false in context: com.jkoolcloud.tnt4j.utils.LightStack:empty()Z
   * Goal 10. [Output]: com.jkoolcloud.tnt4j.utils.LightStack.empty()Z:True
   * Goal 11. [Output]: com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;:Null
   * Goal 12. [Output]: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:Null
   * Goal 13. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 32
   * Goal 14. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 39
   * Goal 15. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 40
   * Goal 16. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: Line 32
   * Goal 17. com.jkoolcloud.tnt4j.utils.LightStack.empty()Z: Line 139
   * Goal 18. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: Line 113
   * Goal 19. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: Line 116
   * Goal 20. com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;: Line 77
   * Goal 21. com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;: Line 78
   * Goal 22. com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;: Line 79
   * Goal 23. com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;: Line 80
   * Goal 24. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 60
   * Goal 25. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 61
   * Goal 26. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 65
   * Goal 27. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 66
   * Goal 28. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 29. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.empty()Z
   * Goal 30. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;
   * Goal 31. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 32. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 33. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.empty()Z
   * Goal 34. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;
   * Goal 35. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 36. Weak Mutation 0: com.jkoolcloud.tnt4j.utils.LightStack.<init>()V:32 - ReplaceConstant - 0 -> 1
   * Goal 37. Weak Mutation 2: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp Negation
   * Goal 38. Weak Mutation 3: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp +1
   * Goal 39. Weak Mutation 4: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp -1
   * Goal 40. Weak Mutation 7: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - ReplaceComparisonOperator < -> <=
   * Goal 41. Weak Mutation 11: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - InsertUnaryOp Negation
   * Goal 42. Weak Mutation 12: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - InsertUnaryOp +1
   * Goal 43. Weak Mutation 13: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - InsertUnaryOp -1
   * Goal 44. Weak Mutation 14: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceConstant - 1 -> 0
   * Goal 45. Weak Mutation 15: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> %
   * Goal 46. Weak Mutation 16: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> -
   * Goal 47. Weak Mutation 17: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> *
   * Goal 48. Weak Mutation 18: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> /
   * Goal 49. Weak Mutation 19: com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;:78 - InsertUnaryOp Negation
   * Goal 50. Weak Mutation 20: com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;:78 - InsertUnaryOp +1
   * Goal 51. Weak Mutation 21: com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;:78 - InsertUnaryOp -1
   * Goal 52. Weak Mutation 22: com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;:78 - ReplaceConstant - 1 -> 0
   * Goal 53. Weak Mutation 23: com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;:78 - ReplaceArithmeticOperator - -> +
   * Goal 54. Weak Mutation 25: com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;:78 - ReplaceArithmeticOperator - -> *
   * Goal 55. Weak Mutation 26: com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;:78 - ReplaceArithmeticOperator - -> /
   * Goal 56. Weak Mutation 27: com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;:79 - InsertUnaryOp Negation
   * Goal 57. Weak Mutation 28: com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;:79 - InsertUnaryOp +1
   * Goal 58. Weak Mutation 29: com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;:79 - InsertUnaryOp -1
   * Goal 59. Weak Mutation 46: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp Negation
   * Goal 60. Weak Mutation 47: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp +1
   * Goal 61. Weak Mutation 48: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp -1
   * Goal 62. Weak Mutation 50: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - ReplaceComparisonOperator != -> <
   * Goal 63. Weak Mutation 52: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp Negation
   * Goal 64. Weak Mutation 53: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp +1
   * Goal 65. Weak Mutation 54: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp -1
   * Goal 66. Weak Mutation 55: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceConstant - 1 -> 0
   * Goal 67. Weak Mutation 56: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> +
   * Goal 68. Weak Mutation 58: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> *
   * Goal 69. Weak Mutation 59: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> /
   * Goal 70. Weak Mutation 74: com.jkoolcloud.tnt4j.utils.LightStack.empty()Z:139 - InsertUnaryOp Negation
   * Goal 71. Weak Mutation 75: com.jkoolcloud.tnt4j.utils.LightStack.empty()Z:139 - InsertUnaryOp +1
   * Goal 72. Weak Mutation 76: com.jkoolcloud.tnt4j.utils.LightStack.empty()Z:139 - InsertUnaryOp -1
   * Goal 73. Weak Mutation 77: com.jkoolcloud.tnt4j.utils.LightStack.empty()Z:139 - ReplaceComparisonOperator != -> -1
   * Goal 74. Weak Mutation 80: com.jkoolcloud.tnt4j.utils.LightStack.empty()Z:139 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LightStack<String> lightStack0 = new LightStack<String>();
      lightStack0.push((String) null);
      assertFalse(lightStack0.empty());
      
      lightStack0.pop();
      boolean boolean0 = lightStack0.empty();
      assertTrue(boolean0);
  }

  //Test case number: 22
  /*
   * 20 covered goals:
   * Goal 1. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch
   * Goal 2. com.jkoolcloud.tnt4j.utils.LightStack.empty()Z: I4 Branch 5 IFNE L139 - true
   * Goal 3. Branch com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:<init>()V
   * Goal 4. Branch com.jkoolcloud.tnt4j.utils.LightStack.empty()Z: I4 Branch 5 IFNE L139 - true in context: com.jkoolcloud.tnt4j.utils.LightStack:empty()Z
   * Goal 5. [Output]: com.jkoolcloud.tnt4j.utils.LightStack.empty()Z:False
   * Goal 6. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 32
   * Goal 7. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 39
   * Goal 8. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 40
   * Goal 9. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: Line 32
   * Goal 10. com.jkoolcloud.tnt4j.utils.LightStack.empty()Z: Line 139
   * Goal 11. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 12. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.empty()Z
   * Goal 13. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 14. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.empty()Z
   * Goal 15. Weak Mutation 0: com.jkoolcloud.tnt4j.utils.LightStack.<init>()V:32 - ReplaceConstant - 0 -> 1
   * Goal 16. Weak Mutation 74: com.jkoolcloud.tnt4j.utils.LightStack.empty()Z:139 - InsertUnaryOp Negation
   * Goal 17. Weak Mutation 75: com.jkoolcloud.tnt4j.utils.LightStack.empty()Z:139 - InsertUnaryOp +1
   * Goal 18. Weak Mutation 76: com.jkoolcloud.tnt4j.utils.LightStack.empty()Z:139 - InsertUnaryOp -1
   * Goal 19. Weak Mutation 79: com.jkoolcloud.tnt4j.utils.LightStack.empty()Z:139 - ReplaceComparisonOperator != -> >
   * Goal 20. Weak Mutation 81: com.jkoolcloud.tnt4j.utils.LightStack.empty()Z:139 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LightStack<Object> lightStack0 = new LightStack<Object>();
      assertTrue(lightStack0.empty());
      
      lightStack0.cursor = (-2045);
      boolean boolean0 = lightStack0.empty();
      assertFalse(boolean0);
  }

  //Test case number: 23
  /*
   * 20 covered goals:
   * Goal 1. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch
   * Goal 2. com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;: I4 Branch 4 IFNE L127 - false
   * Goal 3. Branch com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:<init>()V
   * Goal 4. Branch com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;: I4 Branch 4 IFNE L127 - false in context: com.jkoolcloud.tnt4j.utils.LightStack:peek(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 5. [Output]: com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;:NonNull
   * Goal 6. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 32
   * Goal 7. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 39
   * Goal 8. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 40
   * Goal 9. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: Line 32
   * Goal 10. com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;: Line 127
   * Goal 11. com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;: Line 128
   * Goal 12. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 13. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 14. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 15. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 16. Weak Mutation 0: com.jkoolcloud.tnt4j.utils.LightStack.<init>()V:32 - ReplaceConstant - 0 -> 1
   * Goal 17. Weak Mutation 60: com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;:127 - InsertUnaryOp Negation
   * Goal 18. Weak Mutation 61: com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;:127 - InsertUnaryOp +1
   * Goal 19. Weak Mutation 62: com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;:127 - InsertUnaryOp -1
   * Goal 20. Weak Mutation 63: com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;:127 - ReplaceComparisonOperator != -> -1
   */

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LightStack<String> lightStack0 = new LightStack<String>();
      String string0 = lightStack0.peek("=lj2r |C?`137Ofh`Y");
      assertEquals("=lj2r |C?`137Ofh`Y", string0);
  }

  //Test case number: 24
  /*
   * 27 covered goals:
   * Goal 1. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch
   * Goal 2. com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;: I4 Branch 4 IFNE L127 - true
   * Goal 3. Branch com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:<init>()V
   * Goal 4. Branch com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;: I4 Branch 4 IFNE L127 - true in context: com.jkoolcloud.tnt4j.utils.LightStack:peek(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 5. peek(Ljava/lang/Object;)Ljava/lang/Object;_java.lang.IndexOutOfBoundsException_IMPLICIT
   * Goal 6. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 32
   * Goal 7. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 39
   * Goal 8. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 40
   * Goal 9. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: Line 32
   * Goal 10. com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;: Line 127
   * Goal 11. com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;: Line 130
   * Goal 12. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 13. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 14. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 15. Weak Mutation 0: com.jkoolcloud.tnt4j.utils.LightStack.<init>()V:32 - ReplaceConstant - 0 -> 1
   * Goal 16. Weak Mutation 60: com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;:127 - InsertUnaryOp Negation
   * Goal 17. Weak Mutation 61: com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;:127 - InsertUnaryOp +1
   * Goal 18. Weak Mutation 62: com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;:127 - InsertUnaryOp -1
   * Goal 19. Weak Mutation 64: com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;:127 - ReplaceComparisonOperator != -> <
   * Goal 20. Weak Mutation 66: com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;:130 - InsertUnaryOp Negation
   * Goal 21. Weak Mutation 67: com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;:130 - InsertUnaryOp +1
   * Goal 22. Weak Mutation 68: com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;:130 - InsertUnaryOp -1
   * Goal 23. Weak Mutation 69: com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;:130 - ReplaceConstant - 1 -> 0
   * Goal 24. Weak Mutation 70: com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;:130 - ReplaceArithmeticOperator - -> +
   * Goal 25. Weak Mutation 71: com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;:130 - ReplaceArithmeticOperator - -> %
   * Goal 26. Weak Mutation 72: com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;:130 - ReplaceArithmeticOperator - -> *
   * Goal 27. Weak Mutation 73: com.jkoolcloud.tnt4j.utils.LightStack.peek(Ljava/lang/Object;)Ljava/lang/Object;:130 - ReplaceArithmeticOperator - -> /
   */

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LightStack<BoundType> lightStack0 = new LightStack<BoundType>();
      lightStack0.cursor = 10;
      BoundType boundType0 = BoundType.CLOSED;
      // Undeclared exception!
      try { 
        lightStack0.peek(boundType0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 9, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  //Test case number: 25
  /*
   * 60 covered goals:
   * Goal 1. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch
   * Goal 2. com.jkoolcloud.tnt4j.utils.LightStack.size()I: root-Branch
   * Goal 3. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: I6 Branch 1 IF_ICMPLT L60 - false
   * Goal 4. com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;: I9 Branch 2 IF_ACMPEQ L97 - false
   * Goal 5. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: I4 Branch 3 IFNE L113 - true
   * Goal 6. Branch com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:<init>()V
   * Goal 7. Branch com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: I6 Branch 1 IF_ICMPLT L60 - false in context: com.jkoolcloud.tnt4j.utils.LightStack:push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 8. Branch com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;: I9 Branch 2 IF_ACMPEQ L97 - false in context: com.jkoolcloud.tnt4j.utils.LightStack:pop(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 9. pop(Ljava/lang/Object;)Ljava/lang/Object;_java.lang.IllegalStateException_EXPLICIT
   * Goal 10. [Output]: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:NonNull
   * Goal 11. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 32
   * Goal 12. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 39
   * Goal 13. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 40
   * Goal 14. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: Line 32
   * Goal 15. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: Line 113
   * Goal 16. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: Line 116
   * Goal 17. com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;: Line 96
   * Goal 18. com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;: Line 97
   * Goal 19. com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;: Line 98
   * Goal 20. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 60
   * Goal 21. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 61
   * Goal 22. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 65
   * Goal 23. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 66
   * Goal 24. com.jkoolcloud.tnt4j.utils.LightStack.size()I: Line 144
   * Goal 25. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 26. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 27. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 28. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 29. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 30. Weak Mutation 0: com.jkoolcloud.tnt4j.utils.LightStack.<init>()V:32 - ReplaceConstant - 0 -> 1
   * Goal 31. Weak Mutation 2: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp Negation
   * Goal 32. Weak Mutation 3: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp +1
   * Goal 33. Weak Mutation 4: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp -1
   * Goal 34. Weak Mutation 7: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - ReplaceComparisonOperator < -> <=
   * Goal 35. Weak Mutation 11: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - InsertUnaryOp Negation
   * Goal 36. Weak Mutation 12: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - InsertUnaryOp +1
   * Goal 37. Weak Mutation 13: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - InsertUnaryOp -1
   * Goal 38. Weak Mutation 14: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceConstant - 1 -> 0
   * Goal 39. Weak Mutation 15: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> %
   * Goal 40. Weak Mutation 16: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> -
   * Goal 41. Weak Mutation 17: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> *
   * Goal 42. Weak Mutation 18: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> /
   * Goal 43. Weak Mutation 30: com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;:97 - ReplaceVariable item -> obj
   * Goal 44. Weak Mutation 31: com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;:97 - ReplaceVariable obj -> item
   * Goal 45. Weak Mutation 32: com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;:97 - ReplaceComparisonOperator == -> !=
   * Goal 46. Weak Mutation 33: com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;:98 - ReplaceConstant - Item not on stop of the stack, stack.size= -> 
   * Goal 47. Weak Mutation 46: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp Negation
   * Goal 48. Weak Mutation 47: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp +1
   * Goal 49. Weak Mutation 48: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp -1
   * Goal 50. Weak Mutation 50: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - ReplaceComparisonOperator != -> <
   * Goal 51. Weak Mutation 52: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp Negation
   * Goal 52. Weak Mutation 53: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp +1
   * Goal 53. Weak Mutation 54: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp -1
   * Goal 54. Weak Mutation 55: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceConstant - 1 -> 0
   * Goal 55. Weak Mutation 56: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> +
   * Goal 56. Weak Mutation 58: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> *
   * Goal 57. Weak Mutation 59: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> /
   * Goal 58. Weak Mutation 82: com.jkoolcloud.tnt4j.utils.LightStack.size()I:144 - InsertUnaryOp Negation
   * Goal 59. Weak Mutation 83: com.jkoolcloud.tnt4j.utils.LightStack.size()I:144 - InsertUnaryOp +1
   * Goal 60. Weak Mutation 84: com.jkoolcloud.tnt4j.utils.LightStack.size()I:144 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LightStack<BoundType> lightStack0 = new LightStack<BoundType>();
      BoundType boundType0 = BoundType.OPEN;
      lightStack0.push(boundType0);
      BoundType boundType1 = BoundType.CLOSED;
      // Undeclared exception!
      try { 
        lightStack0.pop(boundType1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Item not on stop of the stack, stack.size=1
         //
         verifyException("com.jkoolcloud.tnt4j.utils.LightStack", e);
      }
  }

  //Test case number: 26
  /*
   * 65 covered goals:
   * Goal 1. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch
   * Goal 2. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: I6 Branch 1 IF_ICMPLT L60 - false
   * Goal 3. com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;: I9 Branch 2 IF_ACMPEQ L97 - true
   * Goal 4. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: I4 Branch 3 IFNE L113 - true
   * Goal 5. Branch com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:<init>()V
   * Goal 6. Branch com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: I6 Branch 1 IF_ICMPLT L60 - false in context: com.jkoolcloud.tnt4j.utils.LightStack:push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 7. Branch com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;: I9 Branch 2 IF_ACMPEQ L97 - true in context: com.jkoolcloud.tnt4j.utils.LightStack:pop(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 8. [Output]: com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;:Null
   * Goal 9. [Output]: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:Null
   * Goal 10. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 32
   * Goal 11. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 39
   * Goal 12. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 40
   * Goal 13. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: Line 32
   * Goal 14. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: Line 113
   * Goal 15. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: Line 116
   * Goal 16. com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;: Line 96
   * Goal 17. com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;: Line 97
   * Goal 18. com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;: Line 100
   * Goal 19. com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;: Line 101
   * Goal 20. com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;: Line 102
   * Goal 21. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 60
   * Goal 22. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 61
   * Goal 23. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 65
   * Goal 24. com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;: Line 66
   * Goal 25. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 26. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 27. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 28. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 29. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 30. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 31. Weak Mutation 0: com.jkoolcloud.tnt4j.utils.LightStack.<init>()V:32 - ReplaceConstant - 0 -> 1
   * Goal 32. Weak Mutation 2: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp Negation
   * Goal 33. Weak Mutation 3: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp +1
   * Goal 34. Weak Mutation 4: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - InsertUnaryOp -1
   * Goal 35. Weak Mutation 7: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:60 - ReplaceComparisonOperator < -> <=
   * Goal 36. Weak Mutation 11: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - InsertUnaryOp Negation
   * Goal 37. Weak Mutation 12: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - InsertUnaryOp +1
   * Goal 38. Weak Mutation 13: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - InsertUnaryOp -1
   * Goal 39. Weak Mutation 14: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceConstant - 1 -> 0
   * Goal 40. Weak Mutation 15: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> %
   * Goal 41. Weak Mutation 16: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> -
   * Goal 42. Weak Mutation 17: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> *
   * Goal 43. Weak Mutation 18: com.jkoolcloud.tnt4j.utils.LightStack.push(Ljava/lang/Object;)Ljava/lang/Object;:65 - ReplaceArithmeticOperator + -> /
   * Goal 44. Weak Mutation 32: com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;:97 - ReplaceComparisonOperator == -> !=
   * Goal 45. Weak Mutation 34: com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;:100 - InsertUnaryOp Negation
   * Goal 46. Weak Mutation 35: com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;:100 - InsertUnaryOp +1
   * Goal 47. Weak Mutation 36: com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;:100 - InsertUnaryOp -1
   * Goal 48. Weak Mutation 37: com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;:100 - ReplaceConstant - 1 -> 0
   * Goal 49. Weak Mutation 38: com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;:100 - ReplaceArithmeticOperator - -> +
   * Goal 50. Weak Mutation 40: com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;:100 - ReplaceArithmeticOperator - -> *
   * Goal 51. Weak Mutation 41: com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;:100 - ReplaceArithmeticOperator - -> /
   * Goal 52. Weak Mutation 42: com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;:101 - InsertUnaryOp Negation
   * Goal 53. Weak Mutation 43: com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;:101 - InsertUnaryOp +1
   * Goal 54. Weak Mutation 44: com.jkoolcloud.tnt4j.utils.LightStack.pop(Ljava/lang/Object;)Ljava/lang/Object;:101 - InsertUnaryOp -1
   * Goal 55. Weak Mutation 46: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp Negation
   * Goal 56. Weak Mutation 47: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp +1
   * Goal 57. Weak Mutation 48: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp -1
   * Goal 58. Weak Mutation 50: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - ReplaceComparisonOperator != -> <
   * Goal 59. Weak Mutation 52: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp Negation
   * Goal 60. Weak Mutation 53: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp +1
   * Goal 61. Weak Mutation 54: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - InsertUnaryOp -1
   * Goal 62. Weak Mutation 55: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceConstant - 1 -> 0
   * Goal 63. Weak Mutation 56: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> +
   * Goal 64. Weak Mutation 58: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> *
   * Goal 65. Weak Mutation 59: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:116 - ReplaceArithmeticOperator - -> /
   */

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LightStack<BoundType> lightStack0 = new LightStack<BoundType>();
      lightStack0.push((BoundType) null);
      lightStack0.pop((BoundType) null);
  }

  //Test case number: 27
  /*
   * 20 covered goals:
   * Goal 1. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch
   * Goal 2. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: I4 Branch 3 IFNE L113 - false
   * Goal 3. Branch com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:pop()Ljava/lang/Object;
   * Goal 4. Branch com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:<init>()V
   * Goal 5. pop()Ljava/lang/Object;_java.util.EmptyStackException_EXPLICIT
   * Goal 6. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 32
   * Goal 7. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 39
   * Goal 8. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 40
   * Goal 9. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: Line 32
   * Goal 10. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: Line 113
   * Goal 11. com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;: Line 114
   * Goal 12. com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;: Line 77
   * Goal 13. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 14. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.pop()Ljava/lang/Object;
   * Goal 15. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 16. Weak Mutation 0: com.jkoolcloud.tnt4j.utils.LightStack.<init>()V:32 - ReplaceConstant - 0 -> 1
   * Goal 17. Weak Mutation 46: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp Negation
   * Goal 18. Weak Mutation 47: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp +1
   * Goal 19. Weak Mutation 48: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - InsertUnaryOp -1
   * Goal 20. Weak Mutation 49: com.jkoolcloud.tnt4j.utils.LightStack.peek()Ljava/lang/Object;:113 - ReplaceComparisonOperator != -> -1
   */

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LightStack<String> lightStack0 = new LightStack<String>();
      // Undeclared exception!
      try { 
        lightStack0.pop();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jkoolcloud.tnt4j.utils.LightStack", e);
      }
  }

  //Test case number: 28
  /*
   * 18 covered goals:
   * Goal 1. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch
   * Goal 2. com.jkoolcloud.tnt4j.utils.LightStack.size()I: root-Branch
   * Goal 3. Branch com.jkoolcloud.tnt4j.utils.LightStack.size()I: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:size()I
   * Goal 4. Branch com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: root-Branch in context: com.jkoolcloud.tnt4j.utils.LightStack:<init>()V
   * Goal 5. [Output]: com.jkoolcloud.tnt4j.utils.LightStack.size()I:Zero
   * Goal 6. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 32
   * Goal 7. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 39
   * Goal 8. com.jkoolcloud.tnt4j.utils.LightStack.<init>()V: Line 40
   * Goal 9. com.jkoolcloud.tnt4j.utils.LightStack.<init>(I)V: Line 32
   * Goal 10. com.jkoolcloud.tnt4j.utils.LightStack.size()I: Line 144
   * Goal 11. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 12. [METHOD] com.jkoolcloud.tnt4j.utils.LightStack.size()I
   * Goal 13. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.<init>()V
   * Goal 14. [METHODNOEX] com.jkoolcloud.tnt4j.utils.LightStack.size()I
   * Goal 15. Weak Mutation 0: com.jkoolcloud.tnt4j.utils.LightStack.<init>()V:32 - ReplaceConstant - 0 -> 1
   * Goal 16. Weak Mutation 82: com.jkoolcloud.tnt4j.utils.LightStack.size()I:144 - InsertUnaryOp Negation
   * Goal 17. Weak Mutation 83: com.jkoolcloud.tnt4j.utils.LightStack.size()I:144 - InsertUnaryOp +1
   * Goal 18. Weak Mutation 84: com.jkoolcloud.tnt4j.utils.LightStack.size()I:144 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LightStack<Object> lightStack0 = new LightStack<Object>();
      int int0 = lightStack0.size();
      assertEquals(0, int0);
  }
}
