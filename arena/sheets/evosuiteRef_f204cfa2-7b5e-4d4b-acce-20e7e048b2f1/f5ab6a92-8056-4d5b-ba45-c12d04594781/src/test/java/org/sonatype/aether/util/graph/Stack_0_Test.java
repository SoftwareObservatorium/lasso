/*
 * LASSO - an Observatorium for the Dynamic Selection, Analysis and Comparison of Software
 * Copyright (C) 2024 Marcus Kessel (University of Mannheim) and LASSO contributers
 *
 * This file is part of LASSO.
 *
 * LASSO is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * LASSO is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with LASSO.  If not, see <https://www.gnu.org/licenses/>.
 */
/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 04 15:32:16 GMT 2021
 */

package org.sonatype.aether.util.graph;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.NoSuchElementException;
import java.util.Spliterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.runner.RunWith;
import org.sonatype.aether.util.graph.Stack;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Stack_0_Test {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.sonatype.aether.util.graph.Stack"; 
//    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/usr/src/mymaven/f5ab6a92-8056-4d5b-ba45-c12d04594781"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Stack_0_Test.class.getClassLoader() ,
      "org.sonatype.aether.util.graph.Stack"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Stack_0_Test.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.sonatype.aether.util.graph.Stack"
    );
  }

  //Test case number: 0
  /*
   * 38 covered goals:
   * Goal 1. org.sonatype.aether.util.graph.Stack.<init>()V: root-Branch
   * Goal 2. org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;: I3 Branch 4 IFLT L63 - false
   * Goal 3. org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;: I7 Branch 5 IF_ICMPLT L63 - false
   * Goal 4. Branch org.sonatype.aether.util.graph.Stack.<init>()V: root-Branch in context: 
   * Goal 5. Branch org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;: I3 Branch 4 IFLT L63 - false in context: org.sonatype.aether.util.graph.Stack:get(I)Ljava/lang/Object;
   * Goal 6. Branch org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;: I7 Branch 5 IF_ICMPLT L63 - false in context: org.sonatype.aether.util.graph.Stack:get(I)Ljava/lang/Object;
   * Goal 7. get(I)Ljava/lang/Object;_java.lang.IndexOutOfBoundsException_EXPLICIT
   * Goal 8. org.sonatype.aether.util.graph.Stack.<init>()V: Line 19
   * Goal 9. org.sonatype.aether.util.graph.Stack.<init>()V: Line 24
   * Goal 10. org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;: Line 63
   * Goal 11. org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;: Line 65
   * Goal 12. [METHOD] org.sonatype.aether.util.graph.Stack.<init>()V
   * Goal 13. [METHOD] org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;
   * Goal 14. [METHODNOEX] org.sonatype.aether.util.graph.Stack.<init>()V
   * Goal 15. Weak Mutation 0: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 0
   * Goal 16. Weak Mutation 1: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 1
   * Goal 17. Weak Mutation 2: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> -1
   * Goal 18. Weak Mutation 3: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 63
   * Goal 19. Weak Mutation 4: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 65
   * Goal 20. Weak Mutation 61: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp Negation of index
   * Goal 21. Weak Mutation 62: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp IINC 1 index
   * Goal 22. Weak Mutation 63: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp IINC -1 index
   * Goal 23. Weak Mutation 65: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - ReplaceComparisonOperator < -> !=
   * Goal 24. Weak Mutation 67: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp Negation of index
   * Goal 25. Weak Mutation 68: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp IINC 1 index
   * Goal 26. Weak Mutation 69: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp IINC -1 index
   * Goal 27. Weak Mutation 70: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp Negation
   * Goal 28. Weak Mutation 71: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp +1
   * Goal 29. Weak Mutation 72: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp -1
   * Goal 30. Weak Mutation 73: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - ReplaceComparisonOperator < -> !=
   * Goal 31. Weak Mutation 76: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:65 - ReplaceConstant - Index:  -> 
   * Goal 32. Weak Mutation 77: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:65 - InsertUnaryOp Negation of index
   * Goal 33. Weak Mutation 78: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:65 - InsertUnaryOp IINC 1 index
   * Goal 34. Weak Mutation 79: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:65 - InsertUnaryOp IINC -1 index
   * Goal 35. Weak Mutation 80: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:65 - ReplaceConstant - , Size:  -> 
   * Goal 36. Weak Mutation 81: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:65 - InsertUnaryOp Negation
   * Goal 37. Weak Mutation 82: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:65 - InsertUnaryOp +1
   * Goal 38. Weak Mutation 83: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:65 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      // Undeclared exception!
      try { 
        stack0.get(643);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 643, Size: 0
         //
         verifyException("org.sonatype.aether.util.graph.Stack", e);
      }
  }

  //Test case number: 1
  /*
   * 69 covered goals:
   * Goal 1. org.sonatype.aether.util.graph.Stack.size()I: root-Branch
   * Goal 2. org.sonatype.aether.util.graph.Stack.<init>()V: root-Branch
   * Goal 3. org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: I7 Branch 1 IF_ICMPLT L30 - true
   * Goal 4. org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;: I3 Branch 4 IFLT L63 - false
   * Goal 5. org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;: I7 Branch 5 IF_ICMPLT L63 - true
   * Goal 6. Branch org.sonatype.aether.util.graph.Stack.<init>()V: root-Branch in context: 
   * Goal 7. Branch org.sonatype.aether.util.graph.Stack.size()I: root-Branch in context: org.sonatype.aether.util.graph.Stack:size()I
   * Goal 8. Branch org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: I7 Branch 1 IF_ICMPLT L30 - true in context: org.sonatype.aether.util.graph.Stack:push(Ljava/lang/Object;)V
   * Goal 9. Branch org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;: I7 Branch 5 IF_ICMPLT L63 - true in context: org.sonatype.aether.util.graph.Stack:get(I)Ljava/lang/Object;
   * Goal 10. Branch org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;: I3 Branch 4 IFLT L63 - false in context: org.sonatype.aether.util.graph.Stack:get(I)Ljava/lang/Object;
   * Goal 11. org.sonatype.aether.util.graph.Stack.<init>()V: Line 19
   * Goal 12. org.sonatype.aether.util.graph.Stack.<init>()V: Line 24
   * Goal 13. org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;: Line 63
   * Goal 14. org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;: Line 67
   * Goal 15. org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: Line 30
   * Goal 16. org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: Line 36
   * Goal 17. org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: Line 37
   * Goal 18. org.sonatype.aether.util.graph.Stack.size()I: Line 73
   * Goal 19. [METHOD] org.sonatype.aether.util.graph.Stack.<init>()V
   * Goal 20. [METHOD] org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V
   * Goal 21. [METHODNOEX] org.sonatype.aether.util.graph.Stack.<init>()V
   * Goal 22. [METHODNOEX] org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V
   * Goal 23. Weak Mutation 0: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 0
   * Goal 24. Weak Mutation 1: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 1
   * Goal 25. Weak Mutation 2: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> -1
   * Goal 26. Weak Mutation 3: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 63
   * Goal 27. Weak Mutation 4: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 65
   * Goal 28. Weak Mutation 5: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:30 - InsertUnaryOp Negation
   * Goal 29. Weak Mutation 6: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:30 - InsertUnaryOp +1
   * Goal 30. Weak Mutation 7: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:30 - InsertUnaryOp -1
   * Goal 31. Weak Mutation 9: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:30 - ReplaceComparisonOperator < -> -2
   * Goal 32. Weak Mutation 25: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - InsertUnaryOp Negation
   * Goal 33. Weak Mutation 26: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - InsertUnaryOp +1
   * Goal 34. Weak Mutation 27: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - InsertUnaryOp -1
   * Goal 35. Weak Mutation 28: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceConstant - 1 -> 0
   * Goal 36. Weak Mutation 29: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceArithmeticOperator + -> %
   * Goal 37. Weak Mutation 30: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceArithmeticOperator + -> -
   * Goal 38. Weak Mutation 31: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceArithmeticOperator + -> *
   * Goal 39. Weak Mutation 32: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceArithmeticOperator + -> /
   * Goal 40. Weak Mutation 61: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp Negation of index
   * Goal 41. Weak Mutation 62: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp IINC 1 index
   * Goal 42. Weak Mutation 63: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp IINC -1 index
   * Goal 43. Weak Mutation 65: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - ReplaceComparisonOperator < -> !=
   * Goal 44. Weak Mutation 66: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - ReplaceComparisonOperator < -> <=
   * Goal 45. Weak Mutation 67: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp Negation of index
   * Goal 46. Weak Mutation 68: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp IINC 1 index
   * Goal 47. Weak Mutation 69: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp IINC -1 index
   * Goal 48. Weak Mutation 70: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp Negation
   * Goal 49. Weak Mutation 71: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp +1
   * Goal 50. Weak Mutation 72: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp -1
   * Goal 51. Weak Mutation 74: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - ReplaceComparisonOperator < -> -2
   * Goal 52. Weak Mutation 84: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - InsertUnaryOp Negation
   * Goal 53. Weak Mutation 85: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - InsertUnaryOp +1
   * Goal 54. Weak Mutation 86: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - InsertUnaryOp -1
   * Goal 55. Weak Mutation 87: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - InsertUnaryOp Negation of index
   * Goal 56. Weak Mutation 88: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - InsertUnaryOp IINC 1 index
   * Goal 57. Weak Mutation 89: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - InsertUnaryOp IINC -1 index
   * Goal 58. Weak Mutation 90: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - ReplaceArithmeticOperator - -> +
   * Goal 59. Weak Mutation 91: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - ReplaceArithmeticOperator - -> %
   * Goal 60. Weak Mutation 92: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - ReplaceArithmeticOperator - -> *
   * Goal 61. Weak Mutation 93: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - ReplaceArithmeticOperator - -> /
   * Goal 62. Weak Mutation 94: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - ReplaceConstant - 1 -> 0
   * Goal 63. Weak Mutation 95: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - ReplaceArithmeticOperator - -> +
   * Goal 64. Weak Mutation 96: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - ReplaceArithmeticOperator - -> %
   * Goal 65. Weak Mutation 97: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - ReplaceArithmeticOperator - -> *
   * Goal 66. Weak Mutation 98: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - ReplaceArithmeticOperator - -> /
   * Goal 67. Weak Mutation 99: org.sonatype.aether.util.graph.Stack.size()I:73 - InsertUnaryOp Negation
   * Goal 68. Weak Mutation 100: org.sonatype.aether.util.graph.Stack.size()I:73 - InsertUnaryOp +1
   * Goal 69. Weak Mutation 101: org.sonatype.aether.util.graph.Stack.size()I:73 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      Spliterator<Object> spliterator0 = stack0.spliterator();
      stack0.push(spliterator0);
      stack0.push(spliterator0);
      Stack<String> stack1 = new Stack<String>();
      stack0.indexOf(stack1);
      assertEquals(2, stack0.size());
  }

  //Test case number: 2
  /*
   * 49 covered goals:
   * Goal 1. org.sonatype.aether.util.graph.Stack.<init>()V: root-Branch
   * Goal 2. org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: I7 Branch 1 IF_ICMPLT L30 - true
   * Goal 3. org.sonatype.aether.util.graph.Stack.peek()Ljava/lang/Object;: I4 Branch 3 IFGT L52 - true
   * Goal 4. Branch org.sonatype.aether.util.graph.Stack.<init>()V: root-Branch in context: 
   * Goal 5. Branch org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: I7 Branch 1 IF_ICMPLT L30 - true in context: org.sonatype.aether.util.graph.Stack:push(Ljava/lang/Object;)V
   * Goal 6. Branch org.sonatype.aether.util.graph.Stack.peek()Ljava/lang/Object;: I4 Branch 3 IFGT L52 - true in context: org.sonatype.aether.util.graph.Stack:peek()Ljava/lang/Object;
   * Goal 7. [Output]: org.sonatype.aether.util.graph.Stack.peek()Ljava/lang/Object;:NonNull
   * Goal 8. org.sonatype.aether.util.graph.Stack.<init>()V: Line 19
   * Goal 9. org.sonatype.aether.util.graph.Stack.<init>()V: Line 24
   * Goal 10. org.sonatype.aether.util.graph.Stack.peek()Ljava/lang/Object;: Line 52
   * Goal 11. org.sonatype.aether.util.graph.Stack.peek()Ljava/lang/Object;: Line 56
   * Goal 12. org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: Line 30
   * Goal 13. org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: Line 36
   * Goal 14. org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: Line 37
   * Goal 15. [METHOD] org.sonatype.aether.util.graph.Stack.<init>()V
   * Goal 16. [METHOD] org.sonatype.aether.util.graph.Stack.peek()Ljava/lang/Object;
   * Goal 17. [METHOD] org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V
   * Goal 18. [METHODNOEX] org.sonatype.aether.util.graph.Stack.<init>()V
   * Goal 19. [METHODNOEX] org.sonatype.aether.util.graph.Stack.peek()Ljava/lang/Object;
   * Goal 20. [METHODNOEX] org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V
   * Goal 21. Weak Mutation 0: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 0
   * Goal 22. Weak Mutation 1: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 1
   * Goal 23. Weak Mutation 2: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> -1
   * Goal 24. Weak Mutation 3: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 63
   * Goal 25. Weak Mutation 4: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 65
   * Goal 26. Weak Mutation 5: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:30 - InsertUnaryOp Negation
   * Goal 27. Weak Mutation 6: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:30 - InsertUnaryOp +1
   * Goal 28. Weak Mutation 7: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:30 - InsertUnaryOp -1
   * Goal 29. Weak Mutation 9: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:30 - ReplaceComparisonOperator < -> -2
   * Goal 30. Weak Mutation 25: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - InsertUnaryOp Negation
   * Goal 31. Weak Mutation 26: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - InsertUnaryOp +1
   * Goal 32. Weak Mutation 27: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - InsertUnaryOp -1
   * Goal 33. Weak Mutation 28: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceConstant - 1 -> 0
   * Goal 34. Weak Mutation 29: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceArithmeticOperator + -> %
   * Goal 35. Weak Mutation 30: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceArithmeticOperator + -> -
   * Goal 36. Weak Mutation 31: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceArithmeticOperator + -> *
   * Goal 37. Weak Mutation 32: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceArithmeticOperator + -> /
   * Goal 38. Weak Mutation 47: org.sonatype.aether.util.graph.Stack.peek()Ljava/lang/Object;:52 - InsertUnaryOp Negation
   * Goal 39. Weak Mutation 48: org.sonatype.aether.util.graph.Stack.peek()Ljava/lang/Object;:52 - InsertUnaryOp +1
   * Goal 40. Weak Mutation 49: org.sonatype.aether.util.graph.Stack.peek()Ljava/lang/Object;:52 - InsertUnaryOp -1
   * Goal 41. Weak Mutation 50: org.sonatype.aether.util.graph.Stack.peek()Ljava/lang/Object;:52 - ReplaceComparisonOperator > -> -2
   * Goal 42. Weak Mutation 53: org.sonatype.aether.util.graph.Stack.peek()Ljava/lang/Object;:56 - InsertUnaryOp Negation
   * Goal 43. Weak Mutation 54: org.sonatype.aether.util.graph.Stack.peek()Ljava/lang/Object;:56 - InsertUnaryOp +1
   * Goal 44. Weak Mutation 55: org.sonatype.aether.util.graph.Stack.peek()Ljava/lang/Object;:56 - InsertUnaryOp -1
   * Goal 45. Weak Mutation 56: org.sonatype.aether.util.graph.Stack.peek()Ljava/lang/Object;:56 - ReplaceConstant - 1 -> 0
   * Goal 46. Weak Mutation 57: org.sonatype.aether.util.graph.Stack.peek()Ljava/lang/Object;:56 - ReplaceArithmeticOperator - -> +
   * Goal 47. Weak Mutation 58: org.sonatype.aether.util.graph.Stack.peek()Ljava/lang/Object;:56 - ReplaceArithmeticOperator - -> %
   * Goal 48. Weak Mutation 59: org.sonatype.aether.util.graph.Stack.peek()Ljava/lang/Object;:56 - ReplaceArithmeticOperator - -> *
   * Goal 49. Weak Mutation 60: org.sonatype.aether.util.graph.Stack.peek()Ljava/lang/Object;:56 - ReplaceArithmeticOperator - -> /
   */

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      Spliterator<Object> spliterator0 = stack0.spliterator();
      stack0.push(spliterator0);
      stack0.push(spliterator0);
      stack0.peek();
      assertEquals(2, stack0.size());
  }

  //Test case number: 3
  /*
   * 49 covered goals:
   * Goal 1. org.sonatype.aether.util.graph.Stack.<init>()V: root-Branch
   * Goal 2. org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: I7 Branch 1 IF_ICMPLT L30 - true
   * Goal 3. org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;: I4 Branch 2 IFGT L42 - true
   * Goal 4. Branch org.sonatype.aether.util.graph.Stack.<init>()V: root-Branch in context: 
   * Goal 5. Branch org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: I7 Branch 1 IF_ICMPLT L30 - true in context: org.sonatype.aether.util.graph.Stack:push(Ljava/lang/Object;)V
   * Goal 6. Branch org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;: I4 Branch 2 IFGT L42 - true in context: org.sonatype.aether.util.graph.Stack:pop()Ljava/lang/Object;
   * Goal 7. [Output]: org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;:Null
   * Goal 8. org.sonatype.aether.util.graph.Stack.<init>()V: Line 19
   * Goal 9. org.sonatype.aether.util.graph.Stack.<init>()V: Line 24
   * Goal 10. org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;: Line 42
   * Goal 11. org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;: Line 46
   * Goal 12. org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: Line 30
   * Goal 13. org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: Line 36
   * Goal 14. org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: Line 37
   * Goal 15. [METHOD] org.sonatype.aether.util.graph.Stack.<init>()V
   * Goal 16. [METHOD] org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;
   * Goal 17. [METHOD] org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V
   * Goal 18. [METHODNOEX] org.sonatype.aether.util.graph.Stack.<init>()V
   * Goal 19. [METHODNOEX] org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;
   * Goal 20. [METHODNOEX] org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V
   * Goal 21. Weak Mutation 0: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 0
   * Goal 22. Weak Mutation 1: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 1
   * Goal 23. Weak Mutation 2: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> -1
   * Goal 24. Weak Mutation 3: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 63
   * Goal 25. Weak Mutation 4: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 65
   * Goal 26. Weak Mutation 5: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:30 - InsertUnaryOp Negation
   * Goal 27. Weak Mutation 6: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:30 - InsertUnaryOp +1
   * Goal 28. Weak Mutation 7: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:30 - InsertUnaryOp -1
   * Goal 29. Weak Mutation 9: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:30 - ReplaceComparisonOperator < -> -2
   * Goal 30. Weak Mutation 25: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - InsertUnaryOp Negation
   * Goal 31. Weak Mutation 26: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - InsertUnaryOp +1
   * Goal 32. Weak Mutation 27: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - InsertUnaryOp -1
   * Goal 33. Weak Mutation 28: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceConstant - 1 -> 0
   * Goal 34. Weak Mutation 29: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceArithmeticOperator + -> %
   * Goal 35. Weak Mutation 30: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceArithmeticOperator + -> -
   * Goal 36. Weak Mutation 31: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceArithmeticOperator + -> *
   * Goal 37. Weak Mutation 32: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceArithmeticOperator + -> /
   * Goal 38. Weak Mutation 33: org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;:42 - InsertUnaryOp Negation
   * Goal 39. Weak Mutation 34: org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;:42 - InsertUnaryOp +1
   * Goal 40. Weak Mutation 35: org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;:42 - InsertUnaryOp -1
   * Goal 41. Weak Mutation 36: org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;:42 - ReplaceComparisonOperator > -> -2
   * Goal 42. Weak Mutation 39: org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;:46 - InsertUnaryOp Negation
   * Goal 43. Weak Mutation 40: org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;:46 - InsertUnaryOp +1
   * Goal 44. Weak Mutation 41: org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;:46 - InsertUnaryOp -1
   * Goal 45. Weak Mutation 42: org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;:46 - ReplaceConstant - 1 -> 0
   * Goal 46. Weak Mutation 43: org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;:46 - ReplaceArithmeticOperator - -> +
   * Goal 47. Weak Mutation 44: org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;:46 - ReplaceArithmeticOperator - -> %
   * Goal 48. Weak Mutation 45: org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;:46 - ReplaceArithmeticOperator - -> *
   * Goal 49. Weak Mutation 46: org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;:46 - ReplaceArithmeticOperator - -> /
   */

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      stack0.push((Object) null);
      stack0.push((Object) null);
      stack0.pop();
      assertEquals(1, stack0.size());
  }

  //Test case number: 4
  /*
   * 20 covered goals:
   * Goal 1. org.sonatype.aether.util.graph.Stack.size()I: root-Branch
   * Goal 2. org.sonatype.aether.util.graph.Stack.<init>()V: root-Branch
   * Goal 3. Branch org.sonatype.aether.util.graph.Stack.<init>()V: root-Branch in context: 
   * Goal 4. Branch org.sonatype.aether.util.graph.Stack.size()I: root-Branch in context: org.sonatype.aether.util.graph.Stack:size()I
   * Goal 5. [Output]: org.sonatype.aether.util.graph.Stack.size()I:Zero
   * Goal 6. org.sonatype.aether.util.graph.Stack.<init>()V: Line 19
   * Goal 7. org.sonatype.aether.util.graph.Stack.<init>()V: Line 24
   * Goal 8. org.sonatype.aether.util.graph.Stack.size()I: Line 73
   * Goal 9. [METHOD] org.sonatype.aether.util.graph.Stack.<init>()V
   * Goal 10. [METHOD] org.sonatype.aether.util.graph.Stack.size()I
   * Goal 11. [METHODNOEX] org.sonatype.aether.util.graph.Stack.<init>()V
   * Goal 12. [METHODNOEX] org.sonatype.aether.util.graph.Stack.size()I
   * Goal 13. Weak Mutation 0: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 0
   * Goal 14. Weak Mutation 1: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 1
   * Goal 15. Weak Mutation 2: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> -1
   * Goal 16. Weak Mutation 3: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 63
   * Goal 17. Weak Mutation 4: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 65
   * Goal 18. Weak Mutation 99: org.sonatype.aether.util.graph.Stack.size()I:73 - InsertUnaryOp Negation
   * Goal 19. Weak Mutation 100: org.sonatype.aether.util.graph.Stack.size()I:73 - InsertUnaryOp +1
   * Goal 20. Weak Mutation 101: org.sonatype.aether.util.graph.Stack.size()I:73 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Stack<Integer> stack0 = new Stack<Integer>();
      int int0 = stack0.size();
      assertEquals(0, int0);
  }

  //Test case number: 5
  /*
   * 39 covered goals:
   * Goal 1. org.sonatype.aether.util.graph.Stack.size()I: root-Branch
   * Goal 2. org.sonatype.aether.util.graph.Stack.<init>()V: root-Branch
   * Goal 3. org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: I7 Branch 1 IF_ICMPLT L30 - true
   * Goal 4. Branch org.sonatype.aether.util.graph.Stack.<init>()V: root-Branch in context: 
   * Goal 5. Branch org.sonatype.aether.util.graph.Stack.size()I: root-Branch in context: org.sonatype.aether.util.graph.Stack:size()I
   * Goal 6. Branch org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: I7 Branch 1 IF_ICMPLT L30 - true in context: org.sonatype.aether.util.graph.Stack:push(Ljava/lang/Object;)V
   * Goal 7. [Output]: org.sonatype.aether.util.graph.Stack.size()I:Positive
   * Goal 8. org.sonatype.aether.util.graph.Stack.<init>()V: Line 19
   * Goal 9. org.sonatype.aether.util.graph.Stack.<init>()V: Line 24
   * Goal 10. org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: Line 30
   * Goal 11. org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: Line 36
   * Goal 12. org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: Line 37
   * Goal 13. org.sonatype.aether.util.graph.Stack.size()I: Line 73
   * Goal 14. [METHOD] org.sonatype.aether.util.graph.Stack.<init>()V
   * Goal 15. [METHOD] org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V
   * Goal 16. [METHOD] org.sonatype.aether.util.graph.Stack.size()I
   * Goal 17. [METHODNOEX] org.sonatype.aether.util.graph.Stack.<init>()V
   * Goal 18. [METHODNOEX] org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V
   * Goal 19. [METHODNOEX] org.sonatype.aether.util.graph.Stack.size()I
   * Goal 20. Weak Mutation 0: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 0
   * Goal 21. Weak Mutation 1: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 1
   * Goal 22. Weak Mutation 2: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> -1
   * Goal 23. Weak Mutation 3: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 63
   * Goal 24. Weak Mutation 4: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 65
   * Goal 25. Weak Mutation 5: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:30 - InsertUnaryOp Negation
   * Goal 26. Weak Mutation 6: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:30 - InsertUnaryOp +1
   * Goal 27. Weak Mutation 7: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:30 - InsertUnaryOp -1
   * Goal 28. Weak Mutation 9: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:30 - ReplaceComparisonOperator < -> -2
   * Goal 29. Weak Mutation 25: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - InsertUnaryOp Negation
   * Goal 30. Weak Mutation 26: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - InsertUnaryOp +1
   * Goal 31. Weak Mutation 27: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - InsertUnaryOp -1
   * Goal 32. Weak Mutation 28: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceConstant - 1 -> 0
   * Goal 33. Weak Mutation 29: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceArithmeticOperator + -> %
   * Goal 34. Weak Mutation 30: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceArithmeticOperator + -> -
   * Goal 35. Weak Mutation 31: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceArithmeticOperator + -> *
   * Goal 36. Weak Mutation 32: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceArithmeticOperator + -> /
   * Goal 37. Weak Mutation 99: org.sonatype.aether.util.graph.Stack.size()I:73 - InsertUnaryOp Negation
   * Goal 38. Weak Mutation 100: org.sonatype.aether.util.graph.Stack.size()I:73 - InsertUnaryOp +1
   * Goal 39. Weak Mutation 101: org.sonatype.aether.util.graph.Stack.size()I:73 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      stack0.push("SHSEHH`C");
      int int0 = stack0.size();
      assertEquals(1, int0);
  }

  //Test case number: 6
  /*
   * 62 covered goals:
   * Goal 1. org.sonatype.aether.util.graph.Stack.<init>()V: root-Branch
   * Goal 2. org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: I7 Branch 1 IF_ICMPLT L30 - true
   * Goal 3. org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;: I3 Branch 4 IFLT L63 - false
   * Goal 4. org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;: I7 Branch 5 IF_ICMPLT L63 - true
   * Goal 5. Branch org.sonatype.aether.util.graph.Stack.<init>()V: root-Branch in context: 
   * Goal 6. Branch org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: I7 Branch 1 IF_ICMPLT L30 - true in context: org.sonatype.aether.util.graph.Stack:push(Ljava/lang/Object;)V
   * Goal 7. Branch org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;: I7 Branch 5 IF_ICMPLT L63 - true in context: org.sonatype.aether.util.graph.Stack:get(I)Ljava/lang/Object;
   * Goal 8. Branch org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;: I3 Branch 4 IFLT L63 - false in context: org.sonatype.aether.util.graph.Stack:get(I)Ljava/lang/Object;
   * Goal 9. [Output]: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:Null
   * Goal 10. org.sonatype.aether.util.graph.Stack.<init>()V: Line 19
   * Goal 11. org.sonatype.aether.util.graph.Stack.<init>()V: Line 24
   * Goal 12. org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;: Line 63
   * Goal 13. org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;: Line 67
   * Goal 14. org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: Line 30
   * Goal 15. org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: Line 36
   * Goal 16. org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: Line 37
   * Goal 17. [METHOD] org.sonatype.aether.util.graph.Stack.<init>()V
   * Goal 18. [METHOD] org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;
   * Goal 19. [METHOD] org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V
   * Goal 20. [METHODNOEX] org.sonatype.aether.util.graph.Stack.<init>()V
   * Goal 21. [METHODNOEX] org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;
   * Goal 22. [METHODNOEX] org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V
   * Goal 23. Weak Mutation 0: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 0
   * Goal 24. Weak Mutation 1: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 1
   * Goal 25. Weak Mutation 2: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> -1
   * Goal 26. Weak Mutation 3: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 63
   * Goal 27. Weak Mutation 4: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 65
   * Goal 28. Weak Mutation 5: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:30 - InsertUnaryOp Negation
   * Goal 29. Weak Mutation 6: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:30 - InsertUnaryOp +1
   * Goal 30. Weak Mutation 7: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:30 - InsertUnaryOp -1
   * Goal 31. Weak Mutation 9: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:30 - ReplaceComparisonOperator < -> -2
   * Goal 32. Weak Mutation 25: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - InsertUnaryOp Negation
   * Goal 33. Weak Mutation 26: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - InsertUnaryOp +1
   * Goal 34. Weak Mutation 27: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - InsertUnaryOp -1
   * Goal 35. Weak Mutation 28: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceConstant - 1 -> 0
   * Goal 36. Weak Mutation 29: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceArithmeticOperator + -> %
   * Goal 37. Weak Mutation 30: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceArithmeticOperator + -> -
   * Goal 38. Weak Mutation 31: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceArithmeticOperator + -> *
   * Goal 39. Weak Mutation 32: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceArithmeticOperator + -> /
   * Goal 40. Weak Mutation 61: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp Negation of index
   * Goal 41. Weak Mutation 62: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp IINC 1 index
   * Goal 42. Weak Mutation 63: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp IINC -1 index
   * Goal 43. Weak Mutation 66: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - ReplaceComparisonOperator < -> <=
   * Goal 44. Weak Mutation 67: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp Negation of index
   * Goal 45. Weak Mutation 68: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp IINC 1 index
   * Goal 46. Weak Mutation 69: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp IINC -1 index
   * Goal 47. Weak Mutation 70: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp Negation
   * Goal 48. Weak Mutation 71: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp +1
   * Goal 49. Weak Mutation 72: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp -1
   * Goal 50. Weak Mutation 74: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - ReplaceComparisonOperator < -> -2
   * Goal 51. Weak Mutation 84: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - InsertUnaryOp Negation
   * Goal 52. Weak Mutation 85: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - InsertUnaryOp +1
   * Goal 53. Weak Mutation 86: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - InsertUnaryOp -1
   * Goal 54. Weak Mutation 87: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - InsertUnaryOp Negation of index
   * Goal 55. Weak Mutation 88: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - InsertUnaryOp IINC 1 index
   * Goal 56. Weak Mutation 89: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - InsertUnaryOp IINC -1 index
   * Goal 57. Weak Mutation 91: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - ReplaceArithmeticOperator - -> %
   * Goal 58. Weak Mutation 93: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - ReplaceArithmeticOperator - -> /
   * Goal 59. Weak Mutation 94: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - ReplaceConstant - 1 -> 0
   * Goal 60. Weak Mutation 95: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - ReplaceArithmeticOperator - -> +
   * Goal 61. Weak Mutation 97: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - ReplaceArithmeticOperator - -> *
   * Goal 62. Weak Mutation 98: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - ReplaceArithmeticOperator - -> /
   */

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      stack0.push((Object) null);
      stack0.get(0);
      assertEquals(1, stack0.size());
  }

  //Test case number: 7
  /*
   * 62 covered goals:
   * Goal 1. org.sonatype.aether.util.graph.Stack.<init>()V: root-Branch
   * Goal 2. org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: I7 Branch 1 IF_ICMPLT L30 - true
   * Goal 3. org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;: I3 Branch 4 IFLT L63 - false
   * Goal 4. org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;: I7 Branch 5 IF_ICMPLT L63 - true
   * Goal 5. Branch org.sonatype.aether.util.graph.Stack.<init>()V: root-Branch in context: 
   * Goal 6. Branch org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: I7 Branch 1 IF_ICMPLT L30 - true in context: org.sonatype.aether.util.graph.Stack:push(Ljava/lang/Object;)V
   * Goal 7. Branch org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;: I7 Branch 5 IF_ICMPLT L63 - true in context: org.sonatype.aether.util.graph.Stack:get(I)Ljava/lang/Object;
   * Goal 8. Branch org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;: I3 Branch 4 IFLT L63 - false in context: org.sonatype.aether.util.graph.Stack:get(I)Ljava/lang/Object;
   * Goal 9. [Output]: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:NonNull
   * Goal 10. org.sonatype.aether.util.graph.Stack.<init>()V: Line 19
   * Goal 11. org.sonatype.aether.util.graph.Stack.<init>()V: Line 24
   * Goal 12. org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;: Line 63
   * Goal 13. org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;: Line 67
   * Goal 14. org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: Line 30
   * Goal 15. org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: Line 36
   * Goal 16. org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: Line 37
   * Goal 17. [METHOD] org.sonatype.aether.util.graph.Stack.<init>()V
   * Goal 18. [METHOD] org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;
   * Goal 19. [METHOD] org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V
   * Goal 20. [METHODNOEX] org.sonatype.aether.util.graph.Stack.<init>()V
   * Goal 21. [METHODNOEX] org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;
   * Goal 22. [METHODNOEX] org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V
   * Goal 23. Weak Mutation 0: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 0
   * Goal 24. Weak Mutation 1: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 1
   * Goal 25. Weak Mutation 2: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> -1
   * Goal 26. Weak Mutation 3: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 63
   * Goal 27. Weak Mutation 4: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 65
   * Goal 28. Weak Mutation 5: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:30 - InsertUnaryOp Negation
   * Goal 29. Weak Mutation 6: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:30 - InsertUnaryOp +1
   * Goal 30. Weak Mutation 7: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:30 - InsertUnaryOp -1
   * Goal 31. Weak Mutation 9: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:30 - ReplaceComparisonOperator < -> -2
   * Goal 32. Weak Mutation 25: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - InsertUnaryOp Negation
   * Goal 33. Weak Mutation 26: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - InsertUnaryOp +1
   * Goal 34. Weak Mutation 27: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - InsertUnaryOp -1
   * Goal 35. Weak Mutation 28: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceConstant - 1 -> 0
   * Goal 36. Weak Mutation 29: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceArithmeticOperator + -> %
   * Goal 37. Weak Mutation 30: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceArithmeticOperator + -> -
   * Goal 38. Weak Mutation 31: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceArithmeticOperator + -> *
   * Goal 39. Weak Mutation 32: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceArithmeticOperator + -> /
   * Goal 40. Weak Mutation 61: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp Negation of index
   * Goal 41. Weak Mutation 62: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp IINC 1 index
   * Goal 42. Weak Mutation 63: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp IINC -1 index
   * Goal 43. Weak Mutation 66: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - ReplaceComparisonOperator < -> <=
   * Goal 44. Weak Mutation 67: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp Negation of index
   * Goal 45. Weak Mutation 68: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp IINC 1 index
   * Goal 46. Weak Mutation 69: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp IINC -1 index
   * Goal 47. Weak Mutation 70: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp Negation
   * Goal 48. Weak Mutation 71: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp +1
   * Goal 49. Weak Mutation 72: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp -1
   * Goal 50. Weak Mutation 74: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - ReplaceComparisonOperator < -> -2
   * Goal 51. Weak Mutation 84: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - InsertUnaryOp Negation
   * Goal 52. Weak Mutation 85: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - InsertUnaryOp +1
   * Goal 53. Weak Mutation 86: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - InsertUnaryOp -1
   * Goal 54. Weak Mutation 87: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - InsertUnaryOp Negation of index
   * Goal 55. Weak Mutation 88: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - InsertUnaryOp IINC 1 index
   * Goal 56. Weak Mutation 89: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - InsertUnaryOp IINC -1 index
   * Goal 57. Weak Mutation 91: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - ReplaceArithmeticOperator - -> %
   * Goal 58. Weak Mutation 93: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - ReplaceArithmeticOperator - -> /
   * Goal 59. Weak Mutation 94: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - ReplaceConstant - 1 -> 0
   * Goal 60. Weak Mutation 95: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - ReplaceArithmeticOperator - -> +
   * Goal 61. Weak Mutation 97: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - ReplaceArithmeticOperator - -> *
   * Goal 62. Weak Mutation 98: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:67 - ReplaceArithmeticOperator - -> /
   */

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      stack0.push("SHSEHH`C");
      stack0.get(0);
      assertEquals(1, stack0.size());
  }

  //Test case number: 8
  /*
   * 38 covered goals:
   * Goal 1. org.sonatype.aether.util.graph.Stack.<init>()V: root-Branch
   * Goal 2. org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;: I3 Branch 4 IFLT L63 - false
   * Goal 3. org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;: I7 Branch 5 IF_ICMPLT L63 - false
   * Goal 4. Branch org.sonatype.aether.util.graph.Stack.<init>()V: root-Branch in context: 
   * Goal 5. Branch org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;: I3 Branch 4 IFLT L63 - false in context: org.sonatype.aether.util.graph.Stack:get(I)Ljava/lang/Object;
   * Goal 6. Branch org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;: I7 Branch 5 IF_ICMPLT L63 - false in context: org.sonatype.aether.util.graph.Stack:get(I)Ljava/lang/Object;
   * Goal 7. get(I)Ljava/lang/Object;_java.lang.IndexOutOfBoundsException_EXPLICIT
   * Goal 8. org.sonatype.aether.util.graph.Stack.<init>()V: Line 19
   * Goal 9. org.sonatype.aether.util.graph.Stack.<init>()V: Line 24
   * Goal 10. org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;: Line 63
   * Goal 11. org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;: Line 65
   * Goal 12. [METHOD] org.sonatype.aether.util.graph.Stack.<init>()V
   * Goal 13. [METHOD] org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;
   * Goal 14. [METHODNOEX] org.sonatype.aether.util.graph.Stack.<init>()V
   * Goal 15. Weak Mutation 0: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 0
   * Goal 16. Weak Mutation 1: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 1
   * Goal 17. Weak Mutation 2: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> -1
   * Goal 18. Weak Mutation 3: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 63
   * Goal 19. Weak Mutation 4: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 65
   * Goal 20. Weak Mutation 61: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp Negation of index
   * Goal 21. Weak Mutation 62: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp IINC 1 index
   * Goal 22. Weak Mutation 63: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp IINC -1 index
   * Goal 23. Weak Mutation 66: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - ReplaceComparisonOperator < -> <=
   * Goal 24. Weak Mutation 67: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp Negation of index
   * Goal 25. Weak Mutation 68: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp IINC 1 index
   * Goal 26. Weak Mutation 69: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp IINC -1 index
   * Goal 27. Weak Mutation 70: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp Negation
   * Goal 28. Weak Mutation 71: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp +1
   * Goal 29. Weak Mutation 72: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp -1
   * Goal 30. Weak Mutation 75: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - ReplaceComparisonOperator < -> <=
   * Goal 31. Weak Mutation 76: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:65 - ReplaceConstant - Index:  -> 
   * Goal 32. Weak Mutation 77: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:65 - InsertUnaryOp Negation of index
   * Goal 33. Weak Mutation 78: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:65 - InsertUnaryOp IINC 1 index
   * Goal 34. Weak Mutation 79: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:65 - InsertUnaryOp IINC -1 index
   * Goal 35. Weak Mutation 80: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:65 - ReplaceConstant - , Size:  -> 
   * Goal 36. Weak Mutation 81: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:65 - InsertUnaryOp Negation
   * Goal 37. Weak Mutation 82: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:65 - InsertUnaryOp +1
   * Goal 38. Weak Mutation 83: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:65 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      // Undeclared exception!
      try { 
        stack0.get(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("org.sonatype.aether.util.graph.Stack", e);
      }
  }

  //Test case number: 9
  /*
   * 29 covered goals:
   * Goal 1. org.sonatype.aether.util.graph.Stack.<init>()V: root-Branch
   * Goal 2. org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;: I3 Branch 4 IFLT L63 - true
   * Goal 3. Branch org.sonatype.aether.util.graph.Stack.<init>()V: root-Branch in context: 
   * Goal 4. Branch org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;: I3 Branch 4 IFLT L63 - true in context: org.sonatype.aether.util.graph.Stack:get(I)Ljava/lang/Object;
   * Goal 5. get(I)Ljava/lang/Object;_java.lang.IndexOutOfBoundsException_EXPLICIT
   * Goal 6. org.sonatype.aether.util.graph.Stack.<init>()V: Line 19
   * Goal 7. org.sonatype.aether.util.graph.Stack.<init>()V: Line 24
   * Goal 8. org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;: Line 63
   * Goal 9. org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;: Line 65
   * Goal 10. [METHOD] org.sonatype.aether.util.graph.Stack.<init>()V
   * Goal 11. [METHOD] org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;
   * Goal 12. [METHODNOEX] org.sonatype.aether.util.graph.Stack.<init>()V
   * Goal 13. Weak Mutation 0: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 0
   * Goal 14. Weak Mutation 1: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 1
   * Goal 15. Weak Mutation 2: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> -1
   * Goal 16. Weak Mutation 3: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 63
   * Goal 17. Weak Mutation 4: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 65
   * Goal 18. Weak Mutation 61: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp Negation of index
   * Goal 19. Weak Mutation 62: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp IINC 1 index
   * Goal 20. Weak Mutation 63: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - InsertUnaryOp IINC -1 index
   * Goal 21. Weak Mutation 64: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:63 - ReplaceComparisonOperator < -> -2
   * Goal 22. Weak Mutation 76: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:65 - ReplaceConstant - Index:  -> 
   * Goal 23. Weak Mutation 77: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:65 - InsertUnaryOp Negation of index
   * Goal 24. Weak Mutation 78: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:65 - InsertUnaryOp IINC 1 index
   * Goal 25. Weak Mutation 79: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:65 - InsertUnaryOp IINC -1 index
   * Goal 26. Weak Mutation 80: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:65 - ReplaceConstant - , Size:  -> 
   * Goal 27. Weak Mutation 81: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:65 - InsertUnaryOp Negation
   * Goal 28. Weak Mutation 82: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:65 - InsertUnaryOp +1
   * Goal 29. Weak Mutation 83: org.sonatype.aether.util.graph.Stack.get(I)Ljava/lang/Object;:65 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      // Undeclared exception!
      try { 
        stack0.get((-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1, Size: 0
         //
         verifyException("org.sonatype.aether.util.graph.Stack", e);
      }
  }

  //Test case number: 10
  /*
   * 22 covered goals:
   * Goal 1. org.sonatype.aether.util.graph.Stack.<init>()V: root-Branch
   * Goal 2. org.sonatype.aether.util.graph.Stack.peek()Ljava/lang/Object;: I4 Branch 3 IFGT L52 - false
   * Goal 3. Branch org.sonatype.aether.util.graph.Stack.<init>()V: root-Branch in context: 
   * Goal 4. Branch org.sonatype.aether.util.graph.Stack.peek()Ljava/lang/Object;: I4 Branch 3 IFGT L52 - false in context: org.sonatype.aether.util.graph.Stack:peek()Ljava/lang/Object;
   * Goal 5. [Output]: org.sonatype.aether.util.graph.Stack.peek()Ljava/lang/Object;:Null
   * Goal 6. org.sonatype.aether.util.graph.Stack.<init>()V: Line 19
   * Goal 7. org.sonatype.aether.util.graph.Stack.<init>()V: Line 24
   * Goal 8. org.sonatype.aether.util.graph.Stack.peek()Ljava/lang/Object;: Line 52
   * Goal 9. org.sonatype.aether.util.graph.Stack.peek()Ljava/lang/Object;: Line 54
   * Goal 10. [METHOD] org.sonatype.aether.util.graph.Stack.<init>()V
   * Goal 11. [METHOD] org.sonatype.aether.util.graph.Stack.peek()Ljava/lang/Object;
   * Goal 12. [METHODNOEX] org.sonatype.aether.util.graph.Stack.<init>()V
   * Goal 13. [METHODNOEX] org.sonatype.aether.util.graph.Stack.peek()Ljava/lang/Object;
   * Goal 14. Weak Mutation 0: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 0
   * Goal 15. Weak Mutation 1: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 1
   * Goal 16. Weak Mutation 2: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> -1
   * Goal 17. Weak Mutation 3: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 63
   * Goal 18. Weak Mutation 4: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 65
   * Goal 19. Weak Mutation 47: org.sonatype.aether.util.graph.Stack.peek()Ljava/lang/Object;:52 - InsertUnaryOp Negation
   * Goal 20. Weak Mutation 48: org.sonatype.aether.util.graph.Stack.peek()Ljava/lang/Object;:52 - InsertUnaryOp +1
   * Goal 21. Weak Mutation 49: org.sonatype.aether.util.graph.Stack.peek()Ljava/lang/Object;:52 - InsertUnaryOp -1
   * Goal 22. Weak Mutation 52: org.sonatype.aether.util.graph.Stack.peek()Ljava/lang/Object;:52 - ReplaceComparisonOperator > -> >=
   */

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      Object object0 = stack0.peek();
      assertNull(object0);
  }

  //Test case number: 11
  /*
   * 21 covered goals:
   * Goal 1. org.sonatype.aether.util.graph.Stack.<init>()V: root-Branch
   * Goal 2. org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;: I4 Branch 2 IFGT L42 - false
   * Goal 3. Branch org.sonatype.aether.util.graph.Stack.<init>()V: root-Branch in context: 
   * Goal 4. Branch org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;: I4 Branch 2 IFGT L42 - false in context: org.sonatype.aether.util.graph.Stack:pop()Ljava/lang/Object;
   * Goal 5. pop()Ljava/lang/Object;_java.util.NoSuchElementException_EXPLICIT
   * Goal 6. org.sonatype.aether.util.graph.Stack.<init>()V: Line 19
   * Goal 7. org.sonatype.aether.util.graph.Stack.<init>()V: Line 24
   * Goal 8. org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;: Line 42
   * Goal 9. org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;: Line 44
   * Goal 10. [METHOD] org.sonatype.aether.util.graph.Stack.<init>()V
   * Goal 11. [METHOD] org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;
   * Goal 12. [METHODNOEX] org.sonatype.aether.util.graph.Stack.<init>()V
   * Goal 13. Weak Mutation 0: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 0
   * Goal 14. Weak Mutation 1: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 1
   * Goal 15. Weak Mutation 2: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> -1
   * Goal 16. Weak Mutation 3: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 63
   * Goal 17. Weak Mutation 4: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 65
   * Goal 18. Weak Mutation 33: org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;:42 - InsertUnaryOp Negation
   * Goal 19. Weak Mutation 34: org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;:42 - InsertUnaryOp +1
   * Goal 20. Weak Mutation 35: org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;:42 - InsertUnaryOp -1
   * Goal 21. Weak Mutation 38: org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;:42 - ReplaceComparisonOperator > -> >=
   */

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      // Undeclared exception!
      try { 
        stack0.pop();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sonatype.aether.util.graph.Stack", e);
      }
  }

  //Test case number: 12
  /*
   * 48 covered goals:
   * Goal 1. org.sonatype.aether.util.graph.Stack.<init>()V: root-Branch
   * Goal 2. org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: I7 Branch 1 IF_ICMPLT L30 - true
   * Goal 3. org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;: I4 Branch 2 IFGT L42 - true
   * Goal 4. Branch org.sonatype.aether.util.graph.Stack.<init>()V: root-Branch in context: 
   * Goal 5. Branch org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: I7 Branch 1 IF_ICMPLT L30 - true in context: org.sonatype.aether.util.graph.Stack:push(Ljava/lang/Object;)V
   * Goal 6. Branch org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;: I4 Branch 2 IFGT L42 - true in context: org.sonatype.aether.util.graph.Stack:pop()Ljava/lang/Object;
   * Goal 7. [Output]: org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;:NonNull
   * Goal 8. org.sonatype.aether.util.graph.Stack.<init>()V: Line 19
   * Goal 9. org.sonatype.aether.util.graph.Stack.<init>()V: Line 24
   * Goal 10. org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;: Line 42
   * Goal 11. org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;: Line 46
   * Goal 12. org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: Line 30
   * Goal 13. org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: Line 36
   * Goal 14. org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V: Line 37
   * Goal 15. [METHOD] org.sonatype.aether.util.graph.Stack.<init>()V
   * Goal 16. [METHOD] org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;
   * Goal 17. [METHOD] org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V
   * Goal 18. [METHODNOEX] org.sonatype.aether.util.graph.Stack.<init>()V
   * Goal 19. [METHODNOEX] org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;
   * Goal 20. [METHODNOEX] org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V
   * Goal 21. Weak Mutation 0: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 0
   * Goal 22. Weak Mutation 1: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 1
   * Goal 23. Weak Mutation 2: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> -1
   * Goal 24. Weak Mutation 3: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 63
   * Goal 25. Weak Mutation 4: org.sonatype.aether.util.graph.Stack.<init>()V:24 - ReplaceConstant - 64 -> 65
   * Goal 26. Weak Mutation 5: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:30 - InsertUnaryOp Negation
   * Goal 27. Weak Mutation 6: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:30 - InsertUnaryOp +1
   * Goal 28. Weak Mutation 7: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:30 - InsertUnaryOp -1
   * Goal 29. Weak Mutation 9: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:30 - ReplaceComparisonOperator < -> -2
   * Goal 30. Weak Mutation 25: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - InsertUnaryOp Negation
   * Goal 31. Weak Mutation 26: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - InsertUnaryOp +1
   * Goal 32. Weak Mutation 27: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - InsertUnaryOp -1
   * Goal 33. Weak Mutation 28: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceConstant - 1 -> 0
   * Goal 34. Weak Mutation 29: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceArithmeticOperator + -> %
   * Goal 35. Weak Mutation 30: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceArithmeticOperator + -> -
   * Goal 36. Weak Mutation 31: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceArithmeticOperator + -> *
   * Goal 37. Weak Mutation 32: org.sonatype.aether.util.graph.Stack.push(Ljava/lang/Object;)V:36 - ReplaceArithmeticOperator + -> /
   * Goal 38. Weak Mutation 33: org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;:42 - InsertUnaryOp Negation
   * Goal 39. Weak Mutation 34: org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;:42 - InsertUnaryOp +1
   * Goal 40. Weak Mutation 35: org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;:42 - InsertUnaryOp -1
   * Goal 41. Weak Mutation 36: org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;:42 - ReplaceComparisonOperator > -> -2
   * Goal 42. Weak Mutation 39: org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;:46 - InsertUnaryOp Negation
   * Goal 43. Weak Mutation 40: org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;:46 - InsertUnaryOp +1
   * Goal 44. Weak Mutation 41: org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;:46 - InsertUnaryOp -1
   * Goal 45. Weak Mutation 42: org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;:46 - ReplaceConstant - 1 -> 0
   * Goal 46. Weak Mutation 43: org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;:46 - ReplaceArithmeticOperator - -> +
   * Goal 47. Weak Mutation 45: org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;:46 - ReplaceArithmeticOperator - -> *
   * Goal 48. Weak Mutation 46: org.sonatype.aether.util.graph.Stack.pop()Ljava/lang/Object;:46 - ReplaceArithmeticOperator - -> /
   */

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      stack0.push("SHSEHH`C");
      assertEquals(1, stack0.size());
      
      stack0.pop();
      assertEquals(0, stack0.size());
  }
}
