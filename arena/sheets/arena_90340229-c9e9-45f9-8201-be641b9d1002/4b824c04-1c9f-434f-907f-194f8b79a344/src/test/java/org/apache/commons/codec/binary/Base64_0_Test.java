/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 21 09:23:02 GMT 2024
 */

package org.apache.commons.codec.binary;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigInteger;
import org.apache.commons.codec.CodecPolicy;
import org.apache.commons.codec.binary.Base64;
import org.apache.commons.codec.binary.BaseNCodec;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Base64_0_Test {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.codec.binary.Base64"; 
//    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/usr/src/mymaven/4b824c04-1c9f-434f-907f-194f8b79a344"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Base64_0_Test.class.getClassLoader() ,
      "org.apache.commons.codec.binary.BaseNCodec",
      "org.apache.commons.codec.CodecPolicy",
      "org.apache.commons.codec.Encoder",
      "org.apache.commons.codec.BinaryEncoder",
      "org.apache.commons.codec.binary.BaseNCodec$Context",
      "org.apache.commons.codec.DecoderException",
      "org.apache.commons.codec.EncoderException",
      "org.apache.commons.codec.Decoder",
      "org.apache.commons.codec.binary.StringUtils",
      "org.apache.commons.codec.BinaryDecoder",
      "org.apache.commons.codec.binary.Base64"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Base64_0_Test.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.apache.commons.codec.CodecPolicy",
      "org.apache.commons.codec.binary.BaseNCodec",
      "org.apache.commons.codec.binary.Base64",
      "org.apache.commons.codec.binary.StringUtils",
      "org.apache.commons.codec.binary.BaseNCodec$Context",
      "org.apache.commons.codec.EncoderException",
      "org.apache.commons.codec.DecoderException"
    );
  }

  //Test case number: 0
  /*
   * 108 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 2. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 3. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 4. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - false
   * Goal 5. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true
   * Goal 6. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 7. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - true
   * Goal 8. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 9. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 10. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 11. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 12. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 13. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - false in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 14. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 15. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 16. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - true in context: 
   * Goal 17. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 18. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 19. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 20. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 21. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 22. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 23. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 24. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 597
   * Goal 25. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 598
   * Goal 26. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 599
   * Goal 27. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 28. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 29. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 30. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 31. [METHOD] org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 32. [METHODNOEX] org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 33. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 34. Weak Mutation 331: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceVariable lineSeparator -> CHUNK_SEPARATOR
   * Goal 35. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 36. Weak Mutation 333: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceVariable lineSeparator -> CHUNK_SEPARATOR
   * Goal 37. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 38. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 39. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 40. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 41. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 42. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 43. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 44. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 45. Weak Mutation 346: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> -1
   * Goal 46. Weak Mutation 349: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> 0
   * Goal 47. Weak Mutation 350: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> 1
   * Goal 48. Weak Mutation 351: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> -1
   * Goal 49. Weak Mutation 352: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> 3
   * Goal 50. Weak Mutation 353: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> 5
   * Goal 51. Weak Mutation 354: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceVariable lineSeparator -> CHUNK_SEPARATOR
   * Goal 52. Weak Mutation 355: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceArithmeticOperator + -> %
   * Goal 53. Weak Mutation 356: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceArithmeticOperator + -> -
   * Goal 54. Weak Mutation 357: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceArithmeticOperator + -> *
   * Goal 55. Weak Mutation 358: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceArithmeticOperator + -> /
   * Goal 56. Weak Mutation 359: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:598 - ReplaceVariable lineSeparator -> CHUNK_SEPARATOR
   * Goal 57. Weak Mutation 360: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:599 - ReplaceVariable lineSeparator -> CHUNK_SEPARATOR
   * Goal 58. Weak Mutation 361: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:599 - ReplaceConstant - 0 -> 1
   * Goal 59. Weak Mutation 362: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:599 - ReplaceVariable lineSeparator -> CHUNK_SEPARATOR
   * Goal 60. Weak Mutation 363: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:599 - ReplaceConstant - 0 -> 1
   * Goal 61. Weak Mutation 364: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:599 - ReplaceVariable lineSeparator -> CHUNK_SEPARATOR
   * Goal 62. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 63. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 64. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 65. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 66. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 67. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 68. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 69. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 70. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 71. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 72. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 73. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 74. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 75. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 76. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 77. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 78. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 79. Weak Mutation 393: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 80. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 81. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 82. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 83. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 84. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 85. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 86. Weak Mutation 713: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> !=
   * Goal 87. Weak Mutation 714: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> <=
   * Goal 88. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 89. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 90. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 91. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 92. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 93. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 94. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 95. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 96. Weak Mutation 723: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> >
   * Goal 97. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 98. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 99. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 100. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 101. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 102. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 103. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 104. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 105. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 106. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 107. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 108. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)123;
      CodecPolicy codecPolicy0 = CodecPolicy.LENIENT;
      Base64 base64_0 = new Base64(56, byteArray0, false, codecPolicy0);
      assertFalse(base64_0.isUrlSafe());
  }

  //Test case number: 1
  /*
   * 381 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.<init>(I[B)V: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.<init>(I)V: root-Branch
   * Goal 4. org.apache.commons.codec.binary.Base64.<init>()V: root-Branch
   * Goal 5. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 6. org.apache.commons.codec.binary.Base64.<init>(Z)V: root-Branch
   * Goal 7. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 8. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 9. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 10. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true
   * Goal 11. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - false
   * Goal 12. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true
   * Goal 13. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - true
   * Goal 14. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - true
   * Goal 15. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - false
   * Goal 16. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - true
   * Goal 17. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - false
   * Goal 18. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I45 Branch 23 IF_ICMPNE L650 - true
   * Goal 19. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I57 Branch 24 IFLT L655 - true
   * Goal 20. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I57 Branch 24 IFLT L655 - false
   * Goal 21. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I61 Branch 25 IF_ICMPGE L655 - false
   * Goal 22. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - true
   * Goal 23. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - false
   * Goal 24. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I96 Branch 27 IFNE L660 - true
   * Goal 25. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I96 Branch 27 IFNE L660 - false
   * Goal 26. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - true
   * Goal 27. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - false
   * Goal 28. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I160 Branch 29 IFEQ L672 - false
   * Goal 29. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 30 TABLESWITCH L677 Case 1 - false
   * Goal 30. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 31 TABLESWITCH L677 Case 2 - false
   * Goal 31. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 32 TABLESWITCH L677 Case 3 - true
   * Goal 32. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 33 TABLESWITCH L677 Default-Case - false
   * Goal 33. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 34. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 35. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 36. org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 55 IFEQ L827 - true
   * Goal 37. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch in context: org.apache.commons.codec.binary.Base64:<init>(I[BZ)V
   * Goal 38. Branch org.apache.commons.codec.binary.Base64.<init>(Z)V: root-Branch in context: org.apache.commons.codec.binary.Base64:<init>(Z)V
   * Goal 39. Branch org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B: root-Branch in context: org.apache.commons.codec.binary.Base64:decodeBase64(Ljava/lang/String;)[B
   * Goal 40. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 41. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 42. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 43. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - false in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 44. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 45. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - true in context: 
   * Goal 46. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - true in context: 
   * Goal 47. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - false in context: 
   * Goal 48. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - true in context: 
   * Goal 49. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - false in context: 
   * Goal 50. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I45 Branch 23 IF_ICMPNE L650 - true in context: 
   * Goal 51. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I57 Branch 24 IFLT L655 - false in context: 
   * Goal 52. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I61 Branch 25 IF_ICMPGE L655 - false in context: 
   * Goal 53. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - false in context: 
   * Goal 54. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - true in context: 
   * Goal 55. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I96 Branch 27 IFNE L660 - true in context: 
   * Goal 56. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I96 Branch 27 IFNE L660 - false in context: 
   * Goal 57. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I160 Branch 29 IFEQ L672 - false in context: 
   * Goal 58. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - true in context: 
   * Goal 59. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - false in context: 
   * Goal 60. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 31 TABLESWITCH L677 Case 2 - false in context: 
   * Goal 61. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 30 TABLESWITCH L677 Case 1 - false in context: 
   * Goal 62. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 32 TABLESWITCH L677 Case 3 - true in context: 
   * Goal 63. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 33 TABLESWITCH L677 Default-Case - false in context: 
   * Goal 64. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 65. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 66. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 67. Branch org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 55 IFEQ L827 - true in context: 
   * Goal 68. [Output]: org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B:NonEmptyArray
   * Goal 69. org.apache.commons.codec.binary.Base64.<init>()V: Line 452
   * Goal 70. org.apache.commons.codec.binary.Base64.<init>()V: Line 453
   * Goal 71. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 494
   * Goal 72. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 495
   * Goal 73. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 521
   * Goal 74. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 522
   * Goal 75. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 76. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 77. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 78. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 79. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 80. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 81. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 82. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 597
   * Goal 83. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 598
   * Goal 84. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 599
   * Goal 85. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 601
   * Goal 86. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 602
   * Goal 87. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 88. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 89. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 90. org.apache.commons.codec.binary.Base64.<init>(Z)V: Line 471
   * Goal 91. org.apache.commons.codec.binary.Base64.<init>(Z)V: Line 472
   * Goal 92. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 641
   * Goal 93. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 644
   * Goal 94. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 645
   * Goal 95. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 647
   * Goal 96. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 648
   * Goal 97. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 649
   * Goal 98. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 650
   * Goal 99. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 655
   * Goal 100. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 656
   * Goal 101. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 657
   * Goal 102. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 658
   * Goal 103. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 659
   * Goal 104. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 660
   * Goal 105. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 661
   * Goal 106. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 662
   * Goal 107. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 663
   * Goal 108. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 672
   * Goal 109. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 673
   * Goal 110. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 677
   * Goal 111. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 688
   * Goal 112. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 689
   * Goal 113. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 690
   * Goal 114. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 691
   * Goal 115. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 692
   * Goal 116. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 697
   * Goal 117. org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B: Line 158
   * Goal 118. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 119. org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 827
   * Goal 120. org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 832
   * Goal 121. [METHOD] org.apache.commons.codec.binary.Base64.<init>(Z)V
   * Goal 122. [METHOD] org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V
   * Goal 123. [METHOD] org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B
   * Goal 124. [METHODNOEX] org.apache.commons.codec.binary.Base64.<init>(Z)V
   * Goal 125. [METHODNOEX] org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V
   * Goal 126. [METHODNOEX] org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B
   * Goal 127. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 128. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 129. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 130. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 131. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 132. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 133. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 134. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 135. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 136. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 137. Weak Mutation 346: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> -1
   * Goal 138. Weak Mutation 348: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> <
   * Goal 139. Weak Mutation 349: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> 0
   * Goal 140. Weak Mutation 350: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> 1
   * Goal 141. Weak Mutation 351: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> -1
   * Goal 142. Weak Mutation 352: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> 3
   * Goal 143. Weak Mutation 353: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> 5
   * Goal 144. Weak Mutation 355: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceArithmeticOperator + -> %
   * Goal 145. Weak Mutation 356: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceArithmeticOperator + -> -
   * Goal 146. Weak Mutation 357: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceArithmeticOperator + -> *
   * Goal 147. Weak Mutation 358: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceArithmeticOperator + -> /
   * Goal 148. Weak Mutation 361: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:599 - ReplaceConstant - 0 -> 1
   * Goal 149. Weak Mutation 362: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:599 - ReplaceVariable lineSeparator -> CHUNK_SEPARATOR
   * Goal 150. Weak Mutation 363: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:599 - ReplaceConstant - 0 -> 1
   * Goal 151. Weak Mutation 365: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 0
   * Goal 152. Weak Mutation 366: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 1
   * Goal 153. Weak Mutation 367: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> -1
   * Goal 154. Weak Mutation 368: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 3
   * Goal 155. Weak Mutation 369: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 5
   * Goal 156. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 157. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 158. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 159. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 160. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 161. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 162. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 163. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 164. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 165. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 166. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 167. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 168. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 169. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 170. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 171. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 172. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 173. Weak Mutation 393: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 174. Weak Mutation 394: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:641 - InsertUnaryOp Negation
   * Goal 175. Weak Mutation 395: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:641 - ReplaceComparisonOperator == -> !=
   * Goal 176. Weak Mutation 396: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 177. Weak Mutation 397: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 178. Weak Mutation 398: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> inPos
   * Goal 179. Weak Mutation 399: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> lineLength
   * Goal 180. Weak Mutation 400: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> EOF
   * Goal 181. Weak Mutation 401: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 182. Weak Mutation 402: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp Negation of inAvail
   * Goal 183. Weak Mutation 403: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp IINC 1 inAvail
   * Goal 184. Weak Mutation 404: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp IINC -1 inAvail
   * Goal 185. Weak Mutation 405: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceComparisonOperator >= -> -1
   * Goal 186. Weak Mutation 406: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceComparisonOperator >= -> ==
   * Goal 187. Weak Mutation 408: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:645 - ReplaceConstant - 1 -> 0
   * Goal 188. Weak Mutation 409: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceConstant - 0 -> 1
   * Goal 189. Weak Mutation 410: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 190. Weak Mutation 411: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> inAvail
   * Goal 191. Weak Mutation 412: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> inPos
   * Goal 192. Weak Mutation 413: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> MASK_8BITS
   * Goal 193. Weak Mutation 414: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 194. Weak Mutation 415: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> lineLength
   * Goal 195. Weak Mutation 416: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> EOF
   * Goal 196. Weak Mutation 417: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp Negation of i
   * Goal 197. Weak Mutation 418: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC 1 i
   * Goal 198. Weak Mutation 419: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC -1 i
   * Goal 199. Weak Mutation 420: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 200. Weak Mutation 421: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> inPos
   * Goal 201. Weak Mutation 422: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 202. Weak Mutation 423: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> i
   * Goal 203. Weak Mutation 424: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 204. Weak Mutation 425: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> lineLength
   * Goal 205. Weak Mutation 426: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> EOF
   * Goal 206. Weak Mutation 427: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp Negation of inAvail
   * Goal 207. Weak Mutation 428: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC 1 inAvail
   * Goal 208. Weak Mutation 429: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC -1 inAvail
   * Goal 209. Weak Mutation 430: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> -1
   * Goal 210. Weak Mutation 431: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> >
   * Goal 211. Weak Mutation 432: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> ==
   * Goal 212. Weak Mutation 433: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> PEM_CHUNK_SIZE
   * Goal 213. Weak Mutation 434: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> MIME_CHUNK_SIZE
   * Goal 214. Weak Mutation 435: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> lineLength
   * Goal 215. Weak Mutation 436: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> EOF
   * Goal 216. Weak Mutation 437: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> MASK_8BITS
   * Goal 217. Weak Mutation 438: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp Negation
   * Goal 218. Weak Mutation 439: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp +1
   * Goal 219. Weak Mutation 440: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp -1
   * Goal 220. Weak Mutation 441: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable in -> CHUNK_SEPARATOR
   * Goal 221. Weak Mutation 442: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable in -> buffer
   * Goal 222. Weak Mutation 443: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> PEM_CHUNK_SIZE
   * Goal 223. Weak Mutation 444: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> inAvail
   * Goal 224. Weak Mutation 445: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> MASK_8BITS
   * Goal 225. Weak Mutation 446: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> i
   * Goal 226. Weak Mutation 447: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> MIME_CHUNK_SIZE
   * Goal 227. Weak Mutation 448: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> lineLength
   * Goal 228. Weak Mutation 449: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> EOF
   * Goal 229. Weak Mutation 450: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp Negation of inPos
   * Goal 230. Weak Mutation 451: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp IINC 1 inPos
   * Goal 231. Weak Mutation 452: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp IINC -1 inPos
   * Goal 232. Weak Mutation 453: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> inAvail
   * Goal 233. Weak Mutation 454: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> i
   * Goal 234. Weak Mutation 455: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> PAD
   * Goal 235. Weak Mutation 456: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> pad
   * Goal 236. Weak Mutation 457: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 237. Weak Mutation 458: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp Negation of b
   * Goal 238. Weak Mutation 459: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp IINC 1 b
   * Goal 239. Weak Mutation 460: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp IINC -1 b
   * Goal 240. Weak Mutation 463: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp Negation
   * Goal 241. Weak Mutation 465: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceComparisonOperator != -> <
   * Goal 242. Weak Mutation 466: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceComparisonOperator != -> >
   * Goal 243. Weak Mutation 468: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD
   * Goal 244. Weak Mutation 469: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> pad
   * Goal 245. Weak Mutation 470: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 246. Weak Mutation 471: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp Negation of b
   * Goal 247. Weak Mutation 472: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC 1 b
   * Goal 248. Weak Mutation 473: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC -1 b
   * Goal 249. Weak Mutation 474: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceComparisonOperator < -> -2
   * Goal 250. Weak Mutation 475: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceComparisonOperator < -> !=
   * Goal 251. Weak Mutation 477: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD
   * Goal 252. Weak Mutation 478: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> pad
   * Goal 253. Weak Mutation 479: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 254. Weak Mutation 480: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp Negation of b
   * Goal 255. Weak Mutation 481: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC 1 b
   * Goal 256. Weak Mutation 482: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC -1 b
   * Goal 257. Weak Mutation 483: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 258. Weak Mutation 484: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceComparisonOperator >= -> -1
   * Goal 259. Weak Mutation 487: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 260. Weak Mutation 488: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> PAD
   * Goal 261. Weak Mutation 489: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> pad
   * Goal 262. Weak Mutation 490: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 263. Weak Mutation 491: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp Negation of b
   * Goal 264. Weak Mutation 492: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp IINC 1 b
   * Goal 265. Weak Mutation 493: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp IINC -1 b
   * Goal 266. Weak Mutation 494: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> PEM_CHUNK_SIZE
   * Goal 267. Weak Mutation 495: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> inAvail
   * Goal 268. Weak Mutation 496: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> inPos
   * Goal 269. Weak Mutation 497: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> MASK_8BITS
   * Goal 270. Weak Mutation 498: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> i
   * Goal 271. Weak Mutation 499: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> MIME_CHUNK_SIZE
   * Goal 272. Weak Mutation 500: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> lineLength
   * Goal 273. Weak Mutation 501: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> EOF
   * Goal 274. Weak Mutation 502: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp Negation of result
   * Goal 275. Weak Mutation 503: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp IINC 1 result
   * Goal 276. Weak Mutation 504: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp IINC -1 result
   * Goal 277. Weak Mutation 505: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceComparisonOperator < -> -2
   * Goal 278. Weak Mutation 506: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceComparisonOperator < -> !=
   * Goal 279. Weak Mutation 508: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - InsertUnaryOp Negation
   * Goal 280. Weak Mutation 509: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - InsertUnaryOp +1
   * Goal 281. Weak Mutation 510: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - InsertUnaryOp -1
   * Goal 282. Weak Mutation 511: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 1 -> 0
   * Goal 283. Weak Mutation 512: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> %
   * Goal 284. Weak Mutation 513: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> -
   * Goal 285. Weak Mutation 514: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> *
   * Goal 286. Weak Mutation 515: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> /
   * Goal 287. Weak Mutation 516: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 0
   * Goal 288. Weak Mutation 517: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 1
   * Goal 289. Weak Mutation 518: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> -1
   * Goal 290. Weak Mutation 519: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 3
   * Goal 291. Weak Mutation 520: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 5
   * Goal 292. Weak Mutation 521: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> +
   * Goal 293. Weak Mutation 522: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> -
   * Goal 294. Weak Mutation 523: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> *
   * Goal 295. Weak Mutation 524: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> /
   * Goal 296. Weak Mutation 525: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp Negation
   * Goal 297. Weak Mutation 526: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp +1
   * Goal 298. Weak Mutation 527: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp -1
   * Goal 299. Weak Mutation 528: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 0
   * Goal 300. Weak Mutation 529: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 1
   * Goal 301. Weak Mutation 530: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> -1
   * Goal 302. Weak Mutation 531: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 5
   * Goal 303. Weak Mutation 532: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 7
   * Goal 304. Weak Mutation 533: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceBitwiseOperator << I -> >> I
   * Goal 305. Weak Mutation 534: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceBitwiseOperator << I -> >>> I
   * Goal 306. Weak Mutation 535: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> PEM_CHUNK_SIZE
   * Goal 307. Weak Mutation 536: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> inAvail
   * Goal 308. Weak Mutation 537: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> inPos
   * Goal 309. Weak Mutation 538: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> MASK_8BITS
   * Goal 310. Weak Mutation 539: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> i
   * Goal 311. Weak Mutation 540: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> MIME_CHUNK_SIZE
   * Goal 312. Weak Mutation 541: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> lineLength
   * Goal 313. Weak Mutation 542: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> EOF
   * Goal 314. Weak Mutation 543: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp Negation of result
   * Goal 315. Weak Mutation 544: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp IINC 1 result
   * Goal 316. Weak Mutation 545: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp IINC -1 result
   * Goal 317. Weak Mutation 546: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> %
   * Goal 318. Weak Mutation 547: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> -
   * Goal 319. Weak Mutation 548: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> *
   * Goal 320. Weak Mutation 549: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> /
   * Goal 321. Weak Mutation 550: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - InsertUnaryOp Negation
   * Goal 322. Weak Mutation 551: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - InsertUnaryOp +1
   * Goal 323. Weak Mutation 552: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - InsertUnaryOp -1
   * Goal 324. Weak Mutation 553: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - ReplaceComparisonOperator != -> -1
   * Goal 325. Weak Mutation 554: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - ReplaceComparisonOperator != -> <
   * Goal 326. Weak Mutation 555: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - ReplaceComparisonOperator != -> >
   * Goal 327. Weak Mutation 556: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceVariable buffer -> in
   * Goal 328. Weak Mutation 557: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceVariable buffer -> CHUNK_SEPARATOR
   * Goal 329. Weak Mutation 558: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp Negation
   * Goal 330. Weak Mutation 559: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp +1
   * Goal 331. Weak Mutation 560: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp -1
   * Goal 332. Weak Mutation 561: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 1 -> 0
   * Goal 333. Weak Mutation 562: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceArithmeticOperator + -> %
   * Goal 334. Weak Mutation 563: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceArithmeticOperator + -> -
   * Goal 335. Weak Mutation 564: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceArithmeticOperator + -> *
   * Goal 336. Weak Mutation 565: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceArithmeticOperator + -> /
   * Goal 337. Weak Mutation 566: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp Negation
   * Goal 338. Weak Mutation 567: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp +1
   * Goal 339. Weak Mutation 568: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp -1
   * Goal 340. Weak Mutation 569: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 16 -> 0
   * Goal 341. Weak Mutation 570: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 16 -> 1
   * Goal 342. Weak Mutation 571: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 16 -> -1
   * Goal 343. Weak Mutation 572: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 16 -> 15
   * Goal 344. Weak Mutation 573: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 16 -> 17
   * Goal 345. Weak Mutation 574: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceBitwiseOperator >> I -> << I
   * Goal 346. Weak Mutation 575: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceBitwiseOperator >> I -> >>> I
   * Goal 347. Weak Mutation 576: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 255 -> 0
   * Goal 348. Weak Mutation 577: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 255 -> 1
   * Goal 349. Weak Mutation 578: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 255 -> -1
   * Goal 350. Weak Mutation 579: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 255 -> 254
   * Goal 351. Weak Mutation 580: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 255 -> 256
   * Goal 352. Weak Mutation 581: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceBitwiseOperator & -> |
   * Goal 353. Weak Mutation 582: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceBitwiseOperator & -> ^
   * Goal 354. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 355. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 356. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 357. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 358. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 359. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 360. Weak Mutation 713: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> !=
   * Goal 361. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 362. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 363. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 364. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 365. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 366. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 367. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 368. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 369. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 370. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 371. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 372. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 373. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 374. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 375. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 376. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 377. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 378. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 379. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 380. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   * Goal 381. Weak Mutation 745: org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:827 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        Base64.decodeBase64("Input array too big, the output array would be bigger (");
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // lineSeparator must not contain base64 characters: [\uFFFDg]
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 2
  /*
   * 150 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.<init>(I[B)V: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.<init>(I)V: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.<init>()V: root-Branch
   * Goal 4. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 5. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 6. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 7. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 8. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true
   * Goal 9. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true
   * Goal 10. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - true
   * Goal 11. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - true
   * Goal 12. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - true
   * Goal 13. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - true
   * Goal 14. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 15. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 16. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 17. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch in context: org.apache.commons.codec.binary.Base64:<init>(I[BZ)V
   * Goal 18. Branch org.apache.commons.codec.binary.Base64.<init>(I[B)V: root-Branch in context: org.apache.commons.codec.binary.Base64:<init>(I[B)V
   * Goal 19. Branch org.apache.commons.codec.binary.Base64.<init>()V: root-Branch in context: org.apache.commons.codec.binary.Base64:<init>()V
   * Goal 20. Branch org.apache.commons.codec.binary.Base64.<init>(I)V: root-Branch in context: org.apache.commons.codec.binary.Base64:<init>(I)V
   * Goal 21. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 22. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 23. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 24. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 25. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 26. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - true in context: 
   * Goal 27. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - true in context: 
   * Goal 28. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - true in context: 
   * Goal 29. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - true in context: 
   * Goal 30. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 31. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 32. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 33. org.apache.commons.codec.binary.Base64.<init>()V: Line 452
   * Goal 34. org.apache.commons.codec.binary.Base64.<init>()V: Line 453
   * Goal 35. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 494
   * Goal 36. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 495
   * Goal 37. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 521
   * Goal 38. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 522
   * Goal 39. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 40. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 41. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 42. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 43. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 44. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 45. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 46. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 601
   * Goal 47. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 602
   * Goal 48. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 49. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 50. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 51. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 641
   * Goal 52. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 644
   * Goal 53. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 647
   * Goal 54. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 672
   * Goal 55. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 697
   * Goal 56. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 57. [METHOD] org.apache.commons.codec.binary.Base64.<init>()V
   * Goal 58. [METHOD] org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V
   * Goal 59. [METHODNOEX] org.apache.commons.codec.binary.Base64.<init>()V
   * Goal 60. [METHODNOEX] org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V
   * Goal 61. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 62. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 63. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 64. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 65. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 66. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 67. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 68. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 69. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 70. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 71. Weak Mutation 348: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> <
   * Goal 72. Weak Mutation 365: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 0
   * Goal 73. Weak Mutation 366: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 1
   * Goal 74. Weak Mutation 367: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> -1
   * Goal 75. Weak Mutation 368: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 3
   * Goal 76. Weak Mutation 369: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 5
   * Goal 77. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 78. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 79. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 80. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 81. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 82. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 83. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 84. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 85. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 86. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 87. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 88. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 89. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 90. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 91. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 92. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 93. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 94. Weak Mutation 393: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 95. Weak Mutation 394: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:641 - InsertUnaryOp Negation
   * Goal 96. Weak Mutation 395: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:641 - ReplaceComparisonOperator == -> !=
   * Goal 97. Weak Mutation 396: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 98. Weak Mutation 397: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 99. Weak Mutation 398: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> inPos
   * Goal 100. Weak Mutation 400: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> EOF
   * Goal 101. Weak Mutation 401: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 102. Weak Mutation 402: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp Negation of inAvail
   * Goal 103. Weak Mutation 403: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp IINC 1 inAvail
   * Goal 104. Weak Mutation 404: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp IINC -1 inAvail
   * Goal 105. Weak Mutation 407: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceComparisonOperator >= -> >
   * Goal 106. Weak Mutation 409: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceConstant - 0 -> 1
   * Goal 107. Weak Mutation 410: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 108. Weak Mutation 412: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> inPos
   * Goal 109. Weak Mutation 413: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> MASK_8BITS
   * Goal 110. Weak Mutation 414: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 111. Weak Mutation 416: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> EOF
   * Goal 112. Weak Mutation 417: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp Negation of i
   * Goal 113. Weak Mutation 418: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC 1 i
   * Goal 114. Weak Mutation 419: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC -1 i
   * Goal 115. Weak Mutation 420: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 116. Weak Mutation 421: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> inPos
   * Goal 117. Weak Mutation 422: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 118. Weak Mutation 424: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 119. Weak Mutation 426: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> EOF
   * Goal 120. Weak Mutation 427: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp Negation of inAvail
   * Goal 121. Weak Mutation 428: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC 1 inAvail
   * Goal 122. Weak Mutation 429: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC -1 inAvail
   * Goal 123. Weak Mutation 431: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> >
   * Goal 124. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 125. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 126. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 127. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 128. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 129. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 130. Weak Mutation 713: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> !=
   * Goal 131. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 132. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 133. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 134. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 135. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 136. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 137. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 138. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 139. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 140. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 141. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 142. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 143. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 144. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 145. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 146. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 147. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 148. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 149. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 150. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      Base64 base64_0 = null;
      try {
        base64_0 = new Base64();
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // lineSeparator must not contain base64 characters: [\uFFFDg]
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 3
  /*
   * 67 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.isBase64(Ljava/lang/String;)Z: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I4 Branch 5 IF_ICMPEQ L347 - false
   * Goal 3. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I6 Branch 6 IFLT L347 - false
   * Goal 4. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I10 Branch 7 IF_ICMPGE L347 - true
   * Goal 5. org.apache.commons.codec.binary.Base64.isBase64([B)Z: I8 Branch 9 IF_ICMPGE L361 - false
   * Goal 6. org.apache.commons.codec.binary.Base64.isBase64([B)Z: I15 Branch 10 IFNE L362 - false
   * Goal 7. org.apache.commons.codec.binary.Base64.isBase64([B)Z: I20 Branch 11 IFNE L362 - false
   * Goal 8. Branch org.apache.commons.codec.binary.Base64.isBase64(Ljava/lang/String;)Z: root-Branch in context: org.apache.commons.codec.binary.Base64:isBase64(Ljava/lang/String;)Z
   * Goal 9. [Output]: org.apache.commons.codec.binary.Base64.isBase64(Ljava/lang/String;)Z:False
   * Goal 10. org.apache.commons.codec.binary.Base64.isBase64(B)Z: Line 347
   * Goal 11. org.apache.commons.codec.binary.Base64.isBase64(Ljava/lang/String;)Z: Line 380
   * Goal 12. org.apache.commons.codec.binary.Base64.isBase64([B)Z: Line 361
   * Goal 13. org.apache.commons.codec.binary.Base64.isBase64([B)Z: Line 362
   * Goal 14. org.apache.commons.codec.binary.Base64.isBase64([B)Z: Line 363
   * Goal 15. [METHOD] org.apache.commons.codec.binary.Base64.isBase64(Ljava/lang/String;)Z
   * Goal 16. [METHODNOEX] org.apache.commons.codec.binary.Base64.isBase64(Ljava/lang/String;)Z
   * Goal 17. Weak Mutation 79: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 18. Weak Mutation 80: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 19. Weak Mutation 81: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 20. Weak Mutation 82: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 21. Weak Mutation 83: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 0
   * Goal 22. Weak Mutation 84: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 1
   * Goal 23. Weak Mutation 85: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> -1
   * Goal 24. Weak Mutation 86: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 60
   * Goal 25. Weak Mutation 87: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 62
   * Goal 26. Weak Mutation 89: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator == -> >=
   * Goal 27. Weak Mutation 91: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 28. Weak Mutation 92: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 29. Weak Mutation 93: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 30. Weak Mutation 94: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 31. Weak Mutation 96: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator < -> !=
   * Goal 32. Weak Mutation 98: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 33. Weak Mutation 99: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 34. Weak Mutation 100: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 35. Weak Mutation 101: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 36. Weak Mutation 102: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 37. Weak Mutation 104: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator >= -> >
   * Goal 38. Weak Mutation 118: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 0 -> 1
   * Goal 39. Weak Mutation 119: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceConstant - 0 -> 1
   * Goal 40. Weak Mutation 120: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 41. Weak Mutation 121: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 42. Weak Mutation 122: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> EOF
   * Goal 43. Weak Mutation 123: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> MASK_8BITS
   * Goal 44. Weak Mutation 124: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - InsertUnaryOp Negation of i
   * Goal 45. Weak Mutation 125: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - InsertUnaryOp IINC 1 i
   * Goal 46. Weak Mutation 126: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - InsertUnaryOp IINC -1 i
   * Goal 47. Weak Mutation 127: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable arrayOctet -> CHUNK_SEPARATOR
   * Goal 48. Weak Mutation 128: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceComparisonOperator >= -> -1
   * Goal 49. Weak Mutation 131: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable arrayOctet -> CHUNK_SEPARATOR
   * Goal 50. Weak Mutation 132: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 51. Weak Mutation 133: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 52. Weak Mutation 134: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> EOF
   * Goal 53. Weak Mutation 135: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> MASK_8BITS
   * Goal 54. Weak Mutation 136: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - InsertUnaryOp Negation of i
   * Goal 55. Weak Mutation 137: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - InsertUnaryOp IINC 1 i
   * Goal 56. Weak Mutation 138: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - InsertUnaryOp IINC -1 i
   * Goal 57. Weak Mutation 139: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceComparisonOperator != -> ==
   * Goal 58. Weak Mutation 140: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable arrayOctet -> CHUNK_SEPARATOR
   * Goal 59. Weak Mutation 141: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 60. Weak Mutation 142: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 61. Weak Mutation 143: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> EOF
   * Goal 62. Weak Mutation 144: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> MASK_8BITS
   * Goal 63. Weak Mutation 145: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - InsertUnaryOp Negation of i
   * Goal 64. Weak Mutation 146: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - InsertUnaryOp IINC 1 i
   * Goal 65. Weak Mutation 147: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - InsertUnaryOp IINC -1 i
   * Goal 66. Weak Mutation 148: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceComparisonOperator != -> ==
   * Goal 67. Weak Mutation 149: org.apache.commons.codec.binary.Base64.isBase64([B)Z:363 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      boolean boolean0 = Base64.isBase64("{m");
      assertFalse(boolean0);
  }

  //Test case number: 4
  /*
   * 273 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.<init>(Z)V: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I3 Branch 1 IFNULL L238 - false
   * Goal 4. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I6 Branch 2 IFNE L238 - true
   * Goal 5. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I14 Branch 3 IFEQ L244 - true
   * Goal 6. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I41 Branch 4 IFLE L246 - true
   * Goal 7. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 8. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 9. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 10. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true
   * Goal 11. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - false
   * Goal 12. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true
   * Goal 13. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - false
   * Goal 14. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 34 IFEQ L722 - true
   * Goal 15. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - true
   * Goal 16. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - false
   * Goal 17. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I22 Branch 36 IF_ICMPNE L729 - true
   * Goal 18. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I22 Branch 36 IF_ICMPNE L729 - false
   * Goal 19. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I25 Branch 37 IFNE L729 - true
   * Goal 20. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 38 TABLESWITCH L734 Case 0 - true
   * Goal 21. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 38 TABLESWITCH L734 Case 0 - false
   * Goal 22. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 39 TABLESWITCH L734 Case 1 - false
   * Goal 23. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 40 TABLESWITCH L734 Case 2 - true
   * Goal 24. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 40 TABLESWITCH L734 Case 2 - false
   * Goal 25. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 41 TABLESWITCH L734 Default-Case - false
   * Goal 26. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I188 Branch 43 IF_ACMPNE L754 - true
   * Goal 27. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I246 Branch 44 IFLE L763 - true
   * Goal 28. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I246 Branch 44 IFLE L763 - false
   * Goal 29. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I249 Branch 45 IFLE L763 - false
   * Goal 30. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - true
   * Goal 31. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - false
   * Goal 32. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I311 Branch 47 IFGE L772 - true
   * Goal 33. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I330 Branch 48 IF_ICMPNE L776 - true
   * Goal 34. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I330 Branch 48 IF_ICMPNE L776 - false
   * Goal 35. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I421 Branch 49 IFLE L782 - true
   * Goal 36. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I421 Branch 49 IFLE L782 - false
   * Goal 37. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I426 Branch 50 IF_ICMPGT L782 - true
   * Goal 38. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 39. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 40. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 41. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch in context: org.apache.commons.codec.binary.Base64:<init>(I[BZ)V
   * Goal 42. Branch org.apache.commons.codec.binary.Base64.<init>(Z)V: root-Branch in context: org.apache.commons.codec.binary.Base64:<init>(Z)V
   * Goal 43. Branch org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I3 Branch 1 IFNULL L238 - false in context: org.apache.commons.codec.binary.Base64:encodeBase64([BZZI)[B
   * Goal 44. Branch org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I6 Branch 2 IFNE L238 - true in context: org.apache.commons.codec.binary.Base64:encodeBase64([BZZI)[B
   * Goal 45. Branch org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I14 Branch 3 IFEQ L244 - true in context: org.apache.commons.codec.binary.Base64:encodeBase64([BZZI)[B
   * Goal 46. Branch org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I41 Branch 4 IFLE L246 - true in context: org.apache.commons.codec.binary.Base64:encodeBase64([BZZI)[B
   * Goal 47. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 48. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 49. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 50. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - false in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 51. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 52. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 34 IFEQ L722 - true in context: 
   * Goal 53. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - false in context: 
   * Goal 54. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - true in context: 
   * Goal 55. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I22 Branch 36 IF_ICMPNE L729 - false in context: 
   * Goal 56. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I25 Branch 37 IFNE L729 - true in context: 
   * Goal 57. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 41 TABLESWITCH L734 Default-Case - false in context: 
   * Goal 58. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 40 TABLESWITCH L734 Case 2 - false in context: 
   * Goal 59. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 39 TABLESWITCH L734 Case 1 - false in context: 
   * Goal 60. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 38 TABLESWITCH L734 Case 0 - true in context: 
   * Goal 61. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I188 Branch 43 IF_ACMPNE L754 - true in context: 
   * Goal 62. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I249 Branch 45 IFLE L763 - false in context: 
   * Goal 63. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I246 Branch 44 IFLE L763 - false in context: 
   * Goal 64. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - true in context: 
   * Goal 65. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - false in context: 
   * Goal 66. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I311 Branch 47 IFGE L772 - true in context: 
   * Goal 67. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I330 Branch 48 IF_ICMPNE L776 - false in context: 
   * Goal 68. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I330 Branch 48 IF_ICMPNE L776 - true in context: 
   * Goal 69. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I426 Branch 50 IF_ICMPGT L782 - true in context: 
   * Goal 70. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I421 Branch 49 IFLE L782 - false in context: 
   * Goal 71. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 72. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 73. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 74. [Output]: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:NonEmptyArray
   * Goal 75. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 76. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 77. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 78. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 79. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 80. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 81. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 82. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 597
   * Goal 83. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 598
   * Goal 84. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 599
   * Goal 85. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 601
   * Goal 86. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 602
   * Goal 87. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 88. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 89. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 90. org.apache.commons.codec.binary.Base64.<init>(Z)V: Line 471
   * Goal 91. org.apache.commons.codec.binary.Base64.<init>(Z)V: Line 472
   * Goal 92. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 722
   * Goal 93. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 727
   * Goal 94. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 728
   * Goal 95. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 729
   * Goal 96. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 732
   * Goal 97. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 733
   * Goal 98. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 734
   * Goal 99. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 736
   * Goal 100. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 750
   * Goal 101. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 751
   * Goal 102. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 752
   * Goal 103. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 754
   * Goal 104. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 761
   * Goal 105. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 763
   * Goal 106. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 764
   * Goal 107. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 765
   * Goal 108. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 767
   * Goal 109. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 768
   * Goal 110. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 769
   * Goal 111. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 770
   * Goal 112. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 771
   * Goal 113. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 772
   * Goal 114. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 775
   * Goal 115. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 776
   * Goal 116. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 777
   * Goal 117. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 778
   * Goal 118. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 779
   * Goal 119. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 780
   * Goal 120. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 781
   * Goal 121. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 782
   * Goal 122. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 790
   * Goal 123. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 238
   * Goal 124. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 244
   * Goal 125. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 245
   * Goal 126. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 246
   * Goal 127. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 253
   * Goal 128. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 129. [METHOD] org.apache.commons.codec.binary.Base64.<init>(Z)V
   * Goal 130. [METHOD] org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B
   * Goal 131. [METHODNOEX] org.apache.commons.codec.binary.Base64.<init>(Z)V
   * Goal 132. [METHODNOEX] org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B
   * Goal 133. Weak Mutation 22: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 134. Weak Mutation 23: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator = null -> != null
   * Goal 135. Weak Mutation 24: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 136. Weak Mutation 26: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator != -> <
   * Goal 137. Weak Mutation 29: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - ReplaceVariable isChunked -> urlSafe
   * Goal 138. Weak Mutation 30: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp Negation of isChunked
   * Goal 139. Weak Mutation 31: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC 1 isChunked
   * Goal 140. Weak Mutation 32: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC -1 isChunked
   * Goal 141. Weak Mutation 33: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - ReplaceComparisonOperator == -> !=
   * Goal 142. Weak Mutation 38: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - ReplaceConstant - 0 -> 1
   * Goal 143. Weak Mutation 39: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - ReplaceVariable urlSafe -> isChunked
   * Goal 144. Weak Mutation 40: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp Negation of urlSafe
   * Goal 145. Weak Mutation 41: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC 1 urlSafe
   * Goal 146. Weak Mutation 42: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC -1 urlSafe
   * Goal 147. Weak Mutation 43: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:245 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 148. Weak Mutation 44: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp Negation of len
   * Goal 149. Weak Mutation 45: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> PEM_CHUNK_SIZE
   * Goal 150. Weak Mutation 46: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> MIME_CHUNK_SIZE
   * Goal 151. Weak Mutation 47: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> EOF
   * Goal 152. Weak Mutation 48: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> MASK_8BITS
   * Goal 153. Weak Mutation 49: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp Negation of maxResultSize
   * Goal 154. Weak Mutation 50: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp IINC 1 maxResultSize
   * Goal 155. Weak Mutation 51: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp IINC -1 maxResultSize
   * Goal 156. Weak Mutation 54: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceComparisonOperator <= -> <
   * Goal 157. Weak Mutation 65: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:253 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 158. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 159. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 160. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 161. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 162. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 163. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 164. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 165. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 166. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 167. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 168. Weak Mutation 346: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> -1
   * Goal 169. Weak Mutation 348: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> <
   * Goal 170. Weak Mutation 349: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> 0
   * Goal 171. Weak Mutation 350: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> 1
   * Goal 172. Weak Mutation 351: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> -1
   * Goal 173. Weak Mutation 352: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> 3
   * Goal 174. Weak Mutation 353: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> 5
   * Goal 175. Weak Mutation 355: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceArithmeticOperator + -> %
   * Goal 176. Weak Mutation 356: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceArithmeticOperator + -> -
   * Goal 177. Weak Mutation 357: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceArithmeticOperator + -> *
   * Goal 178. Weak Mutation 358: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceArithmeticOperator + -> /
   * Goal 179. Weak Mutation 361: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:599 - ReplaceConstant - 0 -> 1
   * Goal 180. Weak Mutation 362: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:599 - ReplaceVariable lineSeparator -> CHUNK_SEPARATOR
   * Goal 181. Weak Mutation 363: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:599 - ReplaceConstant - 0 -> 1
   * Goal 182. Weak Mutation 365: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 0
   * Goal 183. Weak Mutation 366: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 1
   * Goal 184. Weak Mutation 367: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> -1
   * Goal 185. Weak Mutation 368: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 3
   * Goal 186. Weak Mutation 369: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 5
   * Goal 187. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 188. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 189. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 190. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 191. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 192. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 193. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 194. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 195. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 196. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 197. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 198. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 199. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 200. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 201. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 202. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 203. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 204. Weak Mutation 392: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable URL_SAFE_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 205. Weak Mutation 393: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 206. Weak Mutation 583: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:722 - InsertUnaryOp Negation
   * Goal 207. Weak Mutation 584: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:722 - ReplaceComparisonOperator == -> !=
   * Goal 208. Weak Mutation 585: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 209. Weak Mutation 586: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 210. Weak Mutation 587: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> inPos
   * Goal 211. Weak Mutation 588: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> lineLength
   * Goal 212. Weak Mutation 589: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> EOF
   * Goal 213. Weak Mutation 590: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 214. Weak Mutation 591: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp Negation of inAvail
   * Goal 215. Weak Mutation 592: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp IINC 1 inAvail
   * Goal 216. Weak Mutation 593: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp IINC -1 inAvail
   * Goal 217. Weak Mutation 594: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceComparisonOperator >= -> -1
   * Goal 218. Weak Mutation 595: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceComparisonOperator >= -> ==
   * Goal 219. Weak Mutation 597: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:728 - ReplaceConstant - 1 -> 0
   * Goal 220. Weak Mutation 598: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceConstant - 0 -> 1
   * Goal 221. Weak Mutation 599: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp Negation
   * Goal 222. Weak Mutation 600: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp +1
   * Goal 223. Weak Mutation 601: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp -1
   * Goal 224. Weak Mutation 602: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceComparisonOperator != -> -1
   * Goal 225. Weak Mutation 604: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceComparisonOperator != -> >
   * Goal 226. Weak Mutation 605: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 227. Weak Mutation 607: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceVariable lineLength -> EOF
   * Goal 228. Weak Mutation 608: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 229. Weak Mutation 609: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp Negation
   * Goal 230. Weak Mutation 610: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp +1
   * Goal 231. Weak Mutation 611: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp -1
   * Goal 232. Weak Mutation 613: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceComparisonOperator != -> <
   * Goal 233. Weak Mutation 615: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 234. Weak Mutation 616: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 235. Weak Mutation 617: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> lineLength
   * Goal 236. Weak Mutation 618: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> EOF
   * Goal 237. Weak Mutation 619: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 238. Weak Mutation 620: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - InsertUnaryOp Negation
   * Goal 239. Weak Mutation 621: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - InsertUnaryOp +1
   * Goal 240. Weak Mutation 622: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - InsertUnaryOp -1
   * Goal 241. Weak Mutation 623: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:733 - InsertUnaryOp Negation
   * Goal 242. Weak Mutation 624: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:733 - InsertUnaryOp +1
   * Goal 243. Weak Mutation 625: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:733 - InsertUnaryOp -1
   * Goal 244. Weak Mutation 626: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:734 - InsertUnaryOp Negation
   * Goal 245. Weak Mutation 627: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:734 - InsertUnaryOp +1
   * Goal 246. Weak Mutation 628: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:734 - InsertUnaryOp -1
   * Goal 247. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 248. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 249. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 250. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 251. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 252. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 253. Weak Mutation 713: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> !=
   * Goal 254. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 255. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 256. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 257. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 258. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 259. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 260. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 261. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 262. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 263. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 264. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 265. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 266. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 267. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 268. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 269. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 270. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 271. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 272. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 273. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Base64 base64_0 = null;
      try {
        base64_0 = new Base64(false);
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // lineSeparator must not contain base64 characters: [\uFFFDg]
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 5
  /*
   * 471 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.<init>(I[B)V: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.decodeBase64([B)[B: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.<init>(I)V: root-Branch
   * Goal 4. org.apache.commons.codec.binary.Base64.<init>()V: root-Branch
   * Goal 5. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 6. org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;: root-Branch
   * Goal 7. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: I26 Branch 12 IFEQ L396 - true
   * Goal 8. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: I56 Branch 14 IFNE L404 - false
   * Goal 9. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 10. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 11. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 12. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true
   * Goal 13. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true
   * Goal 14. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - true
   * Goal 15. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - true
   * Goal 16. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - false
   * Goal 17. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - true
   * Goal 18. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - false
   * Goal 19. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I45 Branch 23 IF_ICMPNE L650 - true
   * Goal 20. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I57 Branch 24 IFLT L655 - false
   * Goal 21. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I61 Branch 25 IF_ICMPGE L655 - false
   * Goal 22. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - true
   * Goal 23. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - false
   * Goal 24. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I96 Branch 27 IFNE L660 - true
   * Goal 25. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - true
   * Goal 26. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - false
   * Goal 27. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I160 Branch 29 IFEQ L672 - false
   * Goal 28. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 30 TABLESWITCH L677 Case 1 - false
   * Goal 29. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 31 TABLESWITCH L677 Case 2 - true
   * Goal 30. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 32 TABLESWITCH L677 Case 3 - false
   * Goal 31. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 33 TABLESWITCH L677 Default-Case - false
   * Goal 32. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 33. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 34. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 35. org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 55 IFEQ L827 - true
   * Goal 36. Branch org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;: root-Branch in context: org.apache.commons.codec.binary.Base64:decodeInteger([B)Ljava/math/BigInteger;
   * Goal 37. Branch org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: I26 Branch 12 IFEQ L396 - true in context: 
   * Goal 38. Branch org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: I56 Branch 14 IFNE L404 - false in context: 
   * Goal 39. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - true in context: 
   * Goal 40. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - true in context: 
   * Goal 41. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - false in context: 
   * Goal 42. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - true in context: 
   * Goal 43. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - false in context: 
   * Goal 44. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I45 Branch 23 IF_ICMPNE L650 - true in context: 
   * Goal 45. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I57 Branch 24 IFLT L655 - false in context: 
   * Goal 46. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I61 Branch 25 IF_ICMPGE L655 - false in context: 
   * Goal 47. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - false in context: 
   * Goal 48. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - true in context: 
   * Goal 49. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I96 Branch 27 IFNE L660 - true in context: 
   * Goal 50. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I160 Branch 29 IFEQ L672 - false in context: 
   * Goal 51. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - true in context: 
   * Goal 52. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - false in context: 
   * Goal 53. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 31 TABLESWITCH L677 Case 2 - true in context: 
   * Goal 54. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 32 TABLESWITCH L677 Case 3 - false in context: 
   * Goal 55. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 30 TABLESWITCH L677 Case 1 - false in context: 
   * Goal 56. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 33 TABLESWITCH L677 Default-Case - false in context: 
   * Goal 57. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 58. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 59. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 60. Branch org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 55 IFEQ L827 - true in context: 
   * Goal 61. [Output]: org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;:NonNull:java.math.BigInteger:byteValue()B:Negative
   * Goal 62. [Output]: org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;:NonNull:java.math.BigInteger:shortValue()S:Positive
   * Goal 63. [Output]: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:NonEmptyArray
   * Goal 64. org.apache.commons.codec.binary.Base64.<init>()V: Line 452
   * Goal 65. org.apache.commons.codec.binary.Base64.<init>()V: Line 453
   * Goal 66. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 494
   * Goal 67. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 495
   * Goal 68. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 521
   * Goal 69. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 522
   * Goal 70. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 71. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 72. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 73. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 74. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 75. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 76. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 77. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 601
   * Goal 78. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 602
   * Goal 79. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 80. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 81. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 82. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 641
   * Goal 83. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 644
   * Goal 84. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 645
   * Goal 85. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 647
   * Goal 86. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 648
   * Goal 87. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 649
   * Goal 88. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 650
   * Goal 89. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 655
   * Goal 90. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 656
   * Goal 91. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 657
   * Goal 92. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 658
   * Goal 93. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 659
   * Goal 94. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 660
   * Goal 95. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 672
   * Goal 96. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 673
   * Goal 97. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 677
   * Goal 98. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 683
   * Goal 99. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 684
   * Goal 100. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 685
   * Goal 101. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 686
   * Goal 102. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 697
   * Goal 103. org.apache.commons.codec.binary.Base64.decodeBase64([B)[B: Line 143
   * Goal 104. org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;: Line 171
   * Goal 105. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 106. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 391
   * Goal 107. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 393
   * Goal 108. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 394
   * Goal 109. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 396
   * Goal 110. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 400
   * Goal 111. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 401
   * Goal 112. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 404
   * Goal 113. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 405
   * Goal 114. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 406
   * Goal 115. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 408
   * Goal 116. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 409
   * Goal 117. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 410
   * Goal 118. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 411
   * Goal 119. org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 827
   * Goal 120. org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 832
   * Goal 121. [METHOD] org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;
   * Goal 122. [METHOD] org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B
   * Goal 123. [METHODNOEX] org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;
   * Goal 124. [METHODNOEX] org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B
   * Goal 125. Weak Mutation 0: org.apache.commons.codec.binary.Base64.decodeBase64([B)[B:143 - ReplaceVariable base64Data -> CHUNK_SEPARATOR
   * Goal 126. Weak Mutation 1: org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;:171 - ReplaceConstant - 1 -> 0
   * Goal 127. Weak Mutation 2: org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;:171 - ReplaceVariable pArray -> CHUNK_SEPARATOR
   * Goal 128. Weak Mutation 151: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceVariable bitlen -> PEM_CHUNK_SIZE
   * Goal 129. Weak Mutation 152: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceVariable bitlen -> MIME_CHUNK_SIZE
   * Goal 130. Weak Mutation 153: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceVariable bitlen -> EOF
   * Goal 131. Weak Mutation 154: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceVariable bitlen -> MASK_8BITS
   * Goal 132. Weak Mutation 155: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - InsertUnaryOp Negation of bitlen
   * Goal 133. Weak Mutation 156: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - InsertUnaryOp IINC 1 bitlen
   * Goal 134. Weak Mutation 157: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - InsertUnaryOp IINC -1 bitlen
   * Goal 135. Weak Mutation 158: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 7 -> 0
   * Goal 136. Weak Mutation 159: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 7 -> 1
   * Goal 137. Weak Mutation 160: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 7 -> -1
   * Goal 138. Weak Mutation 161: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 7 -> 6
   * Goal 139. Weak Mutation 162: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 7 -> 8
   * Goal 140. Weak Mutation 163: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceArithmeticOperator + -> %
   * Goal 141. Weak Mutation 164: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceArithmeticOperator + -> -
   * Goal 142. Weak Mutation 165: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceArithmeticOperator + -> *
   * Goal 143. Weak Mutation 166: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceArithmeticOperator + -> /
   * Goal 144. Weak Mutation 167: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 0
   * Goal 145. Weak Mutation 168: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 1
   * Goal 146. Weak Mutation 169: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> -1
   * Goal 147. Weak Mutation 170: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 2
   * Goal 148. Weak Mutation 171: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 4
   * Goal 149. Weak Mutation 172: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceBitwiseOperator >> I -> << I
   * Goal 150. Weak Mutation 174: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 0
   * Goal 151. Weak Mutation 175: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 1
   * Goal 152. Weak Mutation 176: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> -1
   * Goal 153. Weak Mutation 177: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 2
   * Goal 154. Weak Mutation 178: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 4
   * Goal 155. Weak Mutation 179: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceBitwiseOperator << I -> >> I
   * Goal 156. Weak Mutation 180: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceBitwiseOperator << I -> >>> I
   * Goal 157. Weak Mutation 181: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 0
   * Goal 158. Weak Mutation 182: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 1
   * Goal 159. Weak Mutation 183: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> -1
   * Goal 160. Weak Mutation 184: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 7
   * Goal 161. Weak Mutation 185: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 9
   * Goal 162. Weak Mutation 186: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator % -> +
   * Goal 163. Weak Mutation 188: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator % -> *
   * Goal 164. Weak Mutation 189: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator % -> /
   * Goal 165. Weak Mutation 190: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceComparisonOperator == -> -2
   * Goal 166. Weak Mutation 227: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:400 - ReplaceConstant - 0 -> 1
   * Goal 167. Weak Mutation 228: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:401 - ReplaceVariable bigBytes -> CHUNK_SEPARATOR
   * Goal 168. Weak Mutation 229: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceConstant - 8 -> 0
   * Goal 169. Weak Mutation 230: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceConstant - 8 -> 1
   * Goal 170. Weak Mutation 231: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceConstant - 8 -> -1
   * Goal 171. Weak Mutation 232: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceConstant - 8 -> 7
   * Goal 172. Weak Mutation 233: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceConstant - 8 -> 9
   * Goal 173. Weak Mutation 234: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceArithmeticOperator % -> +
   * Goal 174. Weak Mutation 236: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceArithmeticOperator % -> *
   * Goal 175. Weak Mutation 237: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceArithmeticOperator % -> /
   * Goal 176. Weak Mutation 238: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceComparisonOperator != -> -1
   * Goal 177. Weak Mutation 241: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:405 - ReplaceConstant - 1 -> 0
   * Goal 178. Weak Mutation 242: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:406 - ReplaceVariable len -> bitlen
   * Goal 179. Weak Mutation 243: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:406 - ReplaceVariable len -> startSrc
   * Goal 180. Weak Mutation 244: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable bitlen -> PEM_CHUNK_SIZE
   * Goal 181. Weak Mutation 245: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable bitlen -> MIME_CHUNK_SIZE
   * Goal 182. Weak Mutation 246: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable bitlen -> len
   * Goal 183. Weak Mutation 247: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable bitlen -> EOF
   * Goal 184. Weak Mutation 248: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable bitlen -> startSrc
   * Goal 185. Weak Mutation 249: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable bitlen -> MASK_8BITS
   * Goal 186. Weak Mutation 250: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - InsertUnaryOp Negation of bitlen
   * Goal 187. Weak Mutation 251: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - InsertUnaryOp IINC 1 bitlen
   * Goal 188. Weak Mutation 252: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - InsertUnaryOp IINC -1 bitlen
   * Goal 189. Weak Mutation 253: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceConstant - 8 -> 0
   * Goal 190. Weak Mutation 254: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceConstant - 8 -> 1
   * Goal 191. Weak Mutation 255: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceConstant - 8 -> -1
   * Goal 192. Weak Mutation 256: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceConstant - 8 -> 7
   * Goal 193. Weak Mutation 257: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceConstant - 8 -> 9
   * Goal 194. Weak Mutation 258: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceArithmeticOperator / -> +
   * Goal 195. Weak Mutation 259: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceArithmeticOperator / -> %
   * Goal 196. Weak Mutation 260: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceArithmeticOperator / -> -
   * Goal 197. Weak Mutation 261: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceArithmeticOperator / -> *
   * Goal 198. Weak Mutation 262: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable len -> bitlen
   * Goal 199. Weak Mutation 263: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable len -> PEM_CHUNK_SIZE
   * Goal 200. Weak Mutation 264: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable len -> MIME_CHUNK_SIZE
   * Goal 201. Weak Mutation 265: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable len -> EOF
   * Goal 202. Weak Mutation 267: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable len -> MASK_8BITS
   * Goal 203. Weak Mutation 268: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - InsertUnaryOp Negation of len
   * Goal 204. Weak Mutation 269: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - InsertUnaryOp IINC 1 len
   * Goal 205. Weak Mutation 270: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - InsertUnaryOp IINC -1 len
   * Goal 206. Weak Mutation 271: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceArithmeticOperator - -> +
   * Goal 207. Weak Mutation 273: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceArithmeticOperator - -> *
   * Goal 208. Weak Mutation 274: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceArithmeticOperator - -> /
   * Goal 209. Weak Mutation 275: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceVariable bitlen -> PEM_CHUNK_SIZE
   * Goal 210. Weak Mutation 276: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceVariable bitlen -> len
   * Goal 211. Weak Mutation 277: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceVariable bitlen -> MASK_8BITS
   * Goal 212. Weak Mutation 278: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceVariable bitlen -> MIME_CHUNK_SIZE
   * Goal 213. Weak Mutation 279: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceVariable bitlen -> EOF
   * Goal 214. Weak Mutation 280: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceVariable bitlen -> startSrc
   * Goal 215. Weak Mutation 281: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceVariable bitlen -> startDst
   * Goal 216. Weak Mutation 282: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - InsertUnaryOp Negation of bitlen
   * Goal 217. Weak Mutation 283: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - InsertUnaryOp IINC 1 bitlen
   * Goal 218. Weak Mutation 284: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - InsertUnaryOp IINC -1 bitlen
   * Goal 219. Weak Mutation 285: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceConstant - 8 -> 0
   * Goal 220. Weak Mutation 286: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceConstant - 8 -> 1
   * Goal 221. Weak Mutation 287: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceConstant - 8 -> -1
   * Goal 222. Weak Mutation 288: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceConstant - 8 -> 7
   * Goal 223. Weak Mutation 289: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceConstant - 8 -> 9
   * Goal 224. Weak Mutation 290: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceArithmeticOperator / -> +
   * Goal 225. Weak Mutation 291: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceArithmeticOperator / -> %
   * Goal 226. Weak Mutation 292: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceArithmeticOperator / -> -
   * Goal 227. Weak Mutation 293: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceArithmeticOperator / -> *
   * Goal 228. Weak Mutation 294: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable bigBytes -> resizedBytes
   * Goal 229. Weak Mutation 295: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable bigBytes -> CHUNK_SEPARATOR
   * Goal 230. Weak Mutation 296: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startSrc -> bitlen
   * Goal 231. Weak Mutation 297: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startSrc -> PEM_CHUNK_SIZE
   * Goal 232. Weak Mutation 299: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startSrc -> MASK_8BITS
   * Goal 233. Weak Mutation 300: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startSrc -> MIME_CHUNK_SIZE
   * Goal 234. Weak Mutation 301: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startSrc -> EOF
   * Goal 235. Weak Mutation 302: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startSrc -> startDst
   * Goal 236. Weak Mutation 303: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - InsertUnaryOp Negation of startSrc
   * Goal 237. Weak Mutation 304: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - InsertUnaryOp IINC 1 startSrc
   * Goal 238. Weak Mutation 305: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - InsertUnaryOp IINC -1 startSrc
   * Goal 239. Weak Mutation 306: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable resizedBytes -> bigBytes
   * Goal 240. Weak Mutation 307: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable resizedBytes -> CHUNK_SEPARATOR
   * Goal 241. Weak Mutation 308: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startDst -> bitlen
   * Goal 242. Weak Mutation 309: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startDst -> PEM_CHUNK_SIZE
   * Goal 243. Weak Mutation 310: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startDst -> len
   * Goal 244. Weak Mutation 311: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startDst -> MASK_8BITS
   * Goal 245. Weak Mutation 312: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startDst -> MIME_CHUNK_SIZE
   * Goal 246. Weak Mutation 313: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startDst -> EOF
   * Goal 247. Weak Mutation 314: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startDst -> startSrc
   * Goal 248. Weak Mutation 315: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - InsertUnaryOp Negation of startDst
   * Goal 249. Weak Mutation 316: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - InsertUnaryOp IINC 1 startDst
   * Goal 250. Weak Mutation 317: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - InsertUnaryOp IINC -1 startDst
   * Goal 251. Weak Mutation 318: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable len -> bitlen
   * Goal 252. Weak Mutation 319: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable len -> PEM_CHUNK_SIZE
   * Goal 253. Weak Mutation 320: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable len -> MASK_8BITS
   * Goal 254. Weak Mutation 321: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable len -> MIME_CHUNK_SIZE
   * Goal 255. Weak Mutation 322: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable len -> EOF
   * Goal 256. Weak Mutation 324: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable len -> startDst
   * Goal 257. Weak Mutation 325: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - InsertUnaryOp Negation of len
   * Goal 258. Weak Mutation 326: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - InsertUnaryOp IINC 1 len
   * Goal 259. Weak Mutation 327: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - InsertUnaryOp IINC -1 len
   * Goal 260. Weak Mutation 328: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:411 - ReplaceVariable resizedBytes -> bigBytes
   * Goal 261. Weak Mutation 329: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:411 - ReplaceVariable resizedBytes -> CHUNK_SEPARATOR
   * Goal 262. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 263. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 264. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 265. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 266. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 267. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 268. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 269. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 270. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 271. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 272. Weak Mutation 348: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> <
   * Goal 273. Weak Mutation 365: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 0
   * Goal 274. Weak Mutation 366: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 1
   * Goal 275. Weak Mutation 367: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> -1
   * Goal 276. Weak Mutation 368: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 3
   * Goal 277. Weak Mutation 369: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 5
   * Goal 278. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 279. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 280. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 281. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 282. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 283. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 284. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 285. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 286. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 287. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 288. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 289. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 290. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 291. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 292. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 293. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 294. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 295. Weak Mutation 393: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 296. Weak Mutation 394: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:641 - InsertUnaryOp Negation
   * Goal 297. Weak Mutation 395: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:641 - ReplaceComparisonOperator == -> !=
   * Goal 298. Weak Mutation 396: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 299. Weak Mutation 397: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 300. Weak Mutation 398: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> inPos
   * Goal 301. Weak Mutation 399: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> lineLength
   * Goal 302. Weak Mutation 400: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> EOF
   * Goal 303. Weak Mutation 401: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 304. Weak Mutation 402: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp Negation of inAvail
   * Goal 305. Weak Mutation 403: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp IINC 1 inAvail
   * Goal 306. Weak Mutation 404: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp IINC -1 inAvail
   * Goal 307. Weak Mutation 405: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceComparisonOperator >= -> -1
   * Goal 308. Weak Mutation 406: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceComparisonOperator >= -> ==
   * Goal 309. Weak Mutation 408: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:645 - ReplaceConstant - 1 -> 0
   * Goal 310. Weak Mutation 409: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceConstant - 0 -> 1
   * Goal 311. Weak Mutation 410: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 312. Weak Mutation 411: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> inAvail
   * Goal 313. Weak Mutation 413: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> MASK_8BITS
   * Goal 314. Weak Mutation 414: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 315. Weak Mutation 415: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> lineLength
   * Goal 316. Weak Mutation 416: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> EOF
   * Goal 317. Weak Mutation 417: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp Negation of i
   * Goal 318. Weak Mutation 418: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC 1 i
   * Goal 319. Weak Mutation 419: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC -1 i
   * Goal 320. Weak Mutation 420: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 321. Weak Mutation 421: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> inPos
   * Goal 322. Weak Mutation 422: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 323. Weak Mutation 423: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> i
   * Goal 324. Weak Mutation 424: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 325. Weak Mutation 425: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> lineLength
   * Goal 326. Weak Mutation 426: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> EOF
   * Goal 327. Weak Mutation 427: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp Negation of inAvail
   * Goal 328. Weak Mutation 428: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC 1 inAvail
   * Goal 329. Weak Mutation 429: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC -1 inAvail
   * Goal 330. Weak Mutation 430: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> -1
   * Goal 331. Weak Mutation 431: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> >
   * Goal 332. Weak Mutation 432: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> ==
   * Goal 333. Weak Mutation 433: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> PEM_CHUNK_SIZE
   * Goal 334. Weak Mutation 434: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> MIME_CHUNK_SIZE
   * Goal 335. Weak Mutation 435: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> lineLength
   * Goal 336. Weak Mutation 436: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> EOF
   * Goal 337. Weak Mutation 437: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> MASK_8BITS
   * Goal 338. Weak Mutation 438: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp Negation
   * Goal 339. Weak Mutation 439: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp +1
   * Goal 340. Weak Mutation 440: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp -1
   * Goal 341. Weak Mutation 441: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable in -> CHUNK_SEPARATOR
   * Goal 342. Weak Mutation 442: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable in -> buffer
   * Goal 343. Weak Mutation 443: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> PEM_CHUNK_SIZE
   * Goal 344. Weak Mutation 444: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> inAvail
   * Goal 345. Weak Mutation 445: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> MASK_8BITS
   * Goal 346. Weak Mutation 447: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> MIME_CHUNK_SIZE
   * Goal 347. Weak Mutation 448: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> lineLength
   * Goal 348. Weak Mutation 449: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> EOF
   * Goal 349. Weak Mutation 450: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp Negation of inPos
   * Goal 350. Weak Mutation 451: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp IINC 1 inPos
   * Goal 351. Weak Mutation 452: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp IINC -1 inPos
   * Goal 352. Weak Mutation 453: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> inAvail
   * Goal 353. Weak Mutation 454: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> i
   * Goal 354. Weak Mutation 455: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> PAD
   * Goal 355. Weak Mutation 456: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> pad
   * Goal 356. Weak Mutation 457: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 357. Weak Mutation 458: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp Negation of b
   * Goal 358. Weak Mutation 459: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp IINC 1 b
   * Goal 359. Weak Mutation 460: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp IINC -1 b
   * Goal 360. Weak Mutation 463: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp Negation
   * Goal 361. Weak Mutation 466: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceComparisonOperator != -> >
   * Goal 362. Weak Mutation 468: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD
   * Goal 363. Weak Mutation 469: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> pad
   * Goal 364. Weak Mutation 470: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 365. Weak Mutation 471: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp Negation of b
   * Goal 366. Weak Mutation 472: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC 1 b
   * Goal 367. Weak Mutation 473: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC -1 b
   * Goal 368. Weak Mutation 475: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceComparisonOperator < -> !=
   * Goal 369. Weak Mutation 476: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceComparisonOperator < -> <=
   * Goal 370. Weak Mutation 477: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD
   * Goal 371. Weak Mutation 478: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> pad
   * Goal 372. Weak Mutation 479: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 373. Weak Mutation 480: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp Negation of b
   * Goal 374. Weak Mutation 481: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC 1 b
   * Goal 375. Weak Mutation 482: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC -1 b
   * Goal 376. Weak Mutation 483: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 377. Weak Mutation 484: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceComparisonOperator >= -> -1
   * Goal 378. Weak Mutation 487: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 379. Weak Mutation 488: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> PAD
   * Goal 380. Weak Mutation 489: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> pad
   * Goal 381. Weak Mutation 490: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 382. Weak Mutation 491: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp Negation of b
   * Goal 383. Weak Mutation 492: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp IINC 1 b
   * Goal 384. Weak Mutation 493: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp IINC -1 b
   * Goal 385. Weak Mutation 494: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> PEM_CHUNK_SIZE
   * Goal 386. Weak Mutation 495: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> inAvail
   * Goal 387. Weak Mutation 496: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> inPos
   * Goal 388. Weak Mutation 497: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> MASK_8BITS
   * Goal 389. Weak Mutation 498: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> i
   * Goal 390. Weak Mutation 499: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> MIME_CHUNK_SIZE
   * Goal 391. Weak Mutation 500: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> lineLength
   * Goal 392. Weak Mutation 501: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> EOF
   * Goal 393. Weak Mutation 502: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp Negation of result
   * Goal 394. Weak Mutation 503: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp IINC 1 result
   * Goal 395. Weak Mutation 504: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp IINC -1 result
   * Goal 396. Weak Mutation 505: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceComparisonOperator < -> -2
   * Goal 397. Weak Mutation 506: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceComparisonOperator < -> !=
   * Goal 398. Weak Mutation 508: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - InsertUnaryOp Negation
   * Goal 399. Weak Mutation 509: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - InsertUnaryOp +1
   * Goal 400. Weak Mutation 510: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - InsertUnaryOp -1
   * Goal 401. Weak Mutation 511: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 1 -> 0
   * Goal 402. Weak Mutation 512: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> %
   * Goal 403. Weak Mutation 513: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> -
   * Goal 404. Weak Mutation 514: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> *
   * Goal 405. Weak Mutation 515: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> /
   * Goal 406. Weak Mutation 516: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 0
   * Goal 407. Weak Mutation 517: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 1
   * Goal 408. Weak Mutation 518: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> -1
   * Goal 409. Weak Mutation 519: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 3
   * Goal 410. Weak Mutation 520: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 5
   * Goal 411. Weak Mutation 521: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> +
   * Goal 412. Weak Mutation 522: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> -
   * Goal 413. Weak Mutation 523: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> *
   * Goal 414. Weak Mutation 524: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> /
   * Goal 415. Weak Mutation 525: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp Negation
   * Goal 416. Weak Mutation 526: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp +1
   * Goal 417. Weak Mutation 527: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp -1
   * Goal 418. Weak Mutation 528: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 0
   * Goal 419. Weak Mutation 529: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 1
   * Goal 420. Weak Mutation 530: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> -1
   * Goal 421. Weak Mutation 531: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 5
   * Goal 422. Weak Mutation 532: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 7
   * Goal 423. Weak Mutation 533: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceBitwiseOperator << I -> >> I
   * Goal 424. Weak Mutation 534: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceBitwiseOperator << I -> >>> I
   * Goal 425. Weak Mutation 535: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> PEM_CHUNK_SIZE
   * Goal 426. Weak Mutation 536: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> inAvail
   * Goal 427. Weak Mutation 537: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> inPos
   * Goal 428. Weak Mutation 538: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> MASK_8BITS
   * Goal 429. Weak Mutation 539: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> i
   * Goal 430. Weak Mutation 540: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> MIME_CHUNK_SIZE
   * Goal 431. Weak Mutation 541: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> lineLength
   * Goal 432. Weak Mutation 542: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> EOF
   * Goal 433. Weak Mutation 543: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp Negation of result
   * Goal 434. Weak Mutation 544: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp IINC 1 result
   * Goal 435. Weak Mutation 545: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp IINC -1 result
   * Goal 436. Weak Mutation 546: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> %
   * Goal 437. Weak Mutation 547: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> -
   * Goal 438. Weak Mutation 548: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> *
   * Goal 439. Weak Mutation 549: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> /
   * Goal 440. Weak Mutation 550: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - InsertUnaryOp Negation
   * Goal 441. Weak Mutation 551: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - InsertUnaryOp +1
   * Goal 442. Weak Mutation 552: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - InsertUnaryOp -1
   * Goal 443. Weak Mutation 554: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - ReplaceComparisonOperator != -> <
   * Goal 444. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 445. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 446. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 447. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 448. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 449. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 450. Weak Mutation 713: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> !=
   * Goal 451. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 452. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 453. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 454. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 455. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 456. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 457. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 458. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 459. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 460. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 461. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 462. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 463. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 464. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 465. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 466. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 467. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 468. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 469. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 470. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   * Goal 471. Weak Mutation 745: org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:827 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte)47;
      // Undeclared exception!
      try { 
        Base64.decodeInteger(byteArray0);
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // lineSeparator must not contain base64 characters: [\uFFFDg]
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 6
  /*
   * 140 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: I26 Branch 12 IFEQ L396 - true
   * Goal 2. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: I56 Branch 14 IFNE L404 - false
   * Goal 3. Branch org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: I26 Branch 12 IFEQ L396 - true in context: 
   * Goal 4. Branch org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: I56 Branch 14 IFNE L404 - false in context: 
   * Goal 5. [Output]: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:EmptyArray
   * Goal 6. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 391
   * Goal 7. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 393
   * Goal 8. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 394
   * Goal 9. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 396
   * Goal 10. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 400
   * Goal 11. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 401
   * Goal 12. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 404
   * Goal 13. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 405
   * Goal 14. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 406
   * Goal 15. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 408
   * Goal 16. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 409
   * Goal 17. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 410
   * Goal 18. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 411
   * Goal 19. [METHOD] org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B
   * Goal 20. [METHODNOEX] org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B
   * Goal 21. Weak Mutation 151: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceVariable bitlen -> PEM_CHUNK_SIZE
   * Goal 22. Weak Mutation 152: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceVariable bitlen -> MIME_CHUNK_SIZE
   * Goal 23. Weak Mutation 153: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceVariable bitlen -> EOF
   * Goal 24. Weak Mutation 154: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceVariable bitlen -> MASK_8BITS
   * Goal 25. Weak Mutation 155: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - InsertUnaryOp Negation of bitlen
   * Goal 26. Weak Mutation 156: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - InsertUnaryOp IINC 1 bitlen
   * Goal 27. Weak Mutation 157: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - InsertUnaryOp IINC -1 bitlen
   * Goal 28. Weak Mutation 158: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 7 -> 0
   * Goal 29. Weak Mutation 159: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 7 -> 1
   * Goal 30. Weak Mutation 160: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 7 -> -1
   * Goal 31. Weak Mutation 161: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 7 -> 6
   * Goal 32. Weak Mutation 162: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 7 -> 8
   * Goal 33. Weak Mutation 163: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceArithmeticOperator + -> %
   * Goal 34. Weak Mutation 164: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceArithmeticOperator + -> -
   * Goal 35. Weak Mutation 165: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceArithmeticOperator + -> *
   * Goal 36. Weak Mutation 166: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceArithmeticOperator + -> /
   * Goal 37. Weak Mutation 167: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 0
   * Goal 38. Weak Mutation 168: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 1
   * Goal 39. Weak Mutation 169: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> -1
   * Goal 40. Weak Mutation 170: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 2
   * Goal 41. Weak Mutation 171: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 4
   * Goal 42. Weak Mutation 172: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceBitwiseOperator >> I -> << I
   * Goal 43. Weak Mutation 174: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 0
   * Goal 44. Weak Mutation 175: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 1
   * Goal 45. Weak Mutation 176: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> -1
   * Goal 46. Weak Mutation 177: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 2
   * Goal 47. Weak Mutation 178: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 4
   * Goal 48. Weak Mutation 181: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 0
   * Goal 49. Weak Mutation 182: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 1
   * Goal 50. Weak Mutation 183: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> -1
   * Goal 51. Weak Mutation 184: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 7
   * Goal 52. Weak Mutation 185: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 9
   * Goal 53. Weak Mutation 186: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator % -> +
   * Goal 54. Weak Mutation 187: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator % -> -
   * Goal 55. Weak Mutation 190: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceComparisonOperator == -> -2
   * Goal 56. Weak Mutation 227: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:400 - ReplaceConstant - 0 -> 1
   * Goal 57. Weak Mutation 228: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:401 - ReplaceVariable bigBytes -> CHUNK_SEPARATOR
   * Goal 58. Weak Mutation 229: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceConstant - 8 -> 0
   * Goal 59. Weak Mutation 230: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceConstant - 8 -> 1
   * Goal 60. Weak Mutation 231: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceConstant - 8 -> -1
   * Goal 61. Weak Mutation 232: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceConstant - 8 -> 7
   * Goal 62. Weak Mutation 233: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceConstant - 8 -> 9
   * Goal 63. Weak Mutation 234: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceArithmeticOperator % -> +
   * Goal 64. Weak Mutation 235: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceArithmeticOperator % -> -
   * Goal 65. Weak Mutation 238: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceComparisonOperator != -> -1
   * Goal 66. Weak Mutation 241: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:405 - ReplaceConstant - 1 -> 0
   * Goal 67. Weak Mutation 242: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:406 - ReplaceVariable len -> bitlen
   * Goal 68. Weak Mutation 243: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:406 - ReplaceVariable len -> startSrc
   * Goal 69. Weak Mutation 244: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable bitlen -> PEM_CHUNK_SIZE
   * Goal 70. Weak Mutation 245: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable bitlen -> MIME_CHUNK_SIZE
   * Goal 71. Weak Mutation 247: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable bitlen -> EOF
   * Goal 72. Weak Mutation 248: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable bitlen -> startSrc
   * Goal 73. Weak Mutation 249: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable bitlen -> MASK_8BITS
   * Goal 74. Weak Mutation 250: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - InsertUnaryOp Negation of bitlen
   * Goal 75. Weak Mutation 251: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - InsertUnaryOp IINC 1 bitlen
   * Goal 76. Weak Mutation 252: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - InsertUnaryOp IINC -1 bitlen
   * Goal 77. Weak Mutation 253: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceConstant - 8 -> 0
   * Goal 78. Weak Mutation 254: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceConstant - 8 -> 1
   * Goal 79. Weak Mutation 255: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceConstant - 8 -> -1
   * Goal 80. Weak Mutation 256: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceConstant - 8 -> 7
   * Goal 81. Weak Mutation 257: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceConstant - 8 -> 9
   * Goal 82. Weak Mutation 258: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceArithmeticOperator / -> +
   * Goal 83. Weak Mutation 260: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceArithmeticOperator / -> -
   * Goal 84. Weak Mutation 263: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable len -> PEM_CHUNK_SIZE
   * Goal 85. Weak Mutation 264: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable len -> MIME_CHUNK_SIZE
   * Goal 86. Weak Mutation 265: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable len -> EOF
   * Goal 87. Weak Mutation 266: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable len -> startSrc
   * Goal 88. Weak Mutation 267: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable len -> MASK_8BITS
   * Goal 89. Weak Mutation 268: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - InsertUnaryOp Negation of len
   * Goal 90. Weak Mutation 269: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - InsertUnaryOp IINC 1 len
   * Goal 91. Weak Mutation 270: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - InsertUnaryOp IINC -1 len
   * Goal 92. Weak Mutation 272: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceArithmeticOperator - -> %
   * Goal 93. Weak Mutation 274: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceArithmeticOperator - -> /
   * Goal 94. Weak Mutation 275: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceVariable bitlen -> PEM_CHUNK_SIZE
   * Goal 95. Weak Mutation 277: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceVariable bitlen -> MASK_8BITS
   * Goal 96. Weak Mutation 278: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceVariable bitlen -> MIME_CHUNK_SIZE
   * Goal 97. Weak Mutation 279: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceVariable bitlen -> EOF
   * Goal 98. Weak Mutation 280: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceVariable bitlen -> startSrc
   * Goal 99. Weak Mutation 282: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - InsertUnaryOp Negation of bitlen
   * Goal 100. Weak Mutation 283: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - InsertUnaryOp IINC 1 bitlen
   * Goal 101. Weak Mutation 284: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - InsertUnaryOp IINC -1 bitlen
   * Goal 102. Weak Mutation 285: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceConstant - 8 -> 0
   * Goal 103. Weak Mutation 286: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceConstant - 8 -> 1
   * Goal 104. Weak Mutation 287: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceConstant - 8 -> -1
   * Goal 105. Weak Mutation 288: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceConstant - 8 -> 7
   * Goal 106. Weak Mutation 289: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceConstant - 8 -> 9
   * Goal 107. Weak Mutation 290: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceArithmeticOperator / -> +
   * Goal 108. Weak Mutation 292: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceArithmeticOperator / -> -
   * Goal 109. Weak Mutation 294: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable bigBytes -> resizedBytes
   * Goal 110. Weak Mutation 295: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable bigBytes -> CHUNK_SEPARATOR
   * Goal 111. Weak Mutation 296: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startSrc -> bitlen
   * Goal 112. Weak Mutation 297: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startSrc -> PEM_CHUNK_SIZE
   * Goal 113. Weak Mutation 298: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startSrc -> len
   * Goal 114. Weak Mutation 299: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startSrc -> MASK_8BITS
   * Goal 115. Weak Mutation 300: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startSrc -> MIME_CHUNK_SIZE
   * Goal 116. Weak Mutation 301: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startSrc -> EOF
   * Goal 117. Weak Mutation 302: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startSrc -> startDst
   * Goal 118. Weak Mutation 303: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - InsertUnaryOp Negation of startSrc
   * Goal 119. Weak Mutation 304: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - InsertUnaryOp IINC 1 startSrc
   * Goal 120. Weak Mutation 305: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - InsertUnaryOp IINC -1 startSrc
   * Goal 121. Weak Mutation 306: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable resizedBytes -> bigBytes
   * Goal 122. Weak Mutation 307: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable resizedBytes -> CHUNK_SEPARATOR
   * Goal 123. Weak Mutation 309: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startDst -> PEM_CHUNK_SIZE
   * Goal 124. Weak Mutation 311: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startDst -> MASK_8BITS
   * Goal 125. Weak Mutation 312: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startDst -> MIME_CHUNK_SIZE
   * Goal 126. Weak Mutation 313: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startDst -> EOF
   * Goal 127. Weak Mutation 314: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startDst -> startSrc
   * Goal 128. Weak Mutation 315: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - InsertUnaryOp Negation of startDst
   * Goal 129. Weak Mutation 316: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - InsertUnaryOp IINC 1 startDst
   * Goal 130. Weak Mutation 317: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - InsertUnaryOp IINC -1 startDst
   * Goal 131. Weak Mutation 319: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable len -> PEM_CHUNK_SIZE
   * Goal 132. Weak Mutation 320: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable len -> MASK_8BITS
   * Goal 133. Weak Mutation 321: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable len -> MIME_CHUNK_SIZE
   * Goal 134. Weak Mutation 322: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable len -> EOF
   * Goal 135. Weak Mutation 323: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable len -> startSrc
   * Goal 136. Weak Mutation 325: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - InsertUnaryOp Negation of len
   * Goal 137. Weak Mutation 326: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - InsertUnaryOp IINC 1 len
   * Goal 138. Weak Mutation 327: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - InsertUnaryOp IINC -1 len
   * Goal 139. Weak Mutation 328: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:411 - ReplaceVariable resizedBytes -> bigBytes
   * Goal 140. Weak Mutation 329: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:411 - ReplaceVariable resizedBytes -> CHUNK_SEPARATOR
   */

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      byte[] byteArray0 = Base64.toIntegerBytes(bigInteger0);
      assertEquals(0, byteArray0.length);
  }

  //Test case number: 7
  /*
   * 86 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.isBase64(Ljava/lang/String;)Z: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I4 Branch 5 IF_ICMPEQ L347 - true
   * Goal 3. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I4 Branch 5 IF_ICMPEQ L347 - false
   * Goal 4. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I6 Branch 6 IFLT L347 - false
   * Goal 5. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I10 Branch 7 IF_ICMPGE L347 - false
   * Goal 6. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I15 Branch 8 IF_ICMPEQ L347 - true
   * Goal 7. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I15 Branch 8 IF_ICMPEQ L347 - false
   * Goal 8. org.apache.commons.codec.binary.Base64.isBase64([B)Z: I8 Branch 9 IF_ICMPGE L361 - true
   * Goal 9. org.apache.commons.codec.binary.Base64.isBase64([B)Z: I8 Branch 9 IF_ICMPGE L361 - false
   * Goal 10. org.apache.commons.codec.binary.Base64.isBase64([B)Z: I15 Branch 10 IFNE L362 - true
   * Goal 11. org.apache.commons.codec.binary.Base64.isBase64([B)Z: I15 Branch 10 IFNE L362 - false
   * Goal 12. org.apache.commons.codec.binary.Base64.isBase64([B)Z: I20 Branch 11 IFNE L362 - true
   * Goal 13. Branch org.apache.commons.codec.binary.Base64.isBase64(Ljava/lang/String;)Z: root-Branch in context: org.apache.commons.codec.binary.Base64:isBase64(Ljava/lang/String;)Z
   * Goal 14. [Output]: org.apache.commons.codec.binary.Base64.isBase64(Ljava/lang/String;)Z:True
   * Goal 15. org.apache.commons.codec.binary.Base64.isBase64(B)Z: Line 347
   * Goal 16. org.apache.commons.codec.binary.Base64.isBase64(Ljava/lang/String;)Z: Line 380
   * Goal 17. org.apache.commons.codec.binary.Base64.isBase64([B)Z: Line 361
   * Goal 18. org.apache.commons.codec.binary.Base64.isBase64([B)Z: Line 362
   * Goal 19. org.apache.commons.codec.binary.Base64.isBase64([B)Z: Line 366
   * Goal 20. [METHOD] org.apache.commons.codec.binary.Base64.isBase64(Ljava/lang/String;)Z
   * Goal 21. [METHODNOEX] org.apache.commons.codec.binary.Base64.isBase64(Ljava/lang/String;)Z
   * Goal 22. Weak Mutation 79: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 23. Weak Mutation 80: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 24. Weak Mutation 81: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 25. Weak Mutation 82: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 26. Weak Mutation 83: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 0
   * Goal 27. Weak Mutation 84: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 1
   * Goal 28. Weak Mutation 85: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> -1
   * Goal 29. Weak Mutation 86: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 60
   * Goal 30. Weak Mutation 87: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 62
   * Goal 31. Weak Mutation 88: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator == -> -2
   * Goal 32. Weak Mutation 89: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator == -> >=
   * Goal 33. Weak Mutation 90: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator == -> <=
   * Goal 34. Weak Mutation 91: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 35. Weak Mutation 92: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 36. Weak Mutation 93: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 37. Weak Mutation 94: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 38. Weak Mutation 96: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator < -> !=
   * Goal 39. Weak Mutation 98: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 40. Weak Mutation 99: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 41. Weak Mutation 100: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 42. Weak Mutation 101: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 43. Weak Mutation 102: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 44. Weak Mutation 103: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator >= -> -1
   * Goal 45. Weak Mutation 106: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 46. Weak Mutation 107: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 47. Weak Mutation 108: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 48. Weak Mutation 109: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 49. Weak Mutation 110: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 50. Weak Mutation 111: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - -1 -> 0
   * Goal 51. Weak Mutation 112: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - -1 -> 1
   * Goal 52. Weak Mutation 113: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - -1 -> -2
   * Goal 53. Weak Mutation 114: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator == -> -2
   * Goal 54. Weak Mutation 115: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator == -> >=
   * Goal 55. Weak Mutation 117: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 1 -> 0
   * Goal 56. Weak Mutation 118: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 0 -> 1
   * Goal 57. Weak Mutation 119: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceConstant - 0 -> 1
   * Goal 58. Weak Mutation 120: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 59. Weak Mutation 121: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 60. Weak Mutation 122: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> EOF
   * Goal 61. Weak Mutation 123: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> MASK_8BITS
   * Goal 62. Weak Mutation 124: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - InsertUnaryOp Negation of i
   * Goal 63. Weak Mutation 125: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - InsertUnaryOp IINC 1 i
   * Goal 64. Weak Mutation 126: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - InsertUnaryOp IINC -1 i
   * Goal 65. Weak Mutation 127: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable arrayOctet -> CHUNK_SEPARATOR
   * Goal 66. Weak Mutation 128: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceComparisonOperator >= -> -1
   * Goal 67. Weak Mutation 129: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceComparisonOperator >= -> >
   * Goal 68. Weak Mutation 131: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable arrayOctet -> CHUNK_SEPARATOR
   * Goal 69. Weak Mutation 132: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 70. Weak Mutation 133: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 71. Weak Mutation 134: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> EOF
   * Goal 72. Weak Mutation 135: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> MASK_8BITS
   * Goal 73. Weak Mutation 136: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - InsertUnaryOp Negation of i
   * Goal 74. Weak Mutation 137: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - InsertUnaryOp IINC 1 i
   * Goal 75. Weak Mutation 138: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - InsertUnaryOp IINC -1 i
   * Goal 76. Weak Mutation 139: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceComparisonOperator != -> ==
   * Goal 77. Weak Mutation 140: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable arrayOctet -> CHUNK_SEPARATOR
   * Goal 78. Weak Mutation 141: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 79. Weak Mutation 142: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 80. Weak Mutation 143: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> EOF
   * Goal 81. Weak Mutation 144: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> MASK_8BITS
   * Goal 82. Weak Mutation 145: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - InsertUnaryOp Negation of i
   * Goal 83. Weak Mutation 146: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - InsertUnaryOp IINC 1 i
   * Goal 84. Weak Mutation 147: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - InsertUnaryOp IINC -1 i
   * Goal 85. Weak Mutation 148: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceComparisonOperator != -> ==
   * Goal 86. Weak Mutation 150: org.apache.commons.codec.binary.Base64.isBase64([B)Z:366 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      boolean boolean0 = Base64.isBase64(" =RtyHQfB");
      assertTrue(boolean0);
  }

  //Test case number: 8
  /*
   * 368 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: root-Branch
   * Goal 4. org.apache.commons.codec.binary.Base64.isArrayByteBase64([B)Z: root-Branch
   * Goal 5. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I3 Branch 1 IFNULL L238 - false
   * Goal 6. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I6 Branch 2 IFNE L238 - true
   * Goal 7. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I14 Branch 3 IFEQ L244 - true
   * Goal 8. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I41 Branch 4 IFLE L246 - true
   * Goal 9. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I4 Branch 5 IF_ICMPEQ L347 - true
   * Goal 10. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I4 Branch 5 IF_ICMPEQ L347 - false
   * Goal 11. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I6 Branch 6 IFLT L347 - false
   * Goal 12. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I10 Branch 7 IF_ICMPGE L347 - false
   * Goal 13. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I15 Branch 8 IF_ICMPEQ L347 - false
   * Goal 14. org.apache.commons.codec.binary.Base64.isBase64([B)Z: I8 Branch 9 IF_ICMPGE L361 - true
   * Goal 15. org.apache.commons.codec.binary.Base64.isBase64([B)Z: I8 Branch 9 IF_ICMPGE L361 - false
   * Goal 16. org.apache.commons.codec.binary.Base64.isBase64([B)Z: I15 Branch 10 IFNE L362 - true
   * Goal 17. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 18. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 19. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 20. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true
   * Goal 21. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true
   * Goal 22. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 34 IFEQ L722 - true
   * Goal 23. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - true
   * Goal 24. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - false
   * Goal 25. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I22 Branch 36 IF_ICMPNE L729 - true
   * Goal 26. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 38 TABLESWITCH L734 Case 0 - false
   * Goal 27. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 39 TABLESWITCH L734 Case 1 - true
   * Goal 28. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 40 TABLESWITCH L734 Case 2 - false
   * Goal 29. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 41 TABLESWITCH L734 Default-Case - false
   * Goal 30. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I95 Branch 42 IF_ACMPNE L743 - false
   * Goal 31. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I246 Branch 44 IFLE L763 - true
   * Goal 32. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - true
   * Goal 33. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - false
   * Goal 34. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I311 Branch 47 IFGE L772 - true
   * Goal 35. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I330 Branch 48 IF_ICMPNE L776 - true
   * Goal 36. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 37. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 38. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 39. Branch org.apache.commons.codec.binary.Base64.isArrayByteBase64([B)Z: root-Branch in context: org.apache.commons.codec.binary.Base64:isArrayByteBase64([B)Z
   * Goal 40. Branch org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B: root-Branch in context: org.apache.commons.codec.binary.Base64:encodeBase64([BZ)[B
   * Goal 41. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 34 IFEQ L722 - true in context: 
   * Goal 42. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - false in context: 
   * Goal 43. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - true in context: 
   * Goal 44. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I22 Branch 36 IF_ICMPNE L729 - true in context: 
   * Goal 45. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 41 TABLESWITCH L734 Default-Case - false in context: 
   * Goal 46. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 40 TABLESWITCH L734 Case 2 - false in context: 
   * Goal 47. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 39 TABLESWITCH L734 Case 1 - true in context: 
   * Goal 48. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 38 TABLESWITCH L734 Case 0 - false in context: 
   * Goal 49. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I95 Branch 42 IF_ACMPNE L743 - false in context: 
   * Goal 50. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I246 Branch 44 IFLE L763 - true in context: 
   * Goal 51. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - true in context: 
   * Goal 52. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - false in context: 
   * Goal 53. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I311 Branch 47 IFGE L772 - true in context: 
   * Goal 54. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I330 Branch 48 IF_ICMPNE L776 - true in context: 
   * Goal 55. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 56. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 57. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 58. [Output]: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:NonEmptyArray
   * Goal 59. [Output]: org.apache.commons.codec.binary.Base64.isArrayByteBase64([B)Z:True
   * Goal 60. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 61. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 62. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 63. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 64. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 65. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 66. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 67. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 601
   * Goal 68. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 602
   * Goal 69. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 70. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 71. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 72. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 722
   * Goal 73. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 727
   * Goal 74. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 728
   * Goal 75. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 729
   * Goal 76. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 732
   * Goal 77. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 733
   * Goal 78. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 734
   * Goal 79. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 739
   * Goal 80. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 741
   * Goal 81. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 743
   * Goal 82. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 744
   * Goal 83. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 745
   * Goal 84. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 761
   * Goal 85. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 763
   * Goal 86. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 767
   * Goal 87. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 768
   * Goal 88. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 769
   * Goal 89. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 770
   * Goal 90. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 771
   * Goal 91. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 772
   * Goal 92. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 775
   * Goal 93. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 776
   * Goal 94. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 790
   * Goal 95. org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B: Line 197
   * Goal 96. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: Line 216
   * Goal 97. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 238
   * Goal 98. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 244
   * Goal 99. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 245
   * Goal 100. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 246
   * Goal 101. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 253
   * Goal 102. org.apache.commons.codec.binary.Base64.isArrayByteBase64([B)Z: Line 335
   * Goal 103. org.apache.commons.codec.binary.Base64.isBase64(B)Z: Line 347
   * Goal 104. org.apache.commons.codec.binary.Base64.isBase64([B)Z: Line 361
   * Goal 105. org.apache.commons.codec.binary.Base64.isBase64([B)Z: Line 362
   * Goal 106. org.apache.commons.codec.binary.Base64.isBase64([B)Z: Line 366
   * Goal 107. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 108. [METHOD] org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B
   * Goal 109. [METHOD] org.apache.commons.codec.binary.Base64.isArrayByteBase64([B)Z
   * Goal 110. [METHODNOEX] org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B
   * Goal 111. [METHODNOEX] org.apache.commons.codec.binary.Base64.isArrayByteBase64([B)Z
   * Goal 112. Weak Mutation 5: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 113. Weak Mutation 6: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp Negation of isChunked
   * Goal 114. Weak Mutation 7: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp IINC 1 isChunked
   * Goal 115. Weak Mutation 8: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp IINC -1 isChunked
   * Goal 116. Weak Mutation 9: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - ReplaceConstant - 0 -> 1
   * Goal 117. Weak Mutation 10: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 118. Weak Mutation 12: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of isChunked
   * Goal 119. Weak Mutation 13: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC 1 isChunked
   * Goal 120. Weak Mutation 14: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC -1 isChunked
   * Goal 121. Weak Mutation 16: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of urlSafe
   * Goal 122. Weak Mutation 17: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 0
   * Goal 123. Weak Mutation 18: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 1
   * Goal 124. Weak Mutation 19: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -1
   * Goal 125. Weak Mutation 20: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 2147483646
   * Goal 126. Weak Mutation 21: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -2147483648
   * Goal 127. Weak Mutation 22: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 128. Weak Mutation 23: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator = null -> != null
   * Goal 129. Weak Mutation 24: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 130. Weak Mutation 26: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator != -> <
   * Goal 131. Weak Mutation 30: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp Negation of isChunked
   * Goal 132. Weak Mutation 31: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC 1 isChunked
   * Goal 133. Weak Mutation 32: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC -1 isChunked
   * Goal 134. Weak Mutation 33: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - ReplaceComparisonOperator == -> !=
   * Goal 135. Weak Mutation 38: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - ReplaceConstant - 0 -> 1
   * Goal 136. Weak Mutation 40: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp Negation of urlSafe
   * Goal 137. Weak Mutation 41: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC 1 urlSafe
   * Goal 138. Weak Mutation 42: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC -1 urlSafe
   * Goal 139. Weak Mutation 43: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:245 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 140. Weak Mutation 44: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp Negation of len
   * Goal 141. Weak Mutation 45: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> PEM_CHUNK_SIZE
   * Goal 142. Weak Mutation 46: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> MIME_CHUNK_SIZE
   * Goal 143. Weak Mutation 47: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> EOF
   * Goal 144. Weak Mutation 48: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> MASK_8BITS
   * Goal 145. Weak Mutation 49: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp Negation of maxResultSize
   * Goal 146. Weak Mutation 50: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp IINC 1 maxResultSize
   * Goal 147. Weak Mutation 51: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp IINC -1 maxResultSize
   * Goal 148. Weak Mutation 53: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceComparisonOperator <= -> ==
   * Goal 149. Weak Mutation 65: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:253 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 150. Weak Mutation 78: org.apache.commons.codec.binary.Base64.isArrayByteBase64([B)Z:335 - ReplaceVariable arrayOctet -> CHUNK_SEPARATOR
   * Goal 151. Weak Mutation 79: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 152. Weak Mutation 80: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 153. Weak Mutation 81: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 154. Weak Mutation 82: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 155. Weak Mutation 83: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 0
   * Goal 156. Weak Mutation 84: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 1
   * Goal 157. Weak Mutation 85: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> -1
   * Goal 158. Weak Mutation 86: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 60
   * Goal 159. Weak Mutation 87: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 62
   * Goal 160. Weak Mutation 88: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator == -> -2
   * Goal 161. Weak Mutation 89: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator == -> >=
   * Goal 162. Weak Mutation 91: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 163. Weak Mutation 92: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 164. Weak Mutation 93: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 165. Weak Mutation 94: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 166. Weak Mutation 96: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator < -> !=
   * Goal 167. Weak Mutation 98: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 168. Weak Mutation 99: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 169. Weak Mutation 100: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 170. Weak Mutation 101: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 171. Weak Mutation 102: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 172. Weak Mutation 103: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator >= -> -1
   * Goal 173. Weak Mutation 106: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 174. Weak Mutation 107: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 175. Weak Mutation 108: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 176. Weak Mutation 109: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 177. Weak Mutation 110: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 178. Weak Mutation 111: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - -1 -> 0
   * Goal 179. Weak Mutation 112: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - -1 -> 1
   * Goal 180. Weak Mutation 113: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - -1 -> -2
   * Goal 181. Weak Mutation 115: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator == -> >=
   * Goal 182. Weak Mutation 117: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 1 -> 0
   * Goal 183. Weak Mutation 119: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceConstant - 0 -> 1
   * Goal 184. Weak Mutation 120: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 185. Weak Mutation 121: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 186. Weak Mutation 122: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> EOF
   * Goal 187. Weak Mutation 123: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> MASK_8BITS
   * Goal 188. Weak Mutation 124: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - InsertUnaryOp Negation of i
   * Goal 189. Weak Mutation 125: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - InsertUnaryOp IINC 1 i
   * Goal 190. Weak Mutation 126: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - InsertUnaryOp IINC -1 i
   * Goal 191. Weak Mutation 127: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable arrayOctet -> CHUNK_SEPARATOR
   * Goal 192. Weak Mutation 128: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceComparisonOperator >= -> -1
   * Goal 193. Weak Mutation 129: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceComparisonOperator >= -> >
   * Goal 194. Weak Mutation 131: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable arrayOctet -> CHUNK_SEPARATOR
   * Goal 195. Weak Mutation 132: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 196. Weak Mutation 133: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 197. Weak Mutation 134: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> EOF
   * Goal 198. Weak Mutation 135: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> MASK_8BITS
   * Goal 199. Weak Mutation 136: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - InsertUnaryOp Negation of i
   * Goal 200. Weak Mutation 137: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - InsertUnaryOp IINC 1 i
   * Goal 201. Weak Mutation 138: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - InsertUnaryOp IINC -1 i
   * Goal 202. Weak Mutation 139: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceComparisonOperator != -> ==
   * Goal 203. Weak Mutation 150: org.apache.commons.codec.binary.Base64.isBase64([B)Z:366 - ReplaceConstant - 1 -> 0
   * Goal 204. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 205. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 206. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 207. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 208. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 209. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 210. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 211. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 212. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 213. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 214. Weak Mutation 348: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> <
   * Goal 215. Weak Mutation 365: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 0
   * Goal 216. Weak Mutation 366: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 1
   * Goal 217. Weak Mutation 367: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> -1
   * Goal 218. Weak Mutation 368: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 3
   * Goal 219. Weak Mutation 369: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 5
   * Goal 220. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 221. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 222. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 223. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 224. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 225. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 226. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 227. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 228. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 229. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 230. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 231. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 232. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 233. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 234. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 235. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 236. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 237. Weak Mutation 393: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 238. Weak Mutation 583: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:722 - InsertUnaryOp Negation
   * Goal 239. Weak Mutation 584: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:722 - ReplaceComparisonOperator == -> !=
   * Goal 240. Weak Mutation 585: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 241. Weak Mutation 586: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 242. Weak Mutation 587: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> inPos
   * Goal 243. Weak Mutation 588: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> lineLength
   * Goal 244. Weak Mutation 589: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> EOF
   * Goal 245. Weak Mutation 590: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 246. Weak Mutation 591: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp Negation of inAvail
   * Goal 247. Weak Mutation 592: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp IINC 1 inAvail
   * Goal 248. Weak Mutation 593: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp IINC -1 inAvail
   * Goal 249. Weak Mutation 594: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceComparisonOperator >= -> -1
   * Goal 250. Weak Mutation 595: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceComparisonOperator >= -> ==
   * Goal 251. Weak Mutation 597: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:728 - ReplaceConstant - 1 -> 0
   * Goal 252. Weak Mutation 598: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceConstant - 0 -> 1
   * Goal 253. Weak Mutation 599: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp Negation
   * Goal 254. Weak Mutation 600: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp +1
   * Goal 255. Weak Mutation 601: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp -1
   * Goal 256. Weak Mutation 604: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceComparisonOperator != -> >
   * Goal 257. Weak Mutation 615: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 258. Weak Mutation 616: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 259. Weak Mutation 617: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> lineLength
   * Goal 260. Weak Mutation 618: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> EOF
   * Goal 261. Weak Mutation 619: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 262. Weak Mutation 620: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - InsertUnaryOp Negation
   * Goal 263. Weak Mutation 621: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - InsertUnaryOp +1
   * Goal 264. Weak Mutation 622: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - InsertUnaryOp -1
   * Goal 265. Weak Mutation 623: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:733 - InsertUnaryOp Negation
   * Goal 266. Weak Mutation 624: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:733 - InsertUnaryOp +1
   * Goal 267. Weak Mutation 625: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:733 - InsertUnaryOp -1
   * Goal 268. Weak Mutation 626: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:734 - InsertUnaryOp Negation
   * Goal 269. Weak Mutation 627: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:734 - InsertUnaryOp +1
   * Goal 270. Weak Mutation 628: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:734 - InsertUnaryOp -1
   * Goal 271. Weak Mutation 629: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceVariable buffer -> in
   * Goal 272. Weak Mutation 630: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceVariable buffer -> CHUNK_SEPARATOR
   * Goal 273. Weak Mutation 631: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp Negation
   * Goal 274. Weak Mutation 632: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp +1
   * Goal 275. Weak Mutation 633: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp -1
   * Goal 276. Weak Mutation 634: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 1 -> 0
   * Goal 277. Weak Mutation 635: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceArithmeticOperator + -> %
   * Goal 278. Weak Mutation 636: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceArithmeticOperator + -> -
   * Goal 279. Weak Mutation 637: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceArithmeticOperator + -> *
   * Goal 280. Weak Mutation 638: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceArithmeticOperator + -> /
   * Goal 281. Weak Mutation 639: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceVariable encodeTable -> CHUNK_SEPARATOR
   * Goal 282. Weak Mutation 640: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp Negation
   * Goal 283. Weak Mutation 641: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp +1
   * Goal 284. Weak Mutation 642: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp -1
   * Goal 285. Weak Mutation 643: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 2 -> 0
   * Goal 286. Weak Mutation 644: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 2 -> 1
   * Goal 287. Weak Mutation 645: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 2 -> -1
   * Goal 288. Weak Mutation 646: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 2 -> 3
   * Goal 289. Weak Mutation 649: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 63 -> 0
   * Goal 290. Weak Mutation 650: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 63 -> 1
   * Goal 291. Weak Mutation 651: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 63 -> -1
   * Goal 292. Weak Mutation 652: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 63 -> 62
   * Goal 293. Weak Mutation 653: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 63 -> 64
   * Goal 294. Weak Mutation 654: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceBitwiseOperator & -> |
   * Goal 295. Weak Mutation 655: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceBitwiseOperator & -> ^
   * Goal 296. Weak Mutation 656: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceVariable buffer -> in
   * Goal 297. Weak Mutation 657: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceVariable buffer -> CHUNK_SEPARATOR
   * Goal 298. Weak Mutation 658: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp Negation
   * Goal 299. Weak Mutation 659: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp +1
   * Goal 300. Weak Mutation 660: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp -1
   * Goal 301. Weak Mutation 661: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 1 -> 0
   * Goal 302. Weak Mutation 662: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceArithmeticOperator + -> %
   * Goal 303. Weak Mutation 663: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceArithmeticOperator + -> -
   * Goal 304. Weak Mutation 664: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceArithmeticOperator + -> *
   * Goal 305. Weak Mutation 665: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceArithmeticOperator + -> /
   * Goal 306. Weak Mutation 666: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceVariable encodeTable -> CHUNK_SEPARATOR
   * Goal 307. Weak Mutation 667: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp Negation
   * Goal 308. Weak Mutation 668: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp +1
   * Goal 309. Weak Mutation 669: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp -1
   * Goal 310. Weak Mutation 670: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 4 -> 0
   * Goal 311. Weak Mutation 671: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 4 -> 1
   * Goal 312. Weak Mutation 672: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 4 -> -1
   * Goal 313. Weak Mutation 673: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 4 -> 3
   * Goal 314. Weak Mutation 674: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 4 -> 5
   * Goal 315. Weak Mutation 677: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 63 -> 0
   * Goal 316. Weak Mutation 678: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 63 -> 1
   * Goal 317. Weak Mutation 679: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 63 -> -1
   * Goal 318. Weak Mutation 680: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 63 -> 62
   * Goal 319. Weak Mutation 681: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 63 -> 64
   * Goal 320. Weak Mutation 682: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceBitwiseOperator & -> |
   * Goal 321. Weak Mutation 683: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceBitwiseOperator & -> ^
   * Goal 322. Weak Mutation 684: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:743 - ReplaceVariable encodeTable -> CHUNK_SEPARATOR
   * Goal 323. Weak Mutation 685: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:743 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 324. Weak Mutation 686: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:743 - ReplaceComparisonOperator != -> ==
   * Goal 325. Weak Mutation 687: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - ReplaceVariable buffer -> in
   * Goal 326. Weak Mutation 688: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - ReplaceVariable buffer -> CHUNK_SEPARATOR
   * Goal 327. Weak Mutation 689: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - InsertUnaryOp Negation
   * Goal 328. Weak Mutation 690: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - InsertUnaryOp +1
   * Goal 329. Weak Mutation 691: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - InsertUnaryOp -1
   * Goal 330. Weak Mutation 692: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - ReplaceConstant - 1 -> 0
   * Goal 331. Weak Mutation 693: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - ReplaceArithmeticOperator + -> %
   * Goal 332. Weak Mutation 694: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - ReplaceArithmeticOperator + -> -
   * Goal 333. Weak Mutation 695: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - ReplaceArithmeticOperator + -> *
   * Goal 334. Weak Mutation 696: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - ReplaceArithmeticOperator + -> /
   * Goal 335. Weak Mutation 699: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - InsertUnaryOp Negation
   * Goal 336. Weak Mutation 700: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:745 - ReplaceVariable buffer -> in
   * Goal 337. Weak Mutation 701: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:745 - ReplaceVariable buffer -> CHUNK_SEPARATOR
   * Goal 338. Weak Mutation 702: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:745 - InsertUnaryOp Negation
   * Goal 339. Weak Mutation 703: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:745 - InsertUnaryOp +1
   * Goal 340. Weak Mutation 704: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:745 - InsertUnaryOp -1
   * Goal 341. Weak Mutation 705: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:745 - ReplaceConstant - 1 -> 0
   * Goal 342. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 343. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 344. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 345. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 346. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 347. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 348. Weak Mutation 713: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> !=
   * Goal 349. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 350. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 351. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 352. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 353. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 354. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 355. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 356. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 357. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 358. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 359. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 360. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 361. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 362. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 363. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 364. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 365. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 366. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 367. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 368. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        Base64.encodeBase64(byteArray0, false);
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // lineSeparator must not contain base64 characters: [\uFFFDg]
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 9
  /*
   * 29 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString([B)Ljava/lang/String;: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I3 Branch 1 IFNULL L238 - true
   * Goal 4. Branch org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString([B)Ljava/lang/String;: root-Branch in context: org.apache.commons.codec.binary.Base64:encodeBase64URLSafeString([B)Ljava/lang/String;
   * Goal 5. [Output]: org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString([B)Ljava/lang/String;:Null
   * Goal 6. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: Line 216
   * Goal 7. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 238
   * Goal 8. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 239
   * Goal 9. org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString([B)Ljava/lang/String;: Line 305
   * Goal 10. [METHOD] org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString([B)Ljava/lang/String;
   * Goal 11. [METHODNOEX] org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString([B)Ljava/lang/String;
   * Goal 12. Weak Mutation 10: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 13. Weak Mutation 11: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable isChunked -> urlSafe
   * Goal 14. Weak Mutation 12: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of isChunked
   * Goal 15. Weak Mutation 13: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC 1 isChunked
   * Goal 16. Weak Mutation 14: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC -1 isChunked
   * Goal 17. Weak Mutation 15: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable urlSafe -> isChunked
   * Goal 18. Weak Mutation 16: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of urlSafe
   * Goal 19. Weak Mutation 17: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 0
   * Goal 20. Weak Mutation 18: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 1
   * Goal 21. Weak Mutation 19: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -1
   * Goal 22. Weak Mutation 20: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 2147483646
   * Goal 23. Weak Mutation 21: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -2147483648
   * Goal 24. Weak Mutation 22: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 25. Weak Mutation 23: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator = null -> != null
   * Goal 26. Weak Mutation 28: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:239 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 27. Weak Mutation 73: org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString([B)Ljava/lang/String;:305 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 28. Weak Mutation 74: org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString([B)Ljava/lang/String;:305 - ReplaceConstant - 0 -> 1
   * Goal 29. Weak Mutation 75: org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString([B)Ljava/lang/String;:305 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = Base64.encodeBase64URLSafeString((byte[]) null);
      assertNull(string0);
  }

  //Test case number: 10
  /*
   * 279 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString([B)Ljava/lang/String;: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: root-Branch
   * Goal 4. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I3 Branch 1 IFNULL L238 - false
   * Goal 5. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I6 Branch 2 IFNE L238 - true
   * Goal 6. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I14 Branch 3 IFEQ L244 - true
   * Goal 7. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I41 Branch 4 IFLE L246 - true
   * Goal 8. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 9. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 10. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 11. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true
   * Goal 12. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - false
   * Goal 13. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 34 IFEQ L722 - true
   * Goal 14. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - true
   * Goal 15. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - false
   * Goal 16. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I22 Branch 36 IF_ICMPNE L729 - true
   * Goal 17. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 38 TABLESWITCH L734 Case 0 - false
   * Goal 18. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 39 TABLESWITCH L734 Case 1 - true
   * Goal 19. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 40 TABLESWITCH L734 Case 2 - false
   * Goal 20. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 41 TABLESWITCH L734 Default-Case - false
   * Goal 21. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I95 Branch 42 IF_ACMPNE L743 - true
   * Goal 22. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I246 Branch 44 IFLE L763 - true
   * Goal 23. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - true
   * Goal 24. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - false
   * Goal 25. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I311 Branch 47 IFGE L772 - true
   * Goal 26. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I330 Branch 48 IF_ICMPNE L776 - true
   * Goal 27. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 28. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 29. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 30. Branch org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString([B)Ljava/lang/String;: root-Branch in context: org.apache.commons.codec.binary.Base64:encodeBase64URLSafeString([B)Ljava/lang/String;
   * Goal 31. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 34 IFEQ L722 - true in context: 
   * Goal 32. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - false in context: 
   * Goal 33. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - true in context: 
   * Goal 34. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I22 Branch 36 IF_ICMPNE L729 - true in context: 
   * Goal 35. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 41 TABLESWITCH L734 Default-Case - false in context: 
   * Goal 36. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 40 TABLESWITCH L734 Case 2 - false in context: 
   * Goal 37. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 39 TABLESWITCH L734 Case 1 - true in context: 
   * Goal 38. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 38 TABLESWITCH L734 Case 0 - false in context: 
   * Goal 39. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I95 Branch 42 IF_ACMPNE L743 - true in context: 
   * Goal 40. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I246 Branch 44 IFLE L763 - true in context: 
   * Goal 41. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - true in context: 
   * Goal 42. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - false in context: 
   * Goal 43. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I311 Branch 47 IFGE L772 - true in context: 
   * Goal 44. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I330 Branch 48 IF_ICMPNE L776 - true in context: 
   * Goal 45. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 46. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 47. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 48. [Output]: org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString([B)Ljava/lang/String;:NonEmptyString
   * Goal 49. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 50. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 51. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 52. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 53. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 54. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 55. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 56. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 601
   * Goal 57. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 602
   * Goal 58. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 59. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 60. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 61. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 722
   * Goal 62. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 727
   * Goal 63. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 728
   * Goal 64. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 729
   * Goal 65. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 732
   * Goal 66. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 733
   * Goal 67. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 734
   * Goal 68. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 739
   * Goal 69. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 741
   * Goal 70. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 743
   * Goal 71. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 761
   * Goal 72. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 763
   * Goal 73. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 767
   * Goal 74. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 768
   * Goal 75. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 769
   * Goal 76. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 770
   * Goal 77. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 771
   * Goal 78. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 772
   * Goal 79. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 775
   * Goal 80. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 776
   * Goal 81. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 790
   * Goal 82. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: Line 216
   * Goal 83. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 238
   * Goal 84. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 244
   * Goal 85. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 245
   * Goal 86. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 246
   * Goal 87. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 253
   * Goal 88. org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString([B)Ljava/lang/String;: Line 305
   * Goal 89. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 90. [METHOD] org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString([B)Ljava/lang/String;
   * Goal 91. [METHODNOEX] org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString([B)Ljava/lang/String;
   * Goal 92. Weak Mutation 10: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 93. Weak Mutation 11: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable isChunked -> urlSafe
   * Goal 94. Weak Mutation 12: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of isChunked
   * Goal 95. Weak Mutation 13: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC 1 isChunked
   * Goal 96. Weak Mutation 14: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC -1 isChunked
   * Goal 97. Weak Mutation 15: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable urlSafe -> isChunked
   * Goal 98. Weak Mutation 16: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of urlSafe
   * Goal 99. Weak Mutation 17: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 0
   * Goal 100. Weak Mutation 18: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 1
   * Goal 101. Weak Mutation 19: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -1
   * Goal 102. Weak Mutation 20: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 2147483646
   * Goal 103. Weak Mutation 21: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -2147483648
   * Goal 104. Weak Mutation 22: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 105. Weak Mutation 23: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator = null -> != null
   * Goal 106. Weak Mutation 24: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 107. Weak Mutation 26: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator != -> <
   * Goal 108. Weak Mutation 29: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - ReplaceVariable isChunked -> urlSafe
   * Goal 109. Weak Mutation 30: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp Negation of isChunked
   * Goal 110. Weak Mutation 31: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC 1 isChunked
   * Goal 111. Weak Mutation 32: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC -1 isChunked
   * Goal 112. Weak Mutation 33: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - ReplaceComparisonOperator == -> !=
   * Goal 113. Weak Mutation 38: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - ReplaceConstant - 0 -> 1
   * Goal 114. Weak Mutation 39: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - ReplaceVariable urlSafe -> isChunked
   * Goal 115. Weak Mutation 40: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp Negation of urlSafe
   * Goal 116. Weak Mutation 41: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC 1 urlSafe
   * Goal 117. Weak Mutation 42: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC -1 urlSafe
   * Goal 118. Weak Mutation 43: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:245 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 119. Weak Mutation 44: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp Negation of len
   * Goal 120. Weak Mutation 45: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> PEM_CHUNK_SIZE
   * Goal 121. Weak Mutation 46: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> MIME_CHUNK_SIZE
   * Goal 122. Weak Mutation 47: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> EOF
   * Goal 123. Weak Mutation 48: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> MASK_8BITS
   * Goal 124. Weak Mutation 49: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp Negation of maxResultSize
   * Goal 125. Weak Mutation 50: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp IINC 1 maxResultSize
   * Goal 126. Weak Mutation 51: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp IINC -1 maxResultSize
   * Goal 127. Weak Mutation 53: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceComparisonOperator <= -> ==
   * Goal 128. Weak Mutation 65: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:253 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 129. Weak Mutation 73: org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString([B)Ljava/lang/String;:305 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 130. Weak Mutation 74: org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString([B)Ljava/lang/String;:305 - ReplaceConstant - 0 -> 1
   * Goal 131. Weak Mutation 75: org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString([B)Ljava/lang/String;:305 - ReplaceConstant - 1 -> 0
   * Goal 132. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 133. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 134. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 135. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 136. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 137. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 138. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 139. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 140. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 141. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 142. Weak Mutation 348: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> <
   * Goal 143. Weak Mutation 365: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 0
   * Goal 144. Weak Mutation 366: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 1
   * Goal 145. Weak Mutation 367: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> -1
   * Goal 146. Weak Mutation 368: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 3
   * Goal 147. Weak Mutation 369: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 5
   * Goal 148. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 149. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 150. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 151. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 152. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 153. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 154. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 155. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 156. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 157. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 158. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 159. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 160. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 161. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 162. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 163. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 164. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 165. Weak Mutation 392: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable URL_SAFE_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 166. Weak Mutation 583: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:722 - InsertUnaryOp Negation
   * Goal 167. Weak Mutation 584: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:722 - ReplaceComparisonOperator == -> !=
   * Goal 168. Weak Mutation 585: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 169. Weak Mutation 586: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 170. Weak Mutation 587: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> inPos
   * Goal 171. Weak Mutation 588: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> lineLength
   * Goal 172. Weak Mutation 589: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> EOF
   * Goal 173. Weak Mutation 590: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 174. Weak Mutation 591: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp Negation of inAvail
   * Goal 175. Weak Mutation 592: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp IINC 1 inAvail
   * Goal 176. Weak Mutation 593: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp IINC -1 inAvail
   * Goal 177. Weak Mutation 594: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceComparisonOperator >= -> -1
   * Goal 178. Weak Mutation 595: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceComparisonOperator >= -> ==
   * Goal 179. Weak Mutation 597: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:728 - ReplaceConstant - 1 -> 0
   * Goal 180. Weak Mutation 598: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceConstant - 0 -> 1
   * Goal 181. Weak Mutation 599: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp Negation
   * Goal 182. Weak Mutation 600: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp +1
   * Goal 183. Weak Mutation 601: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp -1
   * Goal 184. Weak Mutation 604: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceComparisonOperator != -> >
   * Goal 185. Weak Mutation 615: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 186. Weak Mutation 616: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 187. Weak Mutation 617: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> lineLength
   * Goal 188. Weak Mutation 618: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> EOF
   * Goal 189. Weak Mutation 619: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 190. Weak Mutation 620: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - InsertUnaryOp Negation
   * Goal 191. Weak Mutation 621: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - InsertUnaryOp +1
   * Goal 192. Weak Mutation 622: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - InsertUnaryOp -1
   * Goal 193. Weak Mutation 623: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:733 - InsertUnaryOp Negation
   * Goal 194. Weak Mutation 624: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:733 - InsertUnaryOp +1
   * Goal 195. Weak Mutation 625: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:733 - InsertUnaryOp -1
   * Goal 196. Weak Mutation 626: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:734 - InsertUnaryOp Negation
   * Goal 197. Weak Mutation 627: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:734 - InsertUnaryOp +1
   * Goal 198. Weak Mutation 628: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:734 - InsertUnaryOp -1
   * Goal 199. Weak Mutation 629: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceVariable buffer -> in
   * Goal 200. Weak Mutation 630: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceVariable buffer -> CHUNK_SEPARATOR
   * Goal 201. Weak Mutation 631: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp Negation
   * Goal 202. Weak Mutation 632: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp +1
   * Goal 203. Weak Mutation 633: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp -1
   * Goal 204. Weak Mutation 634: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 1 -> 0
   * Goal 205. Weak Mutation 635: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceArithmeticOperator + -> %
   * Goal 206. Weak Mutation 636: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceArithmeticOperator + -> -
   * Goal 207. Weak Mutation 637: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceArithmeticOperator + -> *
   * Goal 208. Weak Mutation 638: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceArithmeticOperator + -> /
   * Goal 209. Weak Mutation 639: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceVariable encodeTable -> CHUNK_SEPARATOR
   * Goal 210. Weak Mutation 640: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp Negation
   * Goal 211. Weak Mutation 641: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp +1
   * Goal 212. Weak Mutation 642: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp -1
   * Goal 213. Weak Mutation 643: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 2 -> 0
   * Goal 214. Weak Mutation 644: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 2 -> 1
   * Goal 215. Weak Mutation 645: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 2 -> -1
   * Goal 216. Weak Mutation 646: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 2 -> 3
   * Goal 217. Weak Mutation 649: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 63 -> 0
   * Goal 218. Weak Mutation 650: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 63 -> 1
   * Goal 219. Weak Mutation 651: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 63 -> -1
   * Goal 220. Weak Mutation 652: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 63 -> 62
   * Goal 221. Weak Mutation 653: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 63 -> 64
   * Goal 222. Weak Mutation 654: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceBitwiseOperator & -> |
   * Goal 223. Weak Mutation 655: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceBitwiseOperator & -> ^
   * Goal 224. Weak Mutation 656: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceVariable buffer -> in
   * Goal 225. Weak Mutation 657: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceVariable buffer -> CHUNK_SEPARATOR
   * Goal 226. Weak Mutation 658: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp Negation
   * Goal 227. Weak Mutation 659: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp +1
   * Goal 228. Weak Mutation 660: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp -1
   * Goal 229. Weak Mutation 661: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 1 -> 0
   * Goal 230. Weak Mutation 662: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceArithmeticOperator + -> %
   * Goal 231. Weak Mutation 663: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceArithmeticOperator + -> -
   * Goal 232. Weak Mutation 664: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceArithmeticOperator + -> *
   * Goal 233. Weak Mutation 665: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceArithmeticOperator + -> /
   * Goal 234. Weak Mutation 666: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceVariable encodeTable -> CHUNK_SEPARATOR
   * Goal 235. Weak Mutation 667: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp Negation
   * Goal 236. Weak Mutation 668: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp +1
   * Goal 237. Weak Mutation 669: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp -1
   * Goal 238. Weak Mutation 670: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 4 -> 0
   * Goal 239. Weak Mutation 671: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 4 -> 1
   * Goal 240. Weak Mutation 672: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 4 -> -1
   * Goal 241. Weak Mutation 673: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 4 -> 3
   * Goal 242. Weak Mutation 674: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 4 -> 5
   * Goal 243. Weak Mutation 677: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 63 -> 0
   * Goal 244. Weak Mutation 678: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 63 -> 1
   * Goal 245. Weak Mutation 679: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 63 -> -1
   * Goal 246. Weak Mutation 680: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 63 -> 62
   * Goal 247. Weak Mutation 681: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 63 -> 64
   * Goal 248. Weak Mutation 682: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceBitwiseOperator & -> |
   * Goal 249. Weak Mutation 683: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceBitwiseOperator & -> ^
   * Goal 250. Weak Mutation 684: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:743 - ReplaceVariable encodeTable -> CHUNK_SEPARATOR
   * Goal 251. Weak Mutation 685: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:743 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 252. Weak Mutation 686: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:743 - ReplaceComparisonOperator != -> ==
   * Goal 253. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 254. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 255. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 256. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 257. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 258. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 259. Weak Mutation 713: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> !=
   * Goal 260. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 261. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 262. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 263. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 264. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 265. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 266. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 267. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 268. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 269. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 270. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 271. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 272. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 273. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 274. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 275. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 276. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 277. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 278. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 279. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        Base64.encodeBase64URLSafeString(byteArray0);
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // lineSeparator must not contain base64 characters: [\uFFFDg]
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 11
  /*
   * 29 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I3 Branch 1 IFNULL L238 - true
   * Goal 4. Branch org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B: root-Branch in context: org.apache.commons.codec.binary.Base64:encodeBase64URLSafe([B)[B
   * Goal 5. [Output]: org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B:Null
   * Goal 6. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: Line 216
   * Goal 7. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 238
   * Goal 8. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 239
   * Goal 9. org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B: Line 292
   * Goal 10. [METHOD] org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B
   * Goal 11. [METHODNOEX] org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B
   * Goal 12. Weak Mutation 10: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 13. Weak Mutation 11: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable isChunked -> urlSafe
   * Goal 14. Weak Mutation 12: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of isChunked
   * Goal 15. Weak Mutation 13: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC 1 isChunked
   * Goal 16. Weak Mutation 14: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC -1 isChunked
   * Goal 17. Weak Mutation 15: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable urlSafe -> isChunked
   * Goal 18. Weak Mutation 16: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of urlSafe
   * Goal 19. Weak Mutation 17: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 0
   * Goal 20. Weak Mutation 18: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 1
   * Goal 21. Weak Mutation 19: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -1
   * Goal 22. Weak Mutation 20: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 2147483646
   * Goal 23. Weak Mutation 21: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -2147483648
   * Goal 24. Weak Mutation 22: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 25. Weak Mutation 23: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator = null -> != null
   * Goal 26. Weak Mutation 28: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:239 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 27. Weak Mutation 70: org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B:292 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 28. Weak Mutation 71: org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B:292 - ReplaceConstant - 0 -> 1
   * Goal 29. Weak Mutation 72: org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B:292 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = Base64.encodeBase64URLSafe((byte[]) null);
      assertNull(byteArray0);
  }

  //Test case number: 12
  /*
   * 229 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.encodeBase64String([B)Ljava/lang/String;: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 4. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: root-Branch
   * Goal 5. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I3 Branch 1 IFNULL L238 - false
   * Goal 6. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I6 Branch 2 IFNE L238 - true
   * Goal 7. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I14 Branch 3 IFEQ L244 - true
   * Goal 8. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I41 Branch 4 IFLE L246 - true
   * Goal 9. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 10. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 11. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 12. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true
   * Goal 13. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true
   * Goal 14. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 34 IFEQ L722 - true
   * Goal 15. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - true
   * Goal 16. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - false
   * Goal 17. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I22 Branch 36 IF_ICMPNE L729 - true
   * Goal 18. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 38 TABLESWITCH L734 Case 0 - false
   * Goal 19. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 39 TABLESWITCH L734 Case 1 - false
   * Goal 20. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 40 TABLESWITCH L734 Case 2 - true
   * Goal 21. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 41 TABLESWITCH L734 Default-Case - false
   * Goal 22. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I188 Branch 43 IF_ACMPNE L754 - false
   * Goal 23. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I246 Branch 44 IFLE L763 - true
   * Goal 24. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - true
   * Goal 25. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - false
   * Goal 26. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I311 Branch 47 IFGE L772 - true
   * Goal 27. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I330 Branch 48 IF_ICMPNE L776 - true
   * Goal 28. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 29. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 30. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 31. Branch org.apache.commons.codec.binary.Base64.encodeBase64String([B)Ljava/lang/String;: root-Branch in context: org.apache.commons.codec.binary.Base64:encodeBase64String([B)Ljava/lang/String;
   * Goal 32. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 34 IFEQ L722 - true in context: 
   * Goal 33. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - false in context: 
   * Goal 34. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - true in context: 
   * Goal 35. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I22 Branch 36 IF_ICMPNE L729 - true in context: 
   * Goal 36. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 41 TABLESWITCH L734 Default-Case - false in context: 
   * Goal 37. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 40 TABLESWITCH L734 Case 2 - true in context: 
   * Goal 38. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 38 TABLESWITCH L734 Case 0 - false in context: 
   * Goal 39. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 39 TABLESWITCH L734 Case 1 - false in context: 
   * Goal 40. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I188 Branch 43 IF_ACMPNE L754 - false in context: 
   * Goal 41. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I246 Branch 44 IFLE L763 - true in context: 
   * Goal 42. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - true in context: 
   * Goal 43. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - false in context: 
   * Goal 44. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I311 Branch 47 IFGE L772 - true in context: 
   * Goal 45. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I330 Branch 48 IF_ICMPNE L776 - true in context: 
   * Goal 46. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 47. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 48. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 49. [Output]: org.apache.commons.codec.binary.Base64.encodeBase64String([B)Ljava/lang/String;:NonEmptyString
   * Goal 50. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 51. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 52. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 53. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 54. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 55. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 56. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 57. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 601
   * Goal 58. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 602
   * Goal 59. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 60. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 61. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 62. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 722
   * Goal 63. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 727
   * Goal 64. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 728
   * Goal 65. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 729
   * Goal 66. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 732
   * Goal 67. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 733
   * Goal 68. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 734
   * Goal 69. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 750
   * Goal 70. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 751
   * Goal 71. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 752
   * Goal 72. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 754
   * Goal 73. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 755
   * Goal 74. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 761
   * Goal 75. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 763
   * Goal 76. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 767
   * Goal 77. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 768
   * Goal 78. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 769
   * Goal 79. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 770
   * Goal 80. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 771
   * Goal 81. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 772
   * Goal 82. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 775
   * Goal 83. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 776
   * Goal 84. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 790
   * Goal 85. org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B: Line 197
   * Goal 86. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: Line 216
   * Goal 87. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 238
   * Goal 88. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 244
   * Goal 89. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 245
   * Goal 90. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 246
   * Goal 91. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 253
   * Goal 92. org.apache.commons.codec.binary.Base64.encodeBase64String([B)Ljava/lang/String;: Line 279
   * Goal 93. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 94. [METHOD] org.apache.commons.codec.binary.Base64.encodeBase64String([B)Ljava/lang/String;
   * Goal 95. [METHODNOEX] org.apache.commons.codec.binary.Base64.encodeBase64String([B)Ljava/lang/String;
   * Goal 96. Weak Mutation 5: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 97. Weak Mutation 6: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp Negation of isChunked
   * Goal 98. Weak Mutation 7: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp IINC 1 isChunked
   * Goal 99. Weak Mutation 8: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp IINC -1 isChunked
   * Goal 100. Weak Mutation 9: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - ReplaceConstant - 0 -> 1
   * Goal 101. Weak Mutation 10: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 102. Weak Mutation 12: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of isChunked
   * Goal 103. Weak Mutation 13: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC 1 isChunked
   * Goal 104. Weak Mutation 14: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC -1 isChunked
   * Goal 105. Weak Mutation 16: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of urlSafe
   * Goal 106. Weak Mutation 17: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 0
   * Goal 107. Weak Mutation 18: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 1
   * Goal 108. Weak Mutation 19: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -1
   * Goal 109. Weak Mutation 20: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 2147483646
   * Goal 110. Weak Mutation 21: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -2147483648
   * Goal 111. Weak Mutation 22: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 112. Weak Mutation 23: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator = null -> != null
   * Goal 113. Weak Mutation 24: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 114. Weak Mutation 26: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator != -> <
   * Goal 115. Weak Mutation 30: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp Negation of isChunked
   * Goal 116. Weak Mutation 31: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC 1 isChunked
   * Goal 117. Weak Mutation 32: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC -1 isChunked
   * Goal 118. Weak Mutation 33: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - ReplaceComparisonOperator == -> !=
   * Goal 119. Weak Mutation 38: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - ReplaceConstant - 0 -> 1
   * Goal 120. Weak Mutation 40: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp Negation of urlSafe
   * Goal 121. Weak Mutation 41: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC 1 urlSafe
   * Goal 122. Weak Mutation 42: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC -1 urlSafe
   * Goal 123. Weak Mutation 43: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:245 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 124. Weak Mutation 44: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp Negation of len
   * Goal 125. Weak Mutation 45: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> PEM_CHUNK_SIZE
   * Goal 126. Weak Mutation 46: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> MIME_CHUNK_SIZE
   * Goal 127. Weak Mutation 47: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> EOF
   * Goal 128. Weak Mutation 48: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> MASK_8BITS
   * Goal 129. Weak Mutation 49: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp Negation of maxResultSize
   * Goal 130. Weak Mutation 50: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp IINC 1 maxResultSize
   * Goal 131. Weak Mutation 51: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp IINC -1 maxResultSize
   * Goal 132. Weak Mutation 53: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceComparisonOperator <= -> ==
   * Goal 133. Weak Mutation 65: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:253 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 134. Weak Mutation 68: org.apache.commons.codec.binary.Base64.encodeBase64String([B)Ljava/lang/String;:279 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 135. Weak Mutation 69: org.apache.commons.codec.binary.Base64.encodeBase64String([B)Ljava/lang/String;:279 - ReplaceConstant - 0 -> 1
   * Goal 136. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 137. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 138. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 139. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 140. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 141. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 142. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 143. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 144. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 145. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 146. Weak Mutation 348: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> <
   * Goal 147. Weak Mutation 365: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 0
   * Goal 148. Weak Mutation 366: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 1
   * Goal 149. Weak Mutation 367: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> -1
   * Goal 150. Weak Mutation 368: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 3
   * Goal 151. Weak Mutation 369: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 5
   * Goal 152. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 153. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 154. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 155. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 156. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 157. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 158. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 159. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 160. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 161. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 162. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 163. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 164. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 165. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 166. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 167. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 168. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 169. Weak Mutation 393: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 170. Weak Mutation 583: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:722 - InsertUnaryOp Negation
   * Goal 171. Weak Mutation 584: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:722 - ReplaceComparisonOperator == -> !=
   * Goal 172. Weak Mutation 585: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 173. Weak Mutation 586: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 174. Weak Mutation 587: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> inPos
   * Goal 175. Weak Mutation 588: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> lineLength
   * Goal 176. Weak Mutation 589: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> EOF
   * Goal 177. Weak Mutation 590: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 178. Weak Mutation 591: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp Negation of inAvail
   * Goal 179. Weak Mutation 592: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp IINC 1 inAvail
   * Goal 180. Weak Mutation 593: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp IINC -1 inAvail
   * Goal 181. Weak Mutation 594: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceComparisonOperator >= -> -1
   * Goal 182. Weak Mutation 595: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceComparisonOperator >= -> ==
   * Goal 183. Weak Mutation 597: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:728 - ReplaceConstant - 1 -> 0
   * Goal 184. Weak Mutation 598: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceConstant - 0 -> 1
   * Goal 185. Weak Mutation 599: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp Negation
   * Goal 186. Weak Mutation 600: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp +1
   * Goal 187. Weak Mutation 601: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp -1
   * Goal 188. Weak Mutation 604: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceComparisonOperator != -> >
   * Goal 189. Weak Mutation 615: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 190. Weak Mutation 616: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 191. Weak Mutation 617: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> lineLength
   * Goal 192. Weak Mutation 618: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> EOF
   * Goal 193. Weak Mutation 619: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 194. Weak Mutation 620: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - InsertUnaryOp Negation
   * Goal 195. Weak Mutation 621: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - InsertUnaryOp +1
   * Goal 196. Weak Mutation 622: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - InsertUnaryOp -1
   * Goal 197. Weak Mutation 623: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:733 - InsertUnaryOp Negation
   * Goal 198. Weak Mutation 624: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:733 - InsertUnaryOp +1
   * Goal 199. Weak Mutation 625: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:733 - InsertUnaryOp -1
   * Goal 200. Weak Mutation 626: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:734 - InsertUnaryOp Negation
   * Goal 201. Weak Mutation 627: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:734 - InsertUnaryOp +1
   * Goal 202. Weak Mutation 628: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:734 - InsertUnaryOp -1
   * Goal 203. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 204. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 205. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 206. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 207. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 208. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 209. Weak Mutation 713: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> !=
   * Goal 210. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 211. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 212. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 213. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 214. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 215. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 216. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 217. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 218. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 219. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 220. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 221. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 222. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 223. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 224. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 225. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 226. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 227. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 228. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 229. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        Base64.encodeBase64String(byteArray0);
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // lineSeparator must not contain base64 characters: [\uFFFDg]
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 13
  /*
   * 284 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.<init>(I[B)V: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.decodeBase64([B)[B: root-Branch
   * Goal 4. org.apache.commons.codec.binary.Base64.encodeBase64String([B)Ljava/lang/String;: root-Branch
   * Goal 5. org.apache.commons.codec.binary.Base64.<init>(I)V: root-Branch
   * Goal 6. org.apache.commons.codec.binary.Base64.<init>()V: root-Branch
   * Goal 7. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 8. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: root-Branch
   * Goal 9. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I3 Branch 1 IFNULL L238 - false
   * Goal 10. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I6 Branch 2 IFNE L238 - false
   * Goal 11. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 12. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 13. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 14. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true
   * Goal 15. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true
   * Goal 16. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - true
   * Goal 17. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - true
   * Goal 18. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - false
   * Goal 19. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - true
   * Goal 20. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - false
   * Goal 21. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I45 Branch 23 IF_ICMPNE L650 - true
   * Goal 22. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I57 Branch 24 IFLT L655 - false
   * Goal 23. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I61 Branch 25 IF_ICMPGE L655 - false
   * Goal 24. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - true
   * Goal 25. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - true
   * Goal 26. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - false
   * Goal 27. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I160 Branch 29 IFEQ L672 - true
   * Goal 28. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 29. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 30. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 31. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch in context: org.apache.commons.codec.binary.Base64:<init>(I[BZ)V
   * Goal 32. Branch org.apache.commons.codec.binary.Base64.decodeBase64([B)[B: root-Branch in context: org.apache.commons.codec.binary.Base64:decodeBase64([B)[B
   * Goal 33. Branch org.apache.commons.codec.binary.Base64.encodeBase64String([B)Ljava/lang/String;: root-Branch in context: org.apache.commons.codec.binary.Base64:encodeBase64String([B)Ljava/lang/String;
   * Goal 34. Branch org.apache.commons.codec.binary.Base64.<init>(I[B)V: root-Branch in context: org.apache.commons.codec.binary.Base64:<init>(I[B)V
   * Goal 35. Branch org.apache.commons.codec.binary.Base64.<init>(I)V: root-Branch in context: org.apache.commons.codec.binary.Base64:<init>(I)V
   * Goal 36. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 37. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 38. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 39. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 40. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 41. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - true in context: 
   * Goal 42. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - true in context: 
   * Goal 43. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - false in context: 
   * Goal 44. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - true in context: 
   * Goal 45. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - false in context: 
   * Goal 46. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I45 Branch 23 IF_ICMPNE L650 - true in context: 
   * Goal 47. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I57 Branch 24 IFLT L655 - false in context: 
   * Goal 48. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I61 Branch 25 IF_ICMPGE L655 - false in context: 
   * Goal 49. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - true in context: 
   * Goal 50. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I160 Branch 29 IFEQ L672 - true in context: 
   * Goal 51. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - true in context: 
   * Goal 52. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - false in context: 
   * Goal 53. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 54. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 55. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 56. [Output]: org.apache.commons.codec.binary.Base64.decodeBase64([B)[B:EmptyArray
   * Goal 57. [Output]: org.apache.commons.codec.binary.Base64.encodeBase64String([B)Ljava/lang/String;:EmptyString
   * Goal 58. org.apache.commons.codec.binary.Base64.<init>()V: Line 452
   * Goal 59. org.apache.commons.codec.binary.Base64.<init>()V: Line 453
   * Goal 60. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 494
   * Goal 61. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 495
   * Goal 62. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 521
   * Goal 63. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 522
   * Goal 64. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 65. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 66. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 67. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 68. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 69. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 70. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 71. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 601
   * Goal 72. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 602
   * Goal 73. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 74. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 75. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 76. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 641
   * Goal 77. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 644
   * Goal 78. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 645
   * Goal 79. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 647
   * Goal 80. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 648
   * Goal 81. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 649
   * Goal 82. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 650
   * Goal 83. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 655
   * Goal 84. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 656
   * Goal 85. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 657
   * Goal 86. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 672
   * Goal 87. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 697
   * Goal 88. org.apache.commons.codec.binary.Base64.decodeBase64([B)[B: Line 143
   * Goal 89. org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B: Line 197
   * Goal 90. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: Line 216
   * Goal 91. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 238
   * Goal 92. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 239
   * Goal 93. org.apache.commons.codec.binary.Base64.encodeBase64String([B)Ljava/lang/String;: Line 279
   * Goal 94. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 95. [METHOD] org.apache.commons.codec.binary.Base64.<init>(I)V
   * Goal 96. [METHOD] org.apache.commons.codec.binary.Base64.decodeBase64([B)[B
   * Goal 97. [METHOD] org.apache.commons.codec.binary.Base64.encodeBase64String([B)Ljava/lang/String;
   * Goal 98. [METHODNOEX] org.apache.commons.codec.binary.Base64.<init>(I)V
   * Goal 99. [METHODNOEX] org.apache.commons.codec.binary.Base64.decodeBase64([B)[B
   * Goal 100. [METHODNOEX] org.apache.commons.codec.binary.Base64.encodeBase64String([B)Ljava/lang/String;
   * Goal 101. Weak Mutation 0: org.apache.commons.codec.binary.Base64.decodeBase64([B)[B:143 - ReplaceVariable base64Data -> CHUNK_SEPARATOR
   * Goal 102. Weak Mutation 5: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 103. Weak Mutation 6: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp Negation of isChunked
   * Goal 104. Weak Mutation 7: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp IINC 1 isChunked
   * Goal 105. Weak Mutation 8: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp IINC -1 isChunked
   * Goal 106. Weak Mutation 9: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - ReplaceConstant - 0 -> 1
   * Goal 107. Weak Mutation 10: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 108. Weak Mutation 12: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of isChunked
   * Goal 109. Weak Mutation 13: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC 1 isChunked
   * Goal 110. Weak Mutation 14: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC -1 isChunked
   * Goal 111. Weak Mutation 16: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of urlSafe
   * Goal 112. Weak Mutation 17: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 0
   * Goal 113. Weak Mutation 18: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 1
   * Goal 114. Weak Mutation 19: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -1
   * Goal 115. Weak Mutation 20: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 2147483646
   * Goal 116. Weak Mutation 21: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -2147483648
   * Goal 117. Weak Mutation 22: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 118. Weak Mutation 23: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator = null -> != null
   * Goal 119. Weak Mutation 24: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 120. Weak Mutation 25: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator != -> -1
   * Goal 121. Weak Mutation 28: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:239 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 122. Weak Mutation 68: org.apache.commons.codec.binary.Base64.encodeBase64String([B)Ljava/lang/String;:279 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 123. Weak Mutation 69: org.apache.commons.codec.binary.Base64.encodeBase64String([B)Ljava/lang/String;:279 - ReplaceConstant - 0 -> 1
   * Goal 124. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 125. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 126. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 127. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 128. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 129. Weak Mutation 340: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> lineLength
   * Goal 130. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 131. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 132. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 133. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 134. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 135. Weak Mutation 347: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> ==
   * Goal 136. Weak Mutation 348: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> <
   * Goal 137. Weak Mutation 365: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 0
   * Goal 138. Weak Mutation 366: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 1
   * Goal 139. Weak Mutation 367: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> -1
   * Goal 140. Weak Mutation 368: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 3
   * Goal 141. Weak Mutation 369: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 5
   * Goal 142. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 143. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 144. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 145. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 146. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 147. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 148. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 149. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 150. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 151. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 152. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 153. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 154. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 155. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 156. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 157. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 158. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 159. Weak Mutation 393: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 160. Weak Mutation 394: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:641 - InsertUnaryOp Negation
   * Goal 161. Weak Mutation 395: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:641 - ReplaceComparisonOperator == -> !=
   * Goal 162. Weak Mutation 396: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 163. Weak Mutation 397: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 164. Weak Mutation 398: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> inPos
   * Goal 165. Weak Mutation 399: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> lineLength
   * Goal 166. Weak Mutation 400: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> EOF
   * Goal 167. Weak Mutation 401: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 168. Weak Mutation 402: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp Negation of inAvail
   * Goal 169. Weak Mutation 403: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp IINC 1 inAvail
   * Goal 170. Weak Mutation 404: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp IINC -1 inAvail
   * Goal 171. Weak Mutation 405: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceComparisonOperator >= -> -1
   * Goal 172. Weak Mutation 406: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceComparisonOperator >= -> ==
   * Goal 173. Weak Mutation 408: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:645 - ReplaceConstant - 1 -> 0
   * Goal 174. Weak Mutation 409: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceConstant - 0 -> 1
   * Goal 175. Weak Mutation 410: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 176. Weak Mutation 411: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> inAvail
   * Goal 177. Weak Mutation 413: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> MASK_8BITS
   * Goal 178. Weak Mutation 414: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 179. Weak Mutation 415: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> lineLength
   * Goal 180. Weak Mutation 416: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> EOF
   * Goal 181. Weak Mutation 417: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp Negation of i
   * Goal 182. Weak Mutation 418: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC 1 i
   * Goal 183. Weak Mutation 419: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC -1 i
   * Goal 184. Weak Mutation 420: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 185. Weak Mutation 421: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> inPos
   * Goal 186. Weak Mutation 422: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 187. Weak Mutation 423: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> i
   * Goal 188. Weak Mutation 424: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 189. Weak Mutation 425: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> lineLength
   * Goal 190. Weak Mutation 426: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> EOF
   * Goal 191. Weak Mutation 427: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp Negation of inAvail
   * Goal 192. Weak Mutation 428: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC 1 inAvail
   * Goal 193. Weak Mutation 429: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC -1 inAvail
   * Goal 194. Weak Mutation 430: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> -1
   * Goal 195. Weak Mutation 431: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> >
   * Goal 196. Weak Mutation 432: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> ==
   * Goal 197. Weak Mutation 433: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> PEM_CHUNK_SIZE
   * Goal 198. Weak Mutation 434: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> MIME_CHUNK_SIZE
   * Goal 199. Weak Mutation 435: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> lineLength
   * Goal 200. Weak Mutation 436: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> EOF
   * Goal 201. Weak Mutation 437: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> MASK_8BITS
   * Goal 202. Weak Mutation 438: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp Negation
   * Goal 203. Weak Mutation 439: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp +1
   * Goal 204. Weak Mutation 440: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp -1
   * Goal 205. Weak Mutation 441: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable in -> CHUNK_SEPARATOR
   * Goal 206. Weak Mutation 442: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable in -> buffer
   * Goal 207. Weak Mutation 443: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> PEM_CHUNK_SIZE
   * Goal 208. Weak Mutation 444: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> inAvail
   * Goal 209. Weak Mutation 445: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> MASK_8BITS
   * Goal 210. Weak Mutation 447: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> MIME_CHUNK_SIZE
   * Goal 211. Weak Mutation 449: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> EOF
   * Goal 212. Weak Mutation 450: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp Negation of inPos
   * Goal 213. Weak Mutation 451: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp IINC 1 inPos
   * Goal 214. Weak Mutation 452: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp IINC -1 inPos
   * Goal 215. Weak Mutation 453: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> inAvail
   * Goal 216. Weak Mutation 454: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> i
   * Goal 217. Weak Mutation 455: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> PAD
   * Goal 218. Weak Mutation 456: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> pad
   * Goal 219. Weak Mutation 457: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 220. Weak Mutation 458: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp Negation of b
   * Goal 221. Weak Mutation 459: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp IINC 1 b
   * Goal 222. Weak Mutation 460: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp IINC -1 b
   * Goal 223. Weak Mutation 463: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp Negation
   * Goal 224. Weak Mutation 466: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceComparisonOperator != -> >
   * Goal 225. Weak Mutation 468: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD
   * Goal 226. Weak Mutation 469: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> pad
   * Goal 227. Weak Mutation 470: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 228. Weak Mutation 471: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp Negation of b
   * Goal 229. Weak Mutation 472: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC 1 b
   * Goal 230. Weak Mutation 473: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC -1 b
   * Goal 231. Weak Mutation 476: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceComparisonOperator < -> <=
   * Goal 232. Weak Mutation 477: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD
   * Goal 233. Weak Mutation 478: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> pad
   * Goal 234. Weak Mutation 479: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 235. Weak Mutation 480: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp Negation of b
   * Goal 236. Weak Mutation 481: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC 1 b
   * Goal 237. Weak Mutation 482: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC -1 b
   * Goal 238. Weak Mutation 483: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 239. Weak Mutation 484: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceComparisonOperator >= -> -1
   * Goal 240. Weak Mutation 487: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 241. Weak Mutation 488: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> PAD
   * Goal 242. Weak Mutation 489: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> pad
   * Goal 243. Weak Mutation 490: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 244. Weak Mutation 491: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp Negation of b
   * Goal 245. Weak Mutation 492: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp IINC 1 b
   * Goal 246. Weak Mutation 493: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp IINC -1 b
   * Goal 247. Weak Mutation 494: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> PEM_CHUNK_SIZE
   * Goal 248. Weak Mutation 495: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> inAvail
   * Goal 249. Weak Mutation 496: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> inPos
   * Goal 250. Weak Mutation 497: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> MASK_8BITS
   * Goal 251. Weak Mutation 498: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> i
   * Goal 252. Weak Mutation 499: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> MIME_CHUNK_SIZE
   * Goal 253. Weak Mutation 500: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> lineLength
   * Goal 254. Weak Mutation 502: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp Negation of result
   * Goal 255. Weak Mutation 503: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp IINC 1 result
   * Goal 256. Weak Mutation 504: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp IINC -1 result
   * Goal 257. Weak Mutation 505: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceComparisonOperator < -> -2
   * Goal 258. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 259. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 260. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 261. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 262. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 263. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 264. Weak Mutation 713: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> !=
   * Goal 265. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 266. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 267. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 268. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 269. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 270. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 271. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 272. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 273. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 274. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 275. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 276. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 277. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 278. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 279. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 280. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 281. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 282. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 283. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 284. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      Base64 base64_0 = null;
      try {
        base64_0 = new Base64((-1593));
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // lineSeparator must not contain base64 characters: [\uFFFDg]
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 14
  /*
   * 35 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.encodeBase64Chunked([B)[B: root-Branch
   * Goal 4. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I3 Branch 1 IFNULL L238 - true
   * Goal 5. Branch org.apache.commons.codec.binary.Base64.encodeBase64Chunked([B)[B: root-Branch in context: org.apache.commons.codec.binary.Base64:encodeBase64Chunked([B)[B
   * Goal 6. [Output]: org.apache.commons.codec.binary.Base64.encodeBase64Chunked([B)[B:Null
   * Goal 7. org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B: Line 197
   * Goal 8. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: Line 216
   * Goal 9. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 238
   * Goal 10. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 239
   * Goal 11. org.apache.commons.codec.binary.Base64.encodeBase64Chunked([B)[B: Line 264
   * Goal 12. [METHOD] org.apache.commons.codec.binary.Base64.encodeBase64Chunked([B)[B
   * Goal 13. [METHODNOEX] org.apache.commons.codec.binary.Base64.encodeBase64Chunked([B)[B
   * Goal 14. Weak Mutation 5: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 15. Weak Mutation 6: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp Negation of isChunked
   * Goal 16. Weak Mutation 7: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp IINC 1 isChunked
   * Goal 17. Weak Mutation 8: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp IINC -1 isChunked
   * Goal 18. Weak Mutation 9: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - ReplaceConstant - 0 -> 1
   * Goal 19. Weak Mutation 10: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 20. Weak Mutation 11: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable isChunked -> urlSafe
   * Goal 21. Weak Mutation 12: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of isChunked
   * Goal 22. Weak Mutation 13: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC 1 isChunked
   * Goal 23. Weak Mutation 14: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC -1 isChunked
   * Goal 24. Weak Mutation 15: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable urlSafe -> isChunked
   * Goal 25. Weak Mutation 16: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of urlSafe
   * Goal 26. Weak Mutation 17: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 0
   * Goal 27. Weak Mutation 18: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 1
   * Goal 28. Weak Mutation 19: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -1
   * Goal 29. Weak Mutation 20: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 2147483646
   * Goal 30. Weak Mutation 21: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -2147483648
   * Goal 31. Weak Mutation 22: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 32. Weak Mutation 23: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator = null -> != null
   * Goal 33. Weak Mutation 28: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:239 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 34. Weak Mutation 66: org.apache.commons.codec.binary.Base64.encodeBase64Chunked([B)[B:264 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 35. Weak Mutation 67: org.apache.commons.codec.binary.Base64.encodeBase64Chunked([B)[B:264 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = Base64.encodeBase64Chunked((byte[]) null);
      assertNull(byteArray0);
  }

  //Test case number: 15
  /*
   * 154 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.<init>(I[B)V: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.decodeBase64([B)[B: root-Branch
   * Goal 4. org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B: root-Branch
   * Goal 5. org.apache.commons.codec.binary.Base64.<init>(I)V: root-Branch
   * Goal 6. org.apache.commons.codec.binary.Base64.<init>()V: root-Branch
   * Goal 7. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 8. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: root-Branch
   * Goal 9. org.apache.commons.codec.binary.Base64.encodeBase64([B)[B: root-Branch
   * Goal 10. org.apache.commons.codec.binary.Base64.encodeBase64Chunked([B)[B: root-Branch
   * Goal 11. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I3 Branch 1 IFNULL L238 - false
   * Goal 12. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I6 Branch 2 IFNE L238 - false
   * Goal 13. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 14. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 15. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 16. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true
   * Goal 17. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true
   * Goal 18. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 19. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 20. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 21. Branch org.apache.commons.codec.binary.Base64.encodeBase64Chunked([B)[B: root-Branch in context: org.apache.commons.codec.binary.Base64:encodeBase64Chunked([B)[B
   * Goal 22. Branch org.apache.commons.codec.binary.Base64.decodeBase64([B)[B: root-Branch in context: org.apache.commons.codec.binary.Base64:decodeBase64([B)[B
   * Goal 23. Branch org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B: root-Branch in context: org.apache.commons.codec.binary.Base64:decodeBase64(Ljava/lang/String;)[B
   * Goal 24. Branch org.apache.commons.codec.binary.Base64.encodeBase64([B)[B: root-Branch in context: org.apache.commons.codec.binary.Base64:encodeBase64([B)[B
   * Goal 25. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 26. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 27. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 28. [Output]: org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B:EmptyArray
   * Goal 29. [Output]: org.apache.commons.codec.binary.Base64.decodeBase64([B)[B:EmptyArray
   * Goal 30. [Output]: org.apache.commons.codec.binary.Base64.encodeBase64([B)[B:EmptyArray
   * Goal 31. [Output]: org.apache.commons.codec.binary.Base64.encodeBase64Chunked([B)[B:EmptyArray
   * Goal 32. org.apache.commons.codec.binary.Base64.<init>()V: Line 452
   * Goal 33. org.apache.commons.codec.binary.Base64.<init>()V: Line 453
   * Goal 34. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 494
   * Goal 35. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 495
   * Goal 36. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 521
   * Goal 37. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 522
   * Goal 38. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 39. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 40. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 41. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 42. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 43. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 44. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 45. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 601
   * Goal 46. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 602
   * Goal 47. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 48. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 49. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 50. org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B: Line 158
   * Goal 51. org.apache.commons.codec.binary.Base64.decodeBase64([B)[B: Line 143
   * Goal 52. org.apache.commons.codec.binary.Base64.encodeBase64([B)[B: Line 182
   * Goal 53. org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B: Line 197
   * Goal 54. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: Line 216
   * Goal 55. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 238
   * Goal 56. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 239
   * Goal 57. org.apache.commons.codec.binary.Base64.encodeBase64Chunked([B)[B: Line 264
   * Goal 58. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 59. [METHOD] org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B
   * Goal 60. [METHOD] org.apache.commons.codec.binary.Base64.decodeBase64([B)[B
   * Goal 61. [METHOD] org.apache.commons.codec.binary.Base64.encodeBase64([B)[B
   * Goal 62. [METHOD] org.apache.commons.codec.binary.Base64.encodeBase64Chunked([B)[B
   * Goal 63. [METHODNOEX] org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B
   * Goal 64. [METHODNOEX] org.apache.commons.codec.binary.Base64.decodeBase64([B)[B
   * Goal 65. [METHODNOEX] org.apache.commons.codec.binary.Base64.encodeBase64([B)[B
   * Goal 66. [METHODNOEX] org.apache.commons.codec.binary.Base64.encodeBase64Chunked([B)[B
   * Goal 67. Weak Mutation 0: org.apache.commons.codec.binary.Base64.decodeBase64([B)[B:143 - ReplaceVariable base64Data -> CHUNK_SEPARATOR
   * Goal 68. Weak Mutation 3: org.apache.commons.codec.binary.Base64.encodeBase64([B)[B:182 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 69. Weak Mutation 4: org.apache.commons.codec.binary.Base64.encodeBase64([B)[B:182 - ReplaceConstant - 0 -> 1
   * Goal 70. Weak Mutation 5: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 71. Weak Mutation 6: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp Negation of isChunked
   * Goal 72. Weak Mutation 7: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp IINC 1 isChunked
   * Goal 73. Weak Mutation 8: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp IINC -1 isChunked
   * Goal 74. Weak Mutation 9: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - ReplaceConstant - 0 -> 1
   * Goal 75. Weak Mutation 10: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 76. Weak Mutation 11: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable isChunked -> urlSafe
   * Goal 77. Weak Mutation 12: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of isChunked
   * Goal 78. Weak Mutation 13: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC 1 isChunked
   * Goal 79. Weak Mutation 14: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC -1 isChunked
   * Goal 80. Weak Mutation 15: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable urlSafe -> isChunked
   * Goal 81. Weak Mutation 16: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of urlSafe
   * Goal 82. Weak Mutation 17: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 0
   * Goal 83. Weak Mutation 18: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 1
   * Goal 84. Weak Mutation 19: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -1
   * Goal 85. Weak Mutation 20: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 2147483646
   * Goal 86. Weak Mutation 21: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -2147483648
   * Goal 87. Weak Mutation 22: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 88. Weak Mutation 23: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator = null -> != null
   * Goal 89. Weak Mutation 24: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 90. Weak Mutation 25: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator != -> -1
   * Goal 91. Weak Mutation 28: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:239 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 92. Weak Mutation 66: org.apache.commons.codec.binary.Base64.encodeBase64Chunked([B)[B:264 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 93. Weak Mutation 67: org.apache.commons.codec.binary.Base64.encodeBase64Chunked([B)[B:264 - ReplaceConstant - 1 -> 0
   * Goal 94. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 95. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 96. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 97. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 98. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 99. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 100. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 101. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 102. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 103. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 104. Weak Mutation 348: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> <
   * Goal 105. Weak Mutation 365: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 0
   * Goal 106. Weak Mutation 366: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 1
   * Goal 107. Weak Mutation 367: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> -1
   * Goal 108. Weak Mutation 368: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 3
   * Goal 109. Weak Mutation 369: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 5
   * Goal 110. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 111. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 112. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 113. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 114. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 115. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 116. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 117. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 118. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 119. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 120. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 121. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 122. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 123. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 124. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 125. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 126. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 127. Weak Mutation 393: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 128. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 129. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 130. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 131. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 132. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 133. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 134. Weak Mutation 713: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> !=
   * Goal 135. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 136. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 137. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 138. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 139. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 140. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 141. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 142. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 143. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 144. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 145. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 146. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 147. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 148. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 149. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 150. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 151. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 152. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 153. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 154. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        Base64.decodeBase64("");
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // lineSeparator must not contain base64 characters: [\uFFFDg]
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 16
  /*
   * 22 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I3 Branch 1 IFNULL L238 - true
   * Goal 3. Branch org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: root-Branch in context: org.apache.commons.codec.binary.Base64:encodeBase64([BZZ)[B
   * Goal 4. [Output]: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:Null
   * Goal 5. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: Line 216
   * Goal 6. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 238
   * Goal 7. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 239
   * Goal 8. [METHOD] org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B
   * Goal 9. [METHODNOEX] org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B
   * Goal 10. Weak Mutation 10: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 11. Weak Mutation 12: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of isChunked
   * Goal 12. Weak Mutation 13: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC 1 isChunked
   * Goal 13. Weak Mutation 14: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC -1 isChunked
   * Goal 14. Weak Mutation 16: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of urlSafe
   * Goal 15. Weak Mutation 17: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 0
   * Goal 16. Weak Mutation 18: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 1
   * Goal 17. Weak Mutation 19: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -1
   * Goal 18. Weak Mutation 20: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 2147483646
   * Goal 19. Weak Mutation 21: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -2147483648
   * Goal 20. Weak Mutation 22: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 21. Weak Mutation 23: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator = null -> != null
   * Goal 22. Weak Mutation 28: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:239 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   */

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = Base64.encodeBase64((byte[]) null, false, false);
      assertNull(byteArray0);
  }

  //Test case number: 17
  /*
   * 29 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I3 Branch 1 IFNULL L238 - true
   * Goal 4. Branch org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B: root-Branch in context: org.apache.commons.codec.binary.Base64:encodeBase64([BZ)[B
   * Goal 5. [Output]: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:Null
   * Goal 6. org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B: Line 197
   * Goal 7. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: Line 216
   * Goal 8. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 238
   * Goal 9. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 239
   * Goal 10. [METHOD] org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B
   * Goal 11. [METHODNOEX] org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B
   * Goal 12. Weak Mutation 5: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 13. Weak Mutation 6: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp Negation of isChunked
   * Goal 14. Weak Mutation 7: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp IINC 1 isChunked
   * Goal 15. Weak Mutation 8: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp IINC -1 isChunked
   * Goal 16. Weak Mutation 9: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - ReplaceConstant - 0 -> 1
   * Goal 17. Weak Mutation 10: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 18. Weak Mutation 12: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of isChunked
   * Goal 19. Weak Mutation 13: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC 1 isChunked
   * Goal 20. Weak Mutation 14: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC -1 isChunked
   * Goal 21. Weak Mutation 16: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of urlSafe
   * Goal 22. Weak Mutation 17: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 0
   * Goal 23. Weak Mutation 18: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 1
   * Goal 24. Weak Mutation 19: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -1
   * Goal 25. Weak Mutation 20: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 2147483646
   * Goal 26. Weak Mutation 21: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -2147483648
   * Goal 27. Weak Mutation 22: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 28. Weak Mutation 23: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator = null -> != null
   * Goal 29. Weak Mutation 28: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:239 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   */

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = Base64.encodeBase64((byte[]) null, false);
      assertNull(byteArray0);
  }

  //Test case number: 18
  /*
   * 266 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.<init>(I[B)V: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B: root-Branch
   * Goal 4. org.apache.commons.codec.binary.Base64.<init>(I)V: root-Branch
   * Goal 5. org.apache.commons.codec.binary.Base64.<init>()V: root-Branch
   * Goal 6. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 7. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: root-Branch
   * Goal 8. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I3 Branch 1 IFNULL L238 - false
   * Goal 9. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I6 Branch 2 IFNE L238 - false
   * Goal 10. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 11. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 12. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 13. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true
   * Goal 14. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true
   * Goal 15. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - true
   * Goal 16. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - false
   * Goal 17. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - true
   * Goal 18. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - false
   * Goal 19. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I45 Branch 23 IF_ICMPNE L650 - true
   * Goal 20. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I45 Branch 23 IF_ICMPNE L650 - false
   * Goal 21. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I57 Branch 24 IFLT L655 - false
   * Goal 22. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I61 Branch 25 IF_ICMPGE L655 - false
   * Goal 23. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - true
   * Goal 24. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - false
   * Goal 25. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I160 Branch 29 IFEQ L672 - true
   * Goal 26. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 27. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 28. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 29. Branch org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B: root-Branch in context: org.apache.commons.codec.binary.Base64:encodeBase64([BZ)[B
   * Goal 30. Branch org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B: root-Branch in context: org.apache.commons.codec.binary.Base64:decodeBase64(Ljava/lang/String;)[B
   * Goal 31. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - true in context: 
   * Goal 32. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - false in context: 
   * Goal 33. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - true in context: 
   * Goal 34. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - false in context: 
   * Goal 35. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I45 Branch 23 IF_ICMPNE L650 - true in context: 
   * Goal 36. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I45 Branch 23 IF_ICMPNE L650 - false in context: 
   * Goal 37. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I57 Branch 24 IFLT L655 - false in context: 
   * Goal 38. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I61 Branch 25 IF_ICMPGE L655 - false in context: 
   * Goal 39. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - true in context: 
   * Goal 40. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I160 Branch 29 IFEQ L672 - true in context: 
   * Goal 41. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - false in context: 
   * Goal 42. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 43. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 44. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 45. [Output]: org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B:EmptyArray
   * Goal 46. [Output]: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:EmptyArray
   * Goal 47. org.apache.commons.codec.binary.Base64.<init>()V: Line 452
   * Goal 48. org.apache.commons.codec.binary.Base64.<init>()V: Line 453
   * Goal 49. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 494
   * Goal 50. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 495
   * Goal 51. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 521
   * Goal 52. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 522
   * Goal 53. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 54. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 55. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 56. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 57. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 58. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 59. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 60. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 601
   * Goal 61. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 602
   * Goal 62. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 63. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 64. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 65. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 641
   * Goal 66. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 642
   * Goal 67. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 644
   * Goal 68. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 647
   * Goal 69. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 648
   * Goal 70. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 649
   * Goal 71. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 650
   * Goal 72. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 652
   * Goal 73. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 653
   * Goal 74. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 655
   * Goal 75. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 656
   * Goal 76. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 657
   * Goal 77. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 672
   * Goal 78. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 697
   * Goal 79. org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B: Line 158
   * Goal 80. org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B: Line 197
   * Goal 81. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: Line 216
   * Goal 82. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 238
   * Goal 83. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 239
   * Goal 84. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 85. [METHOD] org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B
   * Goal 86. [METHOD] org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B
   * Goal 87. [METHODNOEX] org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B
   * Goal 88. [METHODNOEX] org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B
   * Goal 89. Weak Mutation 5: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 90. Weak Mutation 6: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp Negation of isChunked
   * Goal 91. Weak Mutation 7: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp IINC 1 isChunked
   * Goal 92. Weak Mutation 8: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp IINC -1 isChunked
   * Goal 93. Weak Mutation 9: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - ReplaceConstant - 0 -> 1
   * Goal 94. Weak Mutation 10: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 95. Weak Mutation 12: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of isChunked
   * Goal 96. Weak Mutation 13: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC 1 isChunked
   * Goal 97. Weak Mutation 14: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC -1 isChunked
   * Goal 98. Weak Mutation 16: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of urlSafe
   * Goal 99. Weak Mutation 17: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 0
   * Goal 100. Weak Mutation 18: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 1
   * Goal 101. Weak Mutation 19: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -1
   * Goal 102. Weak Mutation 20: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 2147483646
   * Goal 103. Weak Mutation 21: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -2147483648
   * Goal 104. Weak Mutation 22: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 105. Weak Mutation 23: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator = null -> != null
   * Goal 106. Weak Mutation 24: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 107. Weak Mutation 25: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator != -> -1
   * Goal 108. Weak Mutation 28: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:239 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 109. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 110. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 111. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 112. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 113. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 114. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 115. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 116. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 117. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 118. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 119. Weak Mutation 348: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> <
   * Goal 120. Weak Mutation 365: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 0
   * Goal 121. Weak Mutation 366: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 1
   * Goal 122. Weak Mutation 367: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> -1
   * Goal 123. Weak Mutation 368: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 3
   * Goal 124. Weak Mutation 369: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 5
   * Goal 125. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 126. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 127. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 128. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 129. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 130. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 131. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 132. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 133. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 134. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 135. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 136. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 137. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 138. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 139. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 140. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 141. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 142. Weak Mutation 393: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 143. Weak Mutation 394: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:641 - InsertUnaryOp Negation
   * Goal 144. Weak Mutation 395: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:641 - ReplaceComparisonOperator == -> !=
   * Goal 145. Weak Mutation 396: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 146. Weak Mutation 397: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 147. Weak Mutation 398: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> inPos
   * Goal 148. Weak Mutation 399: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> lineLength
   * Goal 149. Weak Mutation 400: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> EOF
   * Goal 150. Weak Mutation 401: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 151. Weak Mutation 402: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp Negation of inAvail
   * Goal 152. Weak Mutation 403: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp IINC 1 inAvail
   * Goal 153. Weak Mutation 404: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp IINC -1 inAvail
   * Goal 154. Weak Mutation 406: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceComparisonOperator >= -> ==
   * Goal 155. Weak Mutation 409: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceConstant - 0 -> 1
   * Goal 156. Weak Mutation 410: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 157. Weak Mutation 411: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> inAvail
   * Goal 158. Weak Mutation 413: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> MASK_8BITS
   * Goal 159. Weak Mutation 414: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 160. Weak Mutation 415: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> lineLength
   * Goal 161. Weak Mutation 416: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> EOF
   * Goal 162. Weak Mutation 417: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp Negation of i
   * Goal 163. Weak Mutation 418: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC 1 i
   * Goal 164. Weak Mutation 419: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC -1 i
   * Goal 165. Weak Mutation 420: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 166. Weak Mutation 421: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> inPos
   * Goal 167. Weak Mutation 422: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 168. Weak Mutation 423: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> i
   * Goal 169. Weak Mutation 424: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 170. Weak Mutation 425: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> lineLength
   * Goal 171. Weak Mutation 426: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> EOF
   * Goal 172. Weak Mutation 427: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp Negation of inAvail
   * Goal 173. Weak Mutation 428: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC 1 inAvail
   * Goal 174. Weak Mutation 429: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC -1 inAvail
   * Goal 175. Weak Mutation 430: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> -1
   * Goal 176. Weak Mutation 433: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> PEM_CHUNK_SIZE
   * Goal 177. Weak Mutation 434: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> MIME_CHUNK_SIZE
   * Goal 178. Weak Mutation 435: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> lineLength
   * Goal 179. Weak Mutation 436: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> EOF
   * Goal 180. Weak Mutation 437: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> MASK_8BITS
   * Goal 181. Weak Mutation 438: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp Negation
   * Goal 182. Weak Mutation 439: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp +1
   * Goal 183. Weak Mutation 440: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp -1
   * Goal 184. Weak Mutation 441: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable in -> CHUNK_SEPARATOR
   * Goal 185. Weak Mutation 442: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable in -> buffer
   * Goal 186. Weak Mutation 443: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> PEM_CHUNK_SIZE
   * Goal 187. Weak Mutation 444: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> inAvail
   * Goal 188. Weak Mutation 445: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> MASK_8BITS
   * Goal 189. Weak Mutation 447: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> MIME_CHUNK_SIZE
   * Goal 190. Weak Mutation 448: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> lineLength
   * Goal 191. Weak Mutation 449: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> EOF
   * Goal 192. Weak Mutation 450: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp Negation of inPos
   * Goal 193. Weak Mutation 451: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp IINC 1 inPos
   * Goal 194. Weak Mutation 452: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp IINC -1 inPos
   * Goal 195. Weak Mutation 453: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> inAvail
   * Goal 196. Weak Mutation 454: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> i
   * Goal 197. Weak Mutation 455: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> PAD
   * Goal 198. Weak Mutation 456: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> pad
   * Goal 199. Weak Mutation 457: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 200. Weak Mutation 458: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp Negation of b
   * Goal 201. Weak Mutation 459: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp IINC 1 b
   * Goal 202. Weak Mutation 460: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp IINC -1 b
   * Goal 203. Weak Mutation 463: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp Negation
   * Goal 204. Weak Mutation 464: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceComparisonOperator != -> -1
   * Goal 205. Weak Mutation 466: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceComparisonOperator != -> >
   * Goal 206. Weak Mutation 467: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:652 - ReplaceConstant - 1 -> 0
   * Goal 207. Weak Mutation 468: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD
   * Goal 208. Weak Mutation 469: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> pad
   * Goal 209. Weak Mutation 470: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 210. Weak Mutation 471: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp Negation of b
   * Goal 211. Weak Mutation 472: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC 1 b
   * Goal 212. Weak Mutation 473: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC -1 b
   * Goal 213. Weak Mutation 475: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceComparisonOperator < -> !=
   * Goal 214. Weak Mutation 477: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD
   * Goal 215. Weak Mutation 478: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> pad
   * Goal 216. Weak Mutation 479: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 217. Weak Mutation 480: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp Negation of b
   * Goal 218. Weak Mutation 481: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC 1 b
   * Goal 219. Weak Mutation 482: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC -1 b
   * Goal 220. Weak Mutation 483: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 221. Weak Mutation 484: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceComparisonOperator >= -> -1
   * Goal 222. Weak Mutation 487: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 223. Weak Mutation 488: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> PAD
   * Goal 224. Weak Mutation 489: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> pad
   * Goal 225. Weak Mutation 490: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 226. Weak Mutation 491: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp Negation of b
   * Goal 227. Weak Mutation 492: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp IINC 1 b
   * Goal 228. Weak Mutation 493: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp IINC -1 b
   * Goal 229. Weak Mutation 494: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> PEM_CHUNK_SIZE
   * Goal 230. Weak Mutation 495: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> inAvail
   * Goal 231. Weak Mutation 496: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> inPos
   * Goal 232. Weak Mutation 497: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> MASK_8BITS
   * Goal 233. Weak Mutation 498: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> i
   * Goal 234. Weak Mutation 499: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> MIME_CHUNK_SIZE
   * Goal 235. Weak Mutation 500: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> lineLength
   * Goal 236. Weak Mutation 502: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp Negation of result
   * Goal 237. Weak Mutation 503: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp IINC 1 result
   * Goal 238. Weak Mutation 504: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp IINC -1 result
   * Goal 239. Weak Mutation 505: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceComparisonOperator < -> -2
   * Goal 240. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 241. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 242. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 243. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 244. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 245. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 246. Weak Mutation 713: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> !=
   * Goal 247. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 248. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 249. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 250. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 251. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 252. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 253. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 254. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 255. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 256. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 257. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 258. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 259. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 260. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 261. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 262. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 263. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 264. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 265. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 266. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        Base64.decodeBase64(" =RtyHQfB");
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // lineSeparator must not contain base64 characters: [\uFFFDg]
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 19
  /*
   * 33 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.encodeBase64([B)[B: root-Branch
   * Goal 4. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I3 Branch 1 IFNULL L238 - true
   * Goal 5. Branch org.apache.commons.codec.binary.Base64.encodeBase64([B)[B: root-Branch in context: org.apache.commons.codec.binary.Base64:encodeBase64([B)[B
   * Goal 6. [Output]: org.apache.commons.codec.binary.Base64.encodeBase64([B)[B:Null
   * Goal 7. org.apache.commons.codec.binary.Base64.encodeBase64([B)[B: Line 182
   * Goal 8. org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B: Line 197
   * Goal 9. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: Line 216
   * Goal 10. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 238
   * Goal 11. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 239
   * Goal 12. [METHOD] org.apache.commons.codec.binary.Base64.encodeBase64([B)[B
   * Goal 13. [METHODNOEX] org.apache.commons.codec.binary.Base64.encodeBase64([B)[B
   * Goal 14. Weak Mutation 3: org.apache.commons.codec.binary.Base64.encodeBase64([B)[B:182 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 15. Weak Mutation 4: org.apache.commons.codec.binary.Base64.encodeBase64([B)[B:182 - ReplaceConstant - 0 -> 1
   * Goal 16. Weak Mutation 5: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 17. Weak Mutation 6: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp Negation of isChunked
   * Goal 18. Weak Mutation 7: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp IINC 1 isChunked
   * Goal 19. Weak Mutation 8: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp IINC -1 isChunked
   * Goal 20. Weak Mutation 9: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - ReplaceConstant - 0 -> 1
   * Goal 21. Weak Mutation 10: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 22. Weak Mutation 12: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of isChunked
   * Goal 23. Weak Mutation 13: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC 1 isChunked
   * Goal 24. Weak Mutation 14: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC -1 isChunked
   * Goal 25. Weak Mutation 16: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of urlSafe
   * Goal 26. Weak Mutation 17: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 0
   * Goal 27. Weak Mutation 18: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 1
   * Goal 28. Weak Mutation 19: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -1
   * Goal 29. Weak Mutation 20: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 2147483646
   * Goal 30. Weak Mutation 21: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -2147483648
   * Goal 31. Weak Mutation 22: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 32. Weak Mutation 23: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator = null -> != null
   * Goal 33. Weak Mutation 28: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:239 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   */

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = Base64.encodeBase64((byte[]) null);
      assertNull(byteArray0);
  }

  //Test case number: 20
  /*
   * 319 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.<init>(I[B)V: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.decodeBase64([B)[B: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.<init>(I)V: root-Branch
   * Goal 4. org.apache.commons.codec.binary.Base64.<init>()V: root-Branch
   * Goal 5. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 6. org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;: root-Branch
   * Goal 7. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 8. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 9. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 10. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true
   * Goal 11. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true
   * Goal 12. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - true
   * Goal 13. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - true
   * Goal 14. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - false
   * Goal 15. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - true
   * Goal 16. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - false
   * Goal 17. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I45 Branch 23 IF_ICMPNE L650 - true
   * Goal 18. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I57 Branch 24 IFLT L655 - false
   * Goal 19. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I61 Branch 25 IF_ICMPGE L655 - false
   * Goal 20. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - true
   * Goal 21. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - false
   * Goal 22. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I96 Branch 27 IFNE L660 - true
   * Goal 23. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - true
   * Goal 24. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - false
   * Goal 25. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I160 Branch 29 IFEQ L672 - false
   * Goal 26. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 30 TABLESWITCH L677 Case 1 - false
   * Goal 27. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 31 TABLESWITCH L677 Case 2 - false
   * Goal 28. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 32 TABLESWITCH L677 Case 3 - true
   * Goal 29. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 33 TABLESWITCH L677 Default-Case - false
   * Goal 30. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 31. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 32. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 33. org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 55 IFEQ L827 - true
   * Goal 34. Branch org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;: root-Branch in context: org.apache.commons.codec.binary.Base64:decodeInteger([B)Ljava/math/BigInteger;
   * Goal 35. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - true in context: 
   * Goal 36. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - true in context: 
   * Goal 37. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - false in context: 
   * Goal 38. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - true in context: 
   * Goal 39. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - false in context: 
   * Goal 40. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I45 Branch 23 IF_ICMPNE L650 - true in context: 
   * Goal 41. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I57 Branch 24 IFLT L655 - false in context: 
   * Goal 42. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I61 Branch 25 IF_ICMPGE L655 - false in context: 
   * Goal 43. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - false in context: 
   * Goal 44. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - true in context: 
   * Goal 45. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I96 Branch 27 IFNE L660 - true in context: 
   * Goal 46. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I160 Branch 29 IFEQ L672 - false in context: 
   * Goal 47. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - true in context: 
   * Goal 48. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - false in context: 
   * Goal 49. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 31 TABLESWITCH L677 Case 2 - false in context: 
   * Goal 50. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 30 TABLESWITCH L677 Case 1 - false in context: 
   * Goal 51. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 32 TABLESWITCH L677 Case 3 - true in context: 
   * Goal 52. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 33 TABLESWITCH L677 Default-Case - false in context: 
   * Goal 53. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 54. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 55. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 56. Branch org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 55 IFEQ L827 - true in context: 
   * Goal 57. [Output]: org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;:NonNull:java.math.BigInteger:byteValue()B:Negative
   * Goal 58. [Output]: org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;:NonNull:java.math.BigInteger:shortValue()S:Negative
   * Goal 59. org.apache.commons.codec.binary.Base64.<init>()V: Line 452
   * Goal 60. org.apache.commons.codec.binary.Base64.<init>()V: Line 453
   * Goal 61. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 494
   * Goal 62. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 495
   * Goal 63. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 521
   * Goal 64. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 522
   * Goal 65. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 66. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 67. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 68. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 69. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 70. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 71. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 72. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 601
   * Goal 73. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 602
   * Goal 74. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 75. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 76. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 77. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 641
   * Goal 78. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 644
   * Goal 79. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 645
   * Goal 80. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 647
   * Goal 81. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 648
   * Goal 82. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 649
   * Goal 83. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 650
   * Goal 84. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 655
   * Goal 85. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 656
   * Goal 86. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 657
   * Goal 87. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 658
   * Goal 88. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 659
   * Goal 89. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 660
   * Goal 90. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 672
   * Goal 91. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 673
   * Goal 92. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 677
   * Goal 93. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 688
   * Goal 94. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 689
   * Goal 95. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 690
   * Goal 96. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 691
   * Goal 97. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 692
   * Goal 98. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 697
   * Goal 99. org.apache.commons.codec.binary.Base64.decodeBase64([B)[B: Line 143
   * Goal 100. org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;: Line 171
   * Goal 101. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 102. org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 827
   * Goal 103. org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 832
   * Goal 104. [METHOD] org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;
   * Goal 105. [METHODNOEX] org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;
   * Goal 106. Weak Mutation 0: org.apache.commons.codec.binary.Base64.decodeBase64([B)[B:143 - ReplaceVariable base64Data -> CHUNK_SEPARATOR
   * Goal 107. Weak Mutation 1: org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;:171 - ReplaceConstant - 1 -> 0
   * Goal 108. Weak Mutation 2: org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;:171 - ReplaceVariable pArray -> CHUNK_SEPARATOR
   * Goal 109. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 110. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 111. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 112. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 113. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 114. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 115. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 116. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 117. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 118. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 119. Weak Mutation 348: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> <
   * Goal 120. Weak Mutation 365: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 0
   * Goal 121. Weak Mutation 366: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 1
   * Goal 122. Weak Mutation 367: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> -1
   * Goal 123. Weak Mutation 368: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 3
   * Goal 124. Weak Mutation 369: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 5
   * Goal 125. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 126. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 127. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 128. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 129. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 130. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 131. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 132. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 133. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 134. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 135. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 136. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 137. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 138. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 139. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 140. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 141. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 142. Weak Mutation 393: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 143. Weak Mutation 394: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:641 - InsertUnaryOp Negation
   * Goal 144. Weak Mutation 395: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:641 - ReplaceComparisonOperator == -> !=
   * Goal 145. Weak Mutation 396: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 146. Weak Mutation 397: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 147. Weak Mutation 398: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> inPos
   * Goal 148. Weak Mutation 399: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> lineLength
   * Goal 149. Weak Mutation 400: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> EOF
   * Goal 150. Weak Mutation 401: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 151. Weak Mutation 402: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp Negation of inAvail
   * Goal 152. Weak Mutation 403: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp IINC 1 inAvail
   * Goal 153. Weak Mutation 404: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp IINC -1 inAvail
   * Goal 154. Weak Mutation 405: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceComparisonOperator >= -> -1
   * Goal 155. Weak Mutation 406: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceComparisonOperator >= -> ==
   * Goal 156. Weak Mutation 408: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:645 - ReplaceConstant - 1 -> 0
   * Goal 157. Weak Mutation 409: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceConstant - 0 -> 1
   * Goal 158. Weak Mutation 410: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 159. Weak Mutation 411: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> inAvail
   * Goal 160. Weak Mutation 413: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> MASK_8BITS
   * Goal 161. Weak Mutation 414: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 162. Weak Mutation 415: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> lineLength
   * Goal 163. Weak Mutation 416: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> EOF
   * Goal 164. Weak Mutation 417: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp Negation of i
   * Goal 165. Weak Mutation 418: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC 1 i
   * Goal 166. Weak Mutation 419: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC -1 i
   * Goal 167. Weak Mutation 420: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 168. Weak Mutation 421: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> inPos
   * Goal 169. Weak Mutation 422: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 170. Weak Mutation 423: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> i
   * Goal 171. Weak Mutation 424: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 172. Weak Mutation 425: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> lineLength
   * Goal 173. Weak Mutation 426: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> EOF
   * Goal 174. Weak Mutation 427: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp Negation of inAvail
   * Goal 175. Weak Mutation 428: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC 1 inAvail
   * Goal 176. Weak Mutation 429: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC -1 inAvail
   * Goal 177. Weak Mutation 430: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> -1
   * Goal 178. Weak Mutation 431: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> >
   * Goal 179. Weak Mutation 432: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> ==
   * Goal 180. Weak Mutation 433: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> PEM_CHUNK_SIZE
   * Goal 181. Weak Mutation 434: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> MIME_CHUNK_SIZE
   * Goal 182. Weak Mutation 435: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> lineLength
   * Goal 183. Weak Mutation 436: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> EOF
   * Goal 184. Weak Mutation 437: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> MASK_8BITS
   * Goal 185. Weak Mutation 438: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp Negation
   * Goal 186. Weak Mutation 439: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp +1
   * Goal 187. Weak Mutation 440: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp -1
   * Goal 188. Weak Mutation 441: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable in -> CHUNK_SEPARATOR
   * Goal 189. Weak Mutation 442: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable in -> buffer
   * Goal 190. Weak Mutation 443: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> PEM_CHUNK_SIZE
   * Goal 191. Weak Mutation 444: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> inAvail
   * Goal 192. Weak Mutation 445: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> MASK_8BITS
   * Goal 193. Weak Mutation 447: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> MIME_CHUNK_SIZE
   * Goal 194. Weak Mutation 448: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> lineLength
   * Goal 195. Weak Mutation 449: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> EOF
   * Goal 196. Weak Mutation 450: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp Negation of inPos
   * Goal 197. Weak Mutation 451: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp IINC 1 inPos
   * Goal 198. Weak Mutation 452: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp IINC -1 inPos
   * Goal 199. Weak Mutation 453: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> inAvail
   * Goal 200. Weak Mutation 454: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> i
   * Goal 201. Weak Mutation 455: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> PAD
   * Goal 202. Weak Mutation 456: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> pad
   * Goal 203. Weak Mutation 457: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 204. Weak Mutation 458: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp Negation of b
   * Goal 205. Weak Mutation 459: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp IINC 1 b
   * Goal 206. Weak Mutation 460: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp IINC -1 b
   * Goal 207. Weak Mutation 463: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp Negation
   * Goal 208. Weak Mutation 465: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceComparisonOperator != -> <
   * Goal 209. Weak Mutation 466: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceComparisonOperator != -> >
   * Goal 210. Weak Mutation 468: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD
   * Goal 211. Weak Mutation 469: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> pad
   * Goal 212. Weak Mutation 470: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 213. Weak Mutation 471: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp Negation of b
   * Goal 214. Weak Mutation 472: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC 1 b
   * Goal 215. Weak Mutation 473: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC -1 b
   * Goal 216. Weak Mutation 475: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceComparisonOperator < -> !=
   * Goal 217. Weak Mutation 476: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceComparisonOperator < -> <=
   * Goal 218. Weak Mutation 477: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD
   * Goal 219. Weak Mutation 478: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> pad
   * Goal 220. Weak Mutation 479: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 221. Weak Mutation 480: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp Negation of b
   * Goal 222. Weak Mutation 481: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC 1 b
   * Goal 223. Weak Mutation 482: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC -1 b
   * Goal 224. Weak Mutation 483: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 225. Weak Mutation 484: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceComparisonOperator >= -> -1
   * Goal 226. Weak Mutation 487: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 227. Weak Mutation 488: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> PAD
   * Goal 228. Weak Mutation 489: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> pad
   * Goal 229. Weak Mutation 490: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 230. Weak Mutation 491: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp Negation of b
   * Goal 231. Weak Mutation 492: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp IINC 1 b
   * Goal 232. Weak Mutation 493: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp IINC -1 b
   * Goal 233. Weak Mutation 494: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> PEM_CHUNK_SIZE
   * Goal 234. Weak Mutation 495: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> inAvail
   * Goal 235. Weak Mutation 496: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> inPos
   * Goal 236. Weak Mutation 497: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> MASK_8BITS
   * Goal 237. Weak Mutation 498: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> i
   * Goal 238. Weak Mutation 499: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> MIME_CHUNK_SIZE
   * Goal 239. Weak Mutation 500: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> lineLength
   * Goal 240. Weak Mutation 501: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> EOF
   * Goal 241. Weak Mutation 502: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp Negation of result
   * Goal 242. Weak Mutation 503: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp IINC 1 result
   * Goal 243. Weak Mutation 504: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp IINC -1 result
   * Goal 244. Weak Mutation 505: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceComparisonOperator < -> -2
   * Goal 245. Weak Mutation 506: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceComparisonOperator < -> !=
   * Goal 246. Weak Mutation 508: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - InsertUnaryOp Negation
   * Goal 247. Weak Mutation 509: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - InsertUnaryOp +1
   * Goal 248. Weak Mutation 510: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - InsertUnaryOp -1
   * Goal 249. Weak Mutation 511: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 1 -> 0
   * Goal 250. Weak Mutation 512: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> %
   * Goal 251. Weak Mutation 513: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> -
   * Goal 252. Weak Mutation 514: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> *
   * Goal 253. Weak Mutation 515: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> /
   * Goal 254. Weak Mutation 516: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 0
   * Goal 255. Weak Mutation 517: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 1
   * Goal 256. Weak Mutation 518: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> -1
   * Goal 257. Weak Mutation 519: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 3
   * Goal 258. Weak Mutation 520: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 5
   * Goal 259. Weak Mutation 521: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> +
   * Goal 260. Weak Mutation 522: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> -
   * Goal 261. Weak Mutation 523: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> *
   * Goal 262. Weak Mutation 524: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> /
   * Goal 263. Weak Mutation 525: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp Negation
   * Goal 264. Weak Mutation 526: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp +1
   * Goal 265. Weak Mutation 527: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp -1
   * Goal 266. Weak Mutation 528: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 0
   * Goal 267. Weak Mutation 529: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 1
   * Goal 268. Weak Mutation 530: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> -1
   * Goal 269. Weak Mutation 531: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 5
   * Goal 270. Weak Mutation 532: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 7
   * Goal 271. Weak Mutation 533: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceBitwiseOperator << I -> >> I
   * Goal 272. Weak Mutation 534: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceBitwiseOperator << I -> >>> I
   * Goal 273. Weak Mutation 535: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> PEM_CHUNK_SIZE
   * Goal 274. Weak Mutation 536: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> inAvail
   * Goal 275. Weak Mutation 537: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> inPos
   * Goal 276. Weak Mutation 538: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> MASK_8BITS
   * Goal 277. Weak Mutation 539: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> i
   * Goal 278. Weak Mutation 540: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> MIME_CHUNK_SIZE
   * Goal 279. Weak Mutation 541: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> lineLength
   * Goal 280. Weak Mutation 542: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> EOF
   * Goal 281. Weak Mutation 543: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp Negation of result
   * Goal 282. Weak Mutation 544: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp IINC 1 result
   * Goal 283. Weak Mutation 545: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp IINC -1 result
   * Goal 284. Weak Mutation 546: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> %
   * Goal 285. Weak Mutation 547: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> -
   * Goal 286. Weak Mutation 548: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> *
   * Goal 287. Weak Mutation 549: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> /
   * Goal 288. Weak Mutation 550: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - InsertUnaryOp Negation
   * Goal 289. Weak Mutation 551: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - InsertUnaryOp +1
   * Goal 290. Weak Mutation 552: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - InsertUnaryOp -1
   * Goal 291. Weak Mutation 554: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - ReplaceComparisonOperator != -> <
   * Goal 292. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 293. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 294. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 295. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 296. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 297. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 298. Weak Mutation 713: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> !=
   * Goal 299. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 300. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 301. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 302. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 303. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 304. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 305. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 306. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 307. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 308. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 309. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 310. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 311. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 312. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 313. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 314. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 315. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 316. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 317. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 318. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   * Goal 319. Weak Mutation 745: org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:827 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)56;
      byteArray0[4] = (byte)53;
      byteArray0[6] = (byte)98;
      // Undeclared exception!
      try { 
        Base64.decodeInteger(byteArray0);
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // lineSeparator must not contain base64 characters: [\uFFFDg]
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 21
  /*
   * 313 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.<init>(I[B)V: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.decodeBase64([B)[B: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.<init>(I)V: root-Branch
   * Goal 4. org.apache.commons.codec.binary.Base64.<init>()V: root-Branch
   * Goal 5. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 6. org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;: root-Branch
   * Goal 7. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 8. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 9. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 10. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true
   * Goal 11. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true
   * Goal 12. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - true
   * Goal 13. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - true
   * Goal 14. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - false
   * Goal 15. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - true
   * Goal 16. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - false
   * Goal 17. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I45 Branch 23 IF_ICMPNE L650 - true
   * Goal 18. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I57 Branch 24 IFLT L655 - false
   * Goal 19. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I61 Branch 25 IF_ICMPGE L655 - false
   * Goal 20. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - false
   * Goal 21. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I96 Branch 27 IFNE L660 - true
   * Goal 22. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - true
   * Goal 23. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - false
   * Goal 24. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I160 Branch 29 IFEQ L672 - false
   * Goal 25. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 30 TABLESWITCH L677 Case 1 - false
   * Goal 26. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 31 TABLESWITCH L677 Case 2 - true
   * Goal 27. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 32 TABLESWITCH L677 Case 3 - false
   * Goal 28. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 33 TABLESWITCH L677 Default-Case - false
   * Goal 29. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 30. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 31. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 32. org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 55 IFEQ L827 - true
   * Goal 33. Branch org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;: root-Branch in context: org.apache.commons.codec.binary.Base64:decodeInteger([B)Ljava/math/BigInteger;
   * Goal 34. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - true in context: 
   * Goal 35. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - true in context: 
   * Goal 36. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - false in context: 
   * Goal 37. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - true in context: 
   * Goal 38. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - false in context: 
   * Goal 39. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I45 Branch 23 IF_ICMPNE L650 - true in context: 
   * Goal 40. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I57 Branch 24 IFLT L655 - false in context: 
   * Goal 41. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I61 Branch 25 IF_ICMPGE L655 - false in context: 
   * Goal 42. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - false in context: 
   * Goal 43. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I96 Branch 27 IFNE L660 - true in context: 
   * Goal 44. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I160 Branch 29 IFEQ L672 - false in context: 
   * Goal 45. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - true in context: 
   * Goal 46. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - false in context: 
   * Goal 47. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 31 TABLESWITCH L677 Case 2 - true in context: 
   * Goal 48. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 32 TABLESWITCH L677 Case 3 - false in context: 
   * Goal 49. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 30 TABLESWITCH L677 Case 1 - false in context: 
   * Goal 50. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 33 TABLESWITCH L677 Default-Case - false in context: 
   * Goal 51. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 52. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 53. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 54. Branch org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 55 IFEQ L827 - true in context: 
   * Goal 55. [Output]: org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;:NonNull:java.math.BigInteger:byteValue()B:Positive
   * Goal 56. [Output]: org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;:NonNull:java.math.BigInteger:shortValue()S:Positive
   * Goal 57. org.apache.commons.codec.binary.Base64.<init>()V: Line 452
   * Goal 58. org.apache.commons.codec.binary.Base64.<init>()V: Line 453
   * Goal 59. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 494
   * Goal 60. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 495
   * Goal 61. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 521
   * Goal 62. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 522
   * Goal 63. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 64. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 65. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 66. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 67. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 68. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 69. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 70. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 601
   * Goal 71. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 602
   * Goal 72. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 73. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 74. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 75. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 641
   * Goal 76. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 644
   * Goal 77. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 645
   * Goal 78. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 647
   * Goal 79. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 648
   * Goal 80. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 649
   * Goal 81. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 650
   * Goal 82. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 655
   * Goal 83. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 656
   * Goal 84. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 657
   * Goal 85. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 658
   * Goal 86. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 659
   * Goal 87. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 660
   * Goal 88. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 672
   * Goal 89. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 673
   * Goal 90. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 677
   * Goal 91. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 683
   * Goal 92. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 684
   * Goal 93. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 685
   * Goal 94. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 686
   * Goal 95. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 697
   * Goal 96. org.apache.commons.codec.binary.Base64.decodeBase64([B)[B: Line 143
   * Goal 97. org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;: Line 171
   * Goal 98. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 99. org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 827
   * Goal 100. org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 832
   * Goal 101. [METHOD] org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;
   * Goal 102. [METHODNOEX] org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;
   * Goal 103. Weak Mutation 0: org.apache.commons.codec.binary.Base64.decodeBase64([B)[B:143 - ReplaceVariable base64Data -> CHUNK_SEPARATOR
   * Goal 104. Weak Mutation 1: org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;:171 - ReplaceConstant - 1 -> 0
   * Goal 105. Weak Mutation 2: org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;:171 - ReplaceVariable pArray -> CHUNK_SEPARATOR
   * Goal 106. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 107. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 108. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 109. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 110. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 111. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 112. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 113. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 114. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 115. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 116. Weak Mutation 348: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> <
   * Goal 117. Weak Mutation 365: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 0
   * Goal 118. Weak Mutation 366: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 1
   * Goal 119. Weak Mutation 367: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> -1
   * Goal 120. Weak Mutation 368: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 3
   * Goal 121. Weak Mutation 369: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 5
   * Goal 122. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 123. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 124. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 125. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 126. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 127. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 128. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 129. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 130. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 131. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 132. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 133. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 134. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 135. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 136. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 137. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 138. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 139. Weak Mutation 393: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 140. Weak Mutation 394: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:641 - InsertUnaryOp Negation
   * Goal 141. Weak Mutation 395: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:641 - ReplaceComparisonOperator == -> !=
   * Goal 142. Weak Mutation 396: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 143. Weak Mutation 397: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 144. Weak Mutation 398: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> inPos
   * Goal 145. Weak Mutation 399: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> lineLength
   * Goal 146. Weak Mutation 400: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> EOF
   * Goal 147. Weak Mutation 401: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 148. Weak Mutation 402: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp Negation of inAvail
   * Goal 149. Weak Mutation 403: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp IINC 1 inAvail
   * Goal 150. Weak Mutation 404: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp IINC -1 inAvail
   * Goal 151. Weak Mutation 405: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceComparisonOperator >= -> -1
   * Goal 152. Weak Mutation 406: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceComparisonOperator >= -> ==
   * Goal 153. Weak Mutation 408: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:645 - ReplaceConstant - 1 -> 0
   * Goal 154. Weak Mutation 409: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceConstant - 0 -> 1
   * Goal 155. Weak Mutation 410: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 156. Weak Mutation 411: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> inAvail
   * Goal 157. Weak Mutation 413: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> MASK_8BITS
   * Goal 158. Weak Mutation 414: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 159. Weak Mutation 415: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> lineLength
   * Goal 160. Weak Mutation 416: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> EOF
   * Goal 161. Weak Mutation 417: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp Negation of i
   * Goal 162. Weak Mutation 418: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC 1 i
   * Goal 163. Weak Mutation 419: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC -1 i
   * Goal 164. Weak Mutation 420: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 165. Weak Mutation 421: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> inPos
   * Goal 166. Weak Mutation 422: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 167. Weak Mutation 423: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> i
   * Goal 168. Weak Mutation 424: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 169. Weak Mutation 425: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> lineLength
   * Goal 170. Weak Mutation 426: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> EOF
   * Goal 171. Weak Mutation 427: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp Negation of inAvail
   * Goal 172. Weak Mutation 428: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC 1 inAvail
   * Goal 173. Weak Mutation 429: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC -1 inAvail
   * Goal 174. Weak Mutation 430: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> -1
   * Goal 175. Weak Mutation 431: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> >
   * Goal 176. Weak Mutation 432: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> ==
   * Goal 177. Weak Mutation 433: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> PEM_CHUNK_SIZE
   * Goal 178. Weak Mutation 434: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> MIME_CHUNK_SIZE
   * Goal 179. Weak Mutation 435: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> lineLength
   * Goal 180. Weak Mutation 436: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> EOF
   * Goal 181. Weak Mutation 437: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> MASK_8BITS
   * Goal 182. Weak Mutation 438: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp Negation
   * Goal 183. Weak Mutation 439: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp +1
   * Goal 184. Weak Mutation 440: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp -1
   * Goal 185. Weak Mutation 441: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable in -> CHUNK_SEPARATOR
   * Goal 186. Weak Mutation 442: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable in -> buffer
   * Goal 187. Weak Mutation 443: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> PEM_CHUNK_SIZE
   * Goal 188. Weak Mutation 444: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> inAvail
   * Goal 189. Weak Mutation 445: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> MASK_8BITS
   * Goal 190. Weak Mutation 447: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> MIME_CHUNK_SIZE
   * Goal 191. Weak Mutation 448: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> lineLength
   * Goal 192. Weak Mutation 449: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> EOF
   * Goal 193. Weak Mutation 450: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp Negation of inPos
   * Goal 194. Weak Mutation 451: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp IINC 1 inPos
   * Goal 195. Weak Mutation 452: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp IINC -1 inPos
   * Goal 196. Weak Mutation 453: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> inAvail
   * Goal 197. Weak Mutation 454: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> i
   * Goal 198. Weak Mutation 455: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> PAD
   * Goal 199. Weak Mutation 456: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> pad
   * Goal 200. Weak Mutation 457: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 201. Weak Mutation 458: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp Negation of b
   * Goal 202. Weak Mutation 459: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp IINC 1 b
   * Goal 203. Weak Mutation 460: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp IINC -1 b
   * Goal 204. Weak Mutation 463: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp Negation
   * Goal 205. Weak Mutation 465: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceComparisonOperator != -> <
   * Goal 206. Weak Mutation 468: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD
   * Goal 207. Weak Mutation 469: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> pad
   * Goal 208. Weak Mutation 470: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 209. Weak Mutation 471: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp Negation of b
   * Goal 210. Weak Mutation 472: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC 1 b
   * Goal 211. Weak Mutation 473: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC -1 b
   * Goal 212. Weak Mutation 475: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceComparisonOperator < -> !=
   * Goal 213. Weak Mutation 477: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD
   * Goal 214. Weak Mutation 478: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> pad
   * Goal 215. Weak Mutation 479: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 216. Weak Mutation 480: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp Negation of b
   * Goal 217. Weak Mutation 481: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC 1 b
   * Goal 218. Weak Mutation 482: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC -1 b
   * Goal 219. Weak Mutation 483: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 220. Weak Mutation 484: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceComparisonOperator >= -> -1
   * Goal 221. Weak Mutation 487: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 222. Weak Mutation 488: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> PAD
   * Goal 223. Weak Mutation 489: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> pad
   * Goal 224. Weak Mutation 490: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 225. Weak Mutation 491: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp Negation of b
   * Goal 226. Weak Mutation 492: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp IINC 1 b
   * Goal 227. Weak Mutation 493: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp IINC -1 b
   * Goal 228. Weak Mutation 494: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> PEM_CHUNK_SIZE
   * Goal 229. Weak Mutation 495: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> inAvail
   * Goal 230. Weak Mutation 496: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> inPos
   * Goal 231. Weak Mutation 497: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> MASK_8BITS
   * Goal 232. Weak Mutation 498: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> i
   * Goal 233. Weak Mutation 499: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> MIME_CHUNK_SIZE
   * Goal 234. Weak Mutation 500: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> lineLength
   * Goal 235. Weak Mutation 501: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> EOF
   * Goal 236. Weak Mutation 502: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp Negation of result
   * Goal 237. Weak Mutation 503: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp IINC 1 result
   * Goal 238. Weak Mutation 504: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp IINC -1 result
   * Goal 239. Weak Mutation 506: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceComparisonOperator < -> !=
   * Goal 240. Weak Mutation 508: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - InsertUnaryOp Negation
   * Goal 241. Weak Mutation 509: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - InsertUnaryOp +1
   * Goal 242. Weak Mutation 510: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - InsertUnaryOp -1
   * Goal 243. Weak Mutation 511: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 1 -> 0
   * Goal 244. Weak Mutation 512: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> %
   * Goal 245. Weak Mutation 513: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> -
   * Goal 246. Weak Mutation 514: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> *
   * Goal 247. Weak Mutation 515: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> /
   * Goal 248. Weak Mutation 516: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 0
   * Goal 249. Weak Mutation 517: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 1
   * Goal 250. Weak Mutation 518: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> -1
   * Goal 251. Weak Mutation 519: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 3
   * Goal 252. Weak Mutation 520: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 5
   * Goal 253. Weak Mutation 521: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> +
   * Goal 254. Weak Mutation 522: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> -
   * Goal 255. Weak Mutation 523: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> *
   * Goal 256. Weak Mutation 524: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> /
   * Goal 257. Weak Mutation 525: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp Negation
   * Goal 258. Weak Mutation 526: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp +1
   * Goal 259. Weak Mutation 527: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp -1
   * Goal 260. Weak Mutation 528: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 0
   * Goal 261. Weak Mutation 529: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 1
   * Goal 262. Weak Mutation 530: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> -1
   * Goal 263. Weak Mutation 531: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 5
   * Goal 264. Weak Mutation 532: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 7
   * Goal 265. Weak Mutation 533: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceBitwiseOperator << I -> >> I
   * Goal 266. Weak Mutation 534: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceBitwiseOperator << I -> >>> I
   * Goal 267. Weak Mutation 535: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> PEM_CHUNK_SIZE
   * Goal 268. Weak Mutation 536: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> inAvail
   * Goal 269. Weak Mutation 537: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> inPos
   * Goal 270. Weak Mutation 538: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> MASK_8BITS
   * Goal 271. Weak Mutation 539: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> i
   * Goal 272. Weak Mutation 540: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> MIME_CHUNK_SIZE
   * Goal 273. Weak Mutation 541: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> lineLength
   * Goal 274. Weak Mutation 542: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> EOF
   * Goal 275. Weak Mutation 543: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp Negation of result
   * Goal 276. Weak Mutation 544: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp IINC 1 result
   * Goal 277. Weak Mutation 545: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp IINC -1 result
   * Goal 278. Weak Mutation 546: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> %
   * Goal 279. Weak Mutation 547: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> -
   * Goal 280. Weak Mutation 548: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> *
   * Goal 281. Weak Mutation 549: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> /
   * Goal 282. Weak Mutation 550: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - InsertUnaryOp Negation
   * Goal 283. Weak Mutation 551: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - InsertUnaryOp +1
   * Goal 284. Weak Mutation 552: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - InsertUnaryOp -1
   * Goal 285. Weak Mutation 554: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - ReplaceComparisonOperator != -> <
   * Goal 286. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 287. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 288. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 289. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 290. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 291. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 292. Weak Mutation 713: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> !=
   * Goal 293. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 294. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 295. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 296. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 297. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 298. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 299. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 300. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 301. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 302. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 303. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 304. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 305. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 306. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 307. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 308. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 309. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 310. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 311. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 312. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   * Goal 313. Weak Mutation 745: org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:827 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)88;
      byteArray0[1] = (byte)88;
      // Undeclared exception!
      try { 
        Base64.decodeInteger(byteArray0);
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // lineSeparator must not contain base64 characters: [\uFFFDg]
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 22
  /*
   * 375 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.<init>(I[B)V: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.decodeBase64([B)[B: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B: root-Branch
   * Goal 4. org.apache.commons.codec.binary.Base64.<init>(I)V: root-Branch
   * Goal 5. org.apache.commons.codec.binary.Base64.<init>()V: root-Branch
   * Goal 6. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 7. org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;: root-Branch
   * Goal 8. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 9. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 10. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 11. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true
   * Goal 12. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true
   * Goal 13. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - true
   * Goal 14. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - false
   * Goal 15. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - true
   * Goal 16. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - false
   * Goal 17. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - true
   * Goal 18. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - false
   * Goal 19. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I45 Branch 23 IF_ICMPNE L650 - true
   * Goal 20. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I45 Branch 23 IF_ICMPNE L650 - false
   * Goal 21. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I57 Branch 24 IFLT L655 - true
   * Goal 22. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I57 Branch 24 IFLT L655 - false
   * Goal 23. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I61 Branch 25 IF_ICMPGE L655 - true
   * Goal 24. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I61 Branch 25 IF_ICMPGE L655 - false
   * Goal 25. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - true
   * Goal 26. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - false
   * Goal 27. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I96 Branch 27 IFNE L660 - true
   * Goal 28. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I96 Branch 27 IFNE L660 - false
   * Goal 29. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - true
   * Goal 30. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - false
   * Goal 31. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I160 Branch 29 IFEQ L672 - false
   * Goal 32. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 30 TABLESWITCH L677 Case 1 - true
   * Goal 33. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 30 TABLESWITCH L677 Case 1 - false
   * Goal 34. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 31 TABLESWITCH L677 Case 2 - true
   * Goal 35. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 31 TABLESWITCH L677 Case 2 - false
   * Goal 36. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 32 TABLESWITCH L677 Case 3 - false
   * Goal 37. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 33 TABLESWITCH L677 Default-Case - false
   * Goal 38. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 39. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 40. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 41. org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 55 IFEQ L827 - true
   * Goal 42. org.apache.commons.codec.binary.Base64.validateTrailingCharacter()V: I4 Branch 57 IFEQ L841 - true
   * Goal 43. Branch org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;: root-Branch in context: org.apache.commons.codec.binary.Base64:decodeInteger([B)Ljava/math/BigInteger;
   * Goal 44. Branch org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B: root-Branch in context: org.apache.commons.codec.binary.Base64:decodeBase64(Ljava/lang/String;)[B
   * Goal 45. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - true in context: 
   * Goal 46. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - false in context: 
   * Goal 47. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - true in context: 
   * Goal 48. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - false in context: 
   * Goal 49. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I45 Branch 23 IF_ICMPNE L650 - true in context: 
   * Goal 50. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I45 Branch 23 IF_ICMPNE L650 - false in context: 
   * Goal 51. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I61 Branch 25 IF_ICMPGE L655 - true in context: 
   * Goal 52. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I57 Branch 24 IFLT L655 - false in context: 
   * Goal 53. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I61 Branch 25 IF_ICMPGE L655 - false in context: 
   * Goal 54. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - false in context: 
   * Goal 55. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - true in context: 
   * Goal 56. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I96 Branch 27 IFNE L660 - true in context: 
   * Goal 57. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I96 Branch 27 IFNE L660 - false in context: 
   * Goal 58. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I160 Branch 29 IFEQ L672 - false in context: 
   * Goal 59. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - false in context: 
   * Goal 60. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 32 TABLESWITCH L677 Case 3 - false in context: 
   * Goal 61. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 31 TABLESWITCH L677 Case 2 - false in context: 
   * Goal 62. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 33 TABLESWITCH L677 Default-Case - false in context: 
   * Goal 63. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 30 TABLESWITCH L677 Case 1 - true in context: 
   * Goal 64. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 65. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 66. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 67. Branch org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 55 IFEQ L827 - true in context: 
   * Goal 68. Branch org.apache.commons.codec.binary.Base64.validateTrailingCharacter()V: I4 Branch 57 IFEQ L841 - true in context: 
   * Goal 69. [Output]: org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B:NonEmptyArray
   * Goal 70. [Output]: org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;:NonNull:java.math.BigInteger:byteValue()B:Negative
   * Goal 71. [Output]: org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;:NonNull:java.math.BigInteger:shortValue()S:Positive
   * Goal 72. org.apache.commons.codec.binary.Base64.<init>()V: Line 452
   * Goal 73. org.apache.commons.codec.binary.Base64.<init>()V: Line 453
   * Goal 74. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 494
   * Goal 75. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 495
   * Goal 76. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 521
   * Goal 77. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 522
   * Goal 78. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 79. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 80. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 81. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 82. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 83. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 84. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 85. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 601
   * Goal 86. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 602
   * Goal 87. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 88. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 89. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 90. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 641
   * Goal 91. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 642
   * Goal 92. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 644
   * Goal 93. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 645
   * Goal 94. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 647
   * Goal 95. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 648
   * Goal 96. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 649
   * Goal 97. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 650
   * Goal 98. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 652
   * Goal 99. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 653
   * Goal 100. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 655
   * Goal 101. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 656
   * Goal 102. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 657
   * Goal 103. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 658
   * Goal 104. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 659
   * Goal 105. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 660
   * Goal 106. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 661
   * Goal 107. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 662
   * Goal 108. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 663
   * Goal 109. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 672
   * Goal 110. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 673
   * Goal 111. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 677
   * Goal 112. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 680
   * Goal 113. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 681
   * Goal 114. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 683
   * Goal 115. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 684
   * Goal 116. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 685
   * Goal 117. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 686
   * Goal 118. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 697
   * Goal 119. org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B: Line 158
   * Goal 120. org.apache.commons.codec.binary.Base64.decodeBase64([B)[B: Line 143
   * Goal 121. org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;: Line 171
   * Goal 122. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 123. org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 827
   * Goal 124. org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 832
   * Goal 125. org.apache.commons.codec.binary.Base64.validateTrailingCharacter()V: Line 841
   * Goal 126. org.apache.commons.codec.binary.Base64.validateTrailingCharacter()V: Line 846
   * Goal 127. [METHOD] org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B
   * Goal 128. [METHOD] org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;
   * Goal 129. [METHODNOEX] org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B
   * Goal 130. [METHODNOEX] org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;
   * Goal 131. Weak Mutation 0: org.apache.commons.codec.binary.Base64.decodeBase64([B)[B:143 - ReplaceVariable base64Data -> CHUNK_SEPARATOR
   * Goal 132. Weak Mutation 1: org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;:171 - ReplaceConstant - 1 -> 0
   * Goal 133. Weak Mutation 2: org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;:171 - ReplaceVariable pArray -> CHUNK_SEPARATOR
   * Goal 134. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 135. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 136. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 137. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 138. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 139. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 140. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 141. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 142. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 143. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 144. Weak Mutation 348: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> <
   * Goal 145. Weak Mutation 365: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 0
   * Goal 146. Weak Mutation 366: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 1
   * Goal 147. Weak Mutation 367: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> -1
   * Goal 148. Weak Mutation 368: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 3
   * Goal 149. Weak Mutation 369: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 5
   * Goal 150. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 151. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 152. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 153. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 154. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 155. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 156. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 157. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 158. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 159. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 160. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 161. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 162. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 163. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 164. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 165. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 166. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 167. Weak Mutation 393: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 168. Weak Mutation 394: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:641 - InsertUnaryOp Negation
   * Goal 169. Weak Mutation 395: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:641 - ReplaceComparisonOperator == -> !=
   * Goal 170. Weak Mutation 396: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 171. Weak Mutation 397: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 172. Weak Mutation 398: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> inPos
   * Goal 173. Weak Mutation 399: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> lineLength
   * Goal 174. Weak Mutation 400: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> EOF
   * Goal 175. Weak Mutation 401: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 176. Weak Mutation 402: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp Negation of inAvail
   * Goal 177. Weak Mutation 403: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp IINC 1 inAvail
   * Goal 178. Weak Mutation 404: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp IINC -1 inAvail
   * Goal 179. Weak Mutation 405: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceComparisonOperator >= -> -1
   * Goal 180. Weak Mutation 406: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceComparisonOperator >= -> ==
   * Goal 181. Weak Mutation 408: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:645 - ReplaceConstant - 1 -> 0
   * Goal 182. Weak Mutation 409: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceConstant - 0 -> 1
   * Goal 183. Weak Mutation 410: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 184. Weak Mutation 411: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> inAvail
   * Goal 185. Weak Mutation 413: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> MASK_8BITS
   * Goal 186. Weak Mutation 414: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 187. Weak Mutation 415: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> lineLength
   * Goal 188. Weak Mutation 416: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> EOF
   * Goal 189. Weak Mutation 417: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp Negation of i
   * Goal 190. Weak Mutation 418: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC 1 i
   * Goal 191. Weak Mutation 419: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC -1 i
   * Goal 192. Weak Mutation 420: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 193. Weak Mutation 421: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> inPos
   * Goal 194. Weak Mutation 422: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 195. Weak Mutation 423: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> i
   * Goal 196. Weak Mutation 424: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 197. Weak Mutation 425: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> lineLength
   * Goal 198. Weak Mutation 426: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> EOF
   * Goal 199. Weak Mutation 427: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp Negation of inAvail
   * Goal 200. Weak Mutation 428: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC 1 inAvail
   * Goal 201. Weak Mutation 429: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC -1 inAvail
   * Goal 202. Weak Mutation 430: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> -1
   * Goal 203. Weak Mutation 431: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> >
   * Goal 204. Weak Mutation 432: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> ==
   * Goal 205. Weak Mutation 433: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> PEM_CHUNK_SIZE
   * Goal 206. Weak Mutation 434: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> MIME_CHUNK_SIZE
   * Goal 207. Weak Mutation 435: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> lineLength
   * Goal 208. Weak Mutation 436: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> EOF
   * Goal 209. Weak Mutation 437: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> MASK_8BITS
   * Goal 210. Weak Mutation 438: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp Negation
   * Goal 211. Weak Mutation 439: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp +1
   * Goal 212. Weak Mutation 440: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp -1
   * Goal 213. Weak Mutation 441: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable in -> CHUNK_SEPARATOR
   * Goal 214. Weak Mutation 442: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable in -> buffer
   * Goal 215. Weak Mutation 443: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> PEM_CHUNK_SIZE
   * Goal 216. Weak Mutation 444: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> inAvail
   * Goal 217. Weak Mutation 445: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> MASK_8BITS
   * Goal 218. Weak Mutation 447: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> MIME_CHUNK_SIZE
   * Goal 219. Weak Mutation 448: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> lineLength
   * Goal 220. Weak Mutation 449: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> EOF
   * Goal 221. Weak Mutation 450: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp Negation of inPos
   * Goal 222. Weak Mutation 451: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp IINC 1 inPos
   * Goal 223. Weak Mutation 452: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp IINC -1 inPos
   * Goal 224. Weak Mutation 453: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> inAvail
   * Goal 225. Weak Mutation 454: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> i
   * Goal 226. Weak Mutation 455: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> PAD
   * Goal 227. Weak Mutation 456: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> pad
   * Goal 228. Weak Mutation 457: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 229. Weak Mutation 458: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp Negation of b
   * Goal 230. Weak Mutation 459: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp IINC 1 b
   * Goal 231. Weak Mutation 460: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp IINC -1 b
   * Goal 232. Weak Mutation 463: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp Negation
   * Goal 233. Weak Mutation 464: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceComparisonOperator != -> -1
   * Goal 234. Weak Mutation 465: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceComparisonOperator != -> <
   * Goal 235. Weak Mutation 466: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceComparisonOperator != -> >
   * Goal 236. Weak Mutation 467: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:652 - ReplaceConstant - 1 -> 0
   * Goal 237. Weak Mutation 468: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD
   * Goal 238. Weak Mutation 469: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> pad
   * Goal 239. Weak Mutation 470: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 240. Weak Mutation 471: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp Negation of b
   * Goal 241. Weak Mutation 472: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC 1 b
   * Goal 242. Weak Mutation 473: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC -1 b
   * Goal 243. Weak Mutation 474: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceComparisonOperator < -> -2
   * Goal 244. Weak Mutation 475: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceComparisonOperator < -> !=
   * Goal 245. Weak Mutation 477: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD
   * Goal 246. Weak Mutation 478: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> pad
   * Goal 247. Weak Mutation 479: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 248. Weak Mutation 480: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp Negation of b
   * Goal 249. Weak Mutation 481: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC 1 b
   * Goal 250. Weak Mutation 482: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC -1 b
   * Goal 251. Weak Mutation 483: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 252. Weak Mutation 484: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceComparisonOperator >= -> -1
   * Goal 253. Weak Mutation 486: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceComparisonOperator >= -> ==
   * Goal 254. Weak Mutation 487: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 255. Weak Mutation 488: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> PAD
   * Goal 256. Weak Mutation 489: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> pad
   * Goal 257. Weak Mutation 490: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 258. Weak Mutation 491: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp Negation of b
   * Goal 259. Weak Mutation 492: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp IINC 1 b
   * Goal 260. Weak Mutation 493: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp IINC -1 b
   * Goal 261. Weak Mutation 494: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> PEM_CHUNK_SIZE
   * Goal 262. Weak Mutation 495: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> inAvail
   * Goal 263. Weak Mutation 496: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> inPos
   * Goal 264. Weak Mutation 497: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> MASK_8BITS
   * Goal 265. Weak Mutation 498: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> i
   * Goal 266. Weak Mutation 499: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> MIME_CHUNK_SIZE
   * Goal 267. Weak Mutation 500: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> lineLength
   * Goal 268. Weak Mutation 501: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> EOF
   * Goal 269. Weak Mutation 502: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp Negation of result
   * Goal 270. Weak Mutation 503: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp IINC 1 result
   * Goal 271. Weak Mutation 504: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp IINC -1 result
   * Goal 272. Weak Mutation 505: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceComparisonOperator < -> -2
   * Goal 273. Weak Mutation 506: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceComparisonOperator < -> !=
   * Goal 274. Weak Mutation 508: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - InsertUnaryOp Negation
   * Goal 275. Weak Mutation 509: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - InsertUnaryOp +1
   * Goal 276. Weak Mutation 510: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - InsertUnaryOp -1
   * Goal 277. Weak Mutation 511: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 1 -> 0
   * Goal 278. Weak Mutation 512: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> %
   * Goal 279. Weak Mutation 513: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> -
   * Goal 280. Weak Mutation 514: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> *
   * Goal 281. Weak Mutation 515: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> /
   * Goal 282. Weak Mutation 516: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 0
   * Goal 283. Weak Mutation 517: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 1
   * Goal 284. Weak Mutation 518: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> -1
   * Goal 285. Weak Mutation 519: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 3
   * Goal 286. Weak Mutation 520: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 5
   * Goal 287. Weak Mutation 521: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> +
   * Goal 288. Weak Mutation 522: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> -
   * Goal 289. Weak Mutation 523: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> *
   * Goal 290. Weak Mutation 524: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> /
   * Goal 291. Weak Mutation 525: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp Negation
   * Goal 292. Weak Mutation 526: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp +1
   * Goal 293. Weak Mutation 527: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp -1
   * Goal 294. Weak Mutation 528: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 0
   * Goal 295. Weak Mutation 529: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 1
   * Goal 296. Weak Mutation 530: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> -1
   * Goal 297. Weak Mutation 531: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 5
   * Goal 298. Weak Mutation 532: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 7
   * Goal 299. Weak Mutation 533: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceBitwiseOperator << I -> >> I
   * Goal 300. Weak Mutation 534: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceBitwiseOperator << I -> >>> I
   * Goal 301. Weak Mutation 535: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> PEM_CHUNK_SIZE
   * Goal 302. Weak Mutation 536: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> inAvail
   * Goal 303. Weak Mutation 537: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> inPos
   * Goal 304. Weak Mutation 538: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> MASK_8BITS
   * Goal 305. Weak Mutation 539: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> i
   * Goal 306. Weak Mutation 540: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> MIME_CHUNK_SIZE
   * Goal 307. Weak Mutation 541: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> lineLength
   * Goal 308. Weak Mutation 542: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> EOF
   * Goal 309. Weak Mutation 543: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp Negation of result
   * Goal 310. Weak Mutation 544: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp IINC 1 result
   * Goal 311. Weak Mutation 545: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp IINC -1 result
   * Goal 312. Weak Mutation 546: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> %
   * Goal 313. Weak Mutation 547: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> -
   * Goal 314. Weak Mutation 548: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> *
   * Goal 315. Weak Mutation 549: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> /
   * Goal 316. Weak Mutation 550: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - InsertUnaryOp Negation
   * Goal 317. Weak Mutation 551: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - InsertUnaryOp +1
   * Goal 318. Weak Mutation 552: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - InsertUnaryOp -1
   * Goal 319. Weak Mutation 553: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - ReplaceComparisonOperator != -> -1
   * Goal 320. Weak Mutation 554: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - ReplaceComparisonOperator != -> <
   * Goal 321. Weak Mutation 556: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceVariable buffer -> in
   * Goal 322. Weak Mutation 557: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceVariable buffer -> CHUNK_SEPARATOR
   * Goal 323. Weak Mutation 558: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp Negation
   * Goal 324. Weak Mutation 559: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp +1
   * Goal 325. Weak Mutation 560: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp -1
   * Goal 326. Weak Mutation 561: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 1 -> 0
   * Goal 327. Weak Mutation 562: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceArithmeticOperator + -> %
   * Goal 328. Weak Mutation 563: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceArithmeticOperator + -> -
   * Goal 329. Weak Mutation 564: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceArithmeticOperator + -> *
   * Goal 330. Weak Mutation 565: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceArithmeticOperator + -> /
   * Goal 331. Weak Mutation 566: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp Negation
   * Goal 332. Weak Mutation 567: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp +1
   * Goal 333. Weak Mutation 568: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp -1
   * Goal 334. Weak Mutation 569: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 16 -> 0
   * Goal 335. Weak Mutation 570: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 16 -> 1
   * Goal 336. Weak Mutation 571: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 16 -> -1
   * Goal 337. Weak Mutation 572: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 16 -> 15
   * Goal 338. Weak Mutation 573: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 16 -> 17
   * Goal 339. Weak Mutation 574: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceBitwiseOperator >> I -> << I
   * Goal 340. Weak Mutation 576: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 255 -> 0
   * Goal 341. Weak Mutation 577: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 255 -> 1
   * Goal 342. Weak Mutation 578: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 255 -> -1
   * Goal 343. Weak Mutation 579: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 255 -> 254
   * Goal 344. Weak Mutation 580: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 255 -> 256
   * Goal 345. Weak Mutation 581: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceBitwiseOperator & -> |
   * Goal 346. Weak Mutation 582: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceBitwiseOperator & -> ^
   * Goal 347. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 348. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 349. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 350. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 351. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 352. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 353. Weak Mutation 713: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> !=
   * Goal 354. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 355. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 356. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 357. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 358. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 359. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 360. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 361. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 362. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 363. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 364. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 365. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 366. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 367. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 368. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 369. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 370. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 371. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 372. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 373. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   * Goal 374. Weak Mutation 745: org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:827 - ReplaceComparisonOperator == -> !=
   * Goal 375. Weak Mutation 763: org.apache.commons.codec.binary.Base64.validateTrailingCharacter()V:841 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        Base64.decodeBase64("K,7|VTfCRdt=/");
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // lineSeparator must not contain base64 characters: [\uFFFDg]
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 23
  /*
   * 102 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.<init>(I[B)V: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.decodeBase64([B)[B: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.<init>(I)V: root-Branch
   * Goal 4. org.apache.commons.codec.binary.Base64.<init>()V: root-Branch
   * Goal 5. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 6. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 7. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 8. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 9. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true
   * Goal 10. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true
   * Goal 11. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 12. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 13. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 14. Branch org.apache.commons.codec.binary.Base64.decodeBase64([B)[B: root-Branch in context: org.apache.commons.codec.binary.Base64:decodeBase64([B)[B
   * Goal 15. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 16. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 17. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 18. [Output]: org.apache.commons.codec.binary.Base64.decodeBase64([B)[B:Null
   * Goal 19. org.apache.commons.codec.binary.Base64.<init>()V: Line 452
   * Goal 20. org.apache.commons.codec.binary.Base64.<init>()V: Line 453
   * Goal 21. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 494
   * Goal 22. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 495
   * Goal 23. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 521
   * Goal 24. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 522
   * Goal 25. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 26. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 27. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 28. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 29. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 30. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 31. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 32. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 601
   * Goal 33. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 602
   * Goal 34. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 35. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 36. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 37. org.apache.commons.codec.binary.Base64.decodeBase64([B)[B: Line 143
   * Goal 38. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 39. [METHOD] org.apache.commons.codec.binary.Base64.decodeBase64([B)[B
   * Goal 40. [METHODNOEX] org.apache.commons.codec.binary.Base64.decodeBase64([B)[B
   * Goal 41. Weak Mutation 0: org.apache.commons.codec.binary.Base64.decodeBase64([B)[B:143 - ReplaceVariable base64Data -> CHUNK_SEPARATOR
   * Goal 42. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 43. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 44. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 45. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 46. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 47. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 48. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 49. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 50. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 51. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 52. Weak Mutation 348: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> <
   * Goal 53. Weak Mutation 365: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 0
   * Goal 54. Weak Mutation 366: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 1
   * Goal 55. Weak Mutation 367: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> -1
   * Goal 56. Weak Mutation 368: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 3
   * Goal 57. Weak Mutation 369: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 5
   * Goal 58. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 59. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 60. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 61. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 62. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 63. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 64. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 65. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 66. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 67. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 68. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 69. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 70. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 71. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 72. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 73. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 74. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 75. Weak Mutation 393: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 76. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 77. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 78. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 79. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 80. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 81. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 82. Weak Mutation 713: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> !=
   * Goal 83. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 84. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 85. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 86. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 87. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 88. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 89. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 90. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 91. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 92. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 93. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 94. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 95. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 96. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 97. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 98. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 99. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 100. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 101. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 102. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        Base64.decodeBase64((byte[]) null);
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // lineSeparator must not contain base64 characters: [\uFFFDg]
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 24
  /*
   * 101 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.<init>(I[B)V: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.<init>(I)V: root-Branch
   * Goal 4. org.apache.commons.codec.binary.Base64.<init>()V: root-Branch
   * Goal 5. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 6. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 7. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 8. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 9. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true
   * Goal 10. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true
   * Goal 11. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 12. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 13. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 14. Branch org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B: root-Branch in context: org.apache.commons.codec.binary.Base64:decodeBase64(Ljava/lang/String;)[B
   * Goal 15. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 16. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 17. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 18. [Output]: org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B:Null
   * Goal 19. org.apache.commons.codec.binary.Base64.<init>()V: Line 452
   * Goal 20. org.apache.commons.codec.binary.Base64.<init>()V: Line 453
   * Goal 21. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 494
   * Goal 22. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 495
   * Goal 23. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 521
   * Goal 24. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 522
   * Goal 25. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 26. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 27. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 28. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 29. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 30. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 31. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 32. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 601
   * Goal 33. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 602
   * Goal 34. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 35. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 36. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 37. org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B: Line 158
   * Goal 38. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 39. [METHOD] org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B
   * Goal 40. [METHODNOEX] org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B
   * Goal 41. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 42. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 43. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 44. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 45. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 46. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 47. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 48. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 49. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 50. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 51. Weak Mutation 348: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> <
   * Goal 52. Weak Mutation 365: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 0
   * Goal 53. Weak Mutation 366: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 1
   * Goal 54. Weak Mutation 367: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> -1
   * Goal 55. Weak Mutation 368: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 3
   * Goal 56. Weak Mutation 369: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 5
   * Goal 57. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 58. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 59. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 60. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 61. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 62. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 63. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 64. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 65. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 66. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 67. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 68. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 69. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 70. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 71. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 72. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 73. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 74. Weak Mutation 393: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 75. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 76. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 77. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 78. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 79. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 80. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 81. Weak Mutation 713: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> !=
   * Goal 82. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 83. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 84. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 85. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 86. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 87. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 88. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 89. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 90. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 91. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 92. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 93. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 94. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 95. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 96. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 97. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 98. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 99. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 100. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 101. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        Base64.decodeBase64((String) null);
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // lineSeparator must not contain base64 characters: [\uFFFDg]
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 25
  /*
   * 213 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.<init>(I[B)V: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.<init>(I)V: root-Branch
   * Goal 4. org.apache.commons.codec.binary.Base64.<init>()V: root-Branch
   * Goal 5. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 6. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 7. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 8. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 9. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true
   * Goal 10. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true
   * Goal 11. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - true
   * Goal 12. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - true
   * Goal 13. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - false
   * Goal 14. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - true
   * Goal 15. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - false
   * Goal 16. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I45 Branch 23 IF_ICMPNE L650 - true
   * Goal 17. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I57 Branch 24 IFLT L655 - false
   * Goal 18. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I61 Branch 25 IF_ICMPGE L655 - true
   * Goal 19. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - true
   * Goal 20. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - false
   * Goal 21. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I160 Branch 29 IFEQ L672 - true
   * Goal 22. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 23. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 24. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 25. Branch org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B: root-Branch in context: org.apache.commons.codec.binary.Base64:decodeBase64(Ljava/lang/String;)[B
   * Goal 26. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - true in context: 
   * Goal 27. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - true in context: 
   * Goal 28. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - false in context: 
   * Goal 29. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - true in context: 
   * Goal 30. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - false in context: 
   * Goal 31. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I45 Branch 23 IF_ICMPNE L650 - true in context: 
   * Goal 32. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I61 Branch 25 IF_ICMPGE L655 - true in context: 
   * Goal 33. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I57 Branch 24 IFLT L655 - false in context: 
   * Goal 34. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I160 Branch 29 IFEQ L672 - true in context: 
   * Goal 35. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - true in context: 
   * Goal 36. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - false in context: 
   * Goal 37. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 38. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 39. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 40. [Output]: org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B:EmptyArray
   * Goal 41. org.apache.commons.codec.binary.Base64.<init>()V: Line 452
   * Goal 42. org.apache.commons.codec.binary.Base64.<init>()V: Line 453
   * Goal 43. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 494
   * Goal 44. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 495
   * Goal 45. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 521
   * Goal 46. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 522
   * Goal 47. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 48. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 49. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 50. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 51. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 52. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 53. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 54. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 601
   * Goal 55. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 602
   * Goal 56. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 57. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 58. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 59. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 641
   * Goal 60. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 644
   * Goal 61. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 645
   * Goal 62. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 647
   * Goal 63. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 648
   * Goal 64. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 649
   * Goal 65. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 650
   * Goal 66. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 655
   * Goal 67. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 672
   * Goal 68. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 697
   * Goal 69. org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B: Line 158
   * Goal 70. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 71. [METHOD] org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B
   * Goal 72. [METHODNOEX] org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B
   * Goal 73. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 74. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 75. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 76. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 77. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 78. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 79. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 80. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 81. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 82. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 83. Weak Mutation 348: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> <
   * Goal 84. Weak Mutation 365: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 0
   * Goal 85. Weak Mutation 366: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 1
   * Goal 86. Weak Mutation 367: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> -1
   * Goal 87. Weak Mutation 368: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 3
   * Goal 88. Weak Mutation 369: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 5
   * Goal 89. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 90. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 91. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 92. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 93. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 94. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 95. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 96. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 97. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 98. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 99. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 100. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 101. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 102. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 103. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 104. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 105. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 106. Weak Mutation 393: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 107. Weak Mutation 394: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:641 - InsertUnaryOp Negation
   * Goal 108. Weak Mutation 395: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:641 - ReplaceComparisonOperator == -> !=
   * Goal 109. Weak Mutation 396: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 110. Weak Mutation 397: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 111. Weak Mutation 398: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> inPos
   * Goal 112. Weak Mutation 399: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> lineLength
   * Goal 113. Weak Mutation 400: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> EOF
   * Goal 114. Weak Mutation 401: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 115. Weak Mutation 402: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp Negation of inAvail
   * Goal 116. Weak Mutation 403: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp IINC 1 inAvail
   * Goal 117. Weak Mutation 404: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp IINC -1 inAvail
   * Goal 118. Weak Mutation 405: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceComparisonOperator >= -> -1
   * Goal 119. Weak Mutation 406: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceComparisonOperator >= -> ==
   * Goal 120. Weak Mutation 408: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:645 - ReplaceConstant - 1 -> 0
   * Goal 121. Weak Mutation 409: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceConstant - 0 -> 1
   * Goal 122. Weak Mutation 410: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 123. Weak Mutation 411: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> inAvail
   * Goal 124. Weak Mutation 413: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> MASK_8BITS
   * Goal 125. Weak Mutation 414: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 126. Weak Mutation 415: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> lineLength
   * Goal 127. Weak Mutation 416: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> EOF
   * Goal 128. Weak Mutation 417: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp Negation of i
   * Goal 129. Weak Mutation 418: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC 1 i
   * Goal 130. Weak Mutation 419: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC -1 i
   * Goal 131. Weak Mutation 420: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 132. Weak Mutation 421: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> inPos
   * Goal 133. Weak Mutation 422: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 134. Weak Mutation 423: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> i
   * Goal 135. Weak Mutation 424: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 136. Weak Mutation 425: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> lineLength
   * Goal 137. Weak Mutation 426: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> EOF
   * Goal 138. Weak Mutation 427: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp Negation of inAvail
   * Goal 139. Weak Mutation 428: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC 1 inAvail
   * Goal 140. Weak Mutation 429: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC -1 inAvail
   * Goal 141. Weak Mutation 430: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> -1
   * Goal 142. Weak Mutation 431: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> >
   * Goal 143. Weak Mutation 432: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> ==
   * Goal 144. Weak Mutation 433: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> PEM_CHUNK_SIZE
   * Goal 145. Weak Mutation 434: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> MIME_CHUNK_SIZE
   * Goal 146. Weak Mutation 435: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> lineLength
   * Goal 147. Weak Mutation 436: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> EOF
   * Goal 148. Weak Mutation 437: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> MASK_8BITS
   * Goal 149. Weak Mutation 438: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp Negation
   * Goal 150. Weak Mutation 439: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp +1
   * Goal 151. Weak Mutation 440: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp -1
   * Goal 152. Weak Mutation 441: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable in -> CHUNK_SEPARATOR
   * Goal 153. Weak Mutation 442: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable in -> buffer
   * Goal 154. Weak Mutation 443: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> PEM_CHUNK_SIZE
   * Goal 155. Weak Mutation 444: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> inAvail
   * Goal 156. Weak Mutation 445: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> MASK_8BITS
   * Goal 157. Weak Mutation 447: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> MIME_CHUNK_SIZE
   * Goal 158. Weak Mutation 449: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> EOF
   * Goal 159. Weak Mutation 450: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp Negation of inPos
   * Goal 160. Weak Mutation 451: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp IINC 1 inPos
   * Goal 161. Weak Mutation 452: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp IINC -1 inPos
   * Goal 162. Weak Mutation 453: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> inAvail
   * Goal 163. Weak Mutation 454: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> i
   * Goal 164. Weak Mutation 455: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> PAD
   * Goal 165. Weak Mutation 456: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> pad
   * Goal 166. Weak Mutation 457: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 167. Weak Mutation 458: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp Negation of b
   * Goal 168. Weak Mutation 459: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp IINC 1 b
   * Goal 169. Weak Mutation 460: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp IINC -1 b
   * Goal 170. Weak Mutation 463: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp Negation
   * Goal 171. Weak Mutation 465: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceComparisonOperator != -> <
   * Goal 172. Weak Mutation 468: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD
   * Goal 173. Weak Mutation 469: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> pad
   * Goal 174. Weak Mutation 470: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 175. Weak Mutation 471: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp Negation of b
   * Goal 176. Weak Mutation 472: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC 1 b
   * Goal 177. Weak Mutation 473: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC -1 b
   * Goal 178. Weak Mutation 475: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceComparisonOperator < -> !=
   * Goal 179. Weak Mutation 477: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD
   * Goal 180. Weak Mutation 478: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> pad
   * Goal 181. Weak Mutation 479: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 182. Weak Mutation 480: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp Negation of b
   * Goal 183. Weak Mutation 481: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC 1 b
   * Goal 184. Weak Mutation 482: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC -1 b
   * Goal 185. Weak Mutation 483: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 186. Weak Mutation 485: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceComparisonOperator >= -> >
   * Goal 187. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 188. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 189. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 190. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 191. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 192. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 193. Weak Mutation 713: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> !=
   * Goal 194. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 195. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 196. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 197. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 198. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 199. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 200. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 201. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 202. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 203. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 204. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 205. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 206. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 207. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 208. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 209. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 210. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 211. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 212. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 213. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        Base64.decodeBase64("{");
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // lineSeparator must not contain base64 characters: [\uFFFDg]
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 26
  /*
   * 3 covered goals:
   * Goal 1. toIntegerBytes(Ljava/math/BigInteger;)[B_java.lang.NullPointerException_IMPLICIT
   * Goal 2. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 391
   * Goal 3. [METHOD] org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B
   */

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        Base64.toIntegerBytes((BigInteger) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 27
  /*
   * 12 covered goals:
   * Goal 1. isBase64([B)Z_java.lang.NullPointerException_IMPLICIT
   * Goal 2. org.apache.commons.codec.binary.Base64.isBase64([B)Z: Line 361
   * Goal 3. [METHOD] org.apache.commons.codec.binary.Base64.isBase64([B)Z
   * Goal 4. Weak Mutation 119: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceConstant - 0 -> 1
   * Goal 5. Weak Mutation 120: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 6. Weak Mutation 121: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 7. Weak Mutation 122: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> EOF
   * Goal 8. Weak Mutation 123: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> MASK_8BITS
   * Goal 9. Weak Mutation 124: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - InsertUnaryOp Negation of i
   * Goal 10. Weak Mutation 125: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - InsertUnaryOp IINC 1 i
   * Goal 11. Weak Mutation 126: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - InsertUnaryOp IINC -1 i
   * Goal 12. Weak Mutation 127: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable arrayOctet -> CHUNK_SEPARATOR
   */

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        Base64.isBase64((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 28
  /*
   * 15 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.isBase64(Ljava/lang/String;)Z: root-Branch
   * Goal 2. Branch org.apache.commons.codec.binary.Base64.isBase64(Ljava/lang/String;)Z: root-Branch in context: org.apache.commons.codec.binary.Base64:isBase64(Ljava/lang/String;)Z
   * Goal 3. isBase64(Ljava/lang/String;)Z_java.lang.NullPointerException_IMPLICIT
   * Goal 4. org.apache.commons.codec.binary.Base64.isBase64(Ljava/lang/String;)Z: Line 380
   * Goal 5. org.apache.commons.codec.binary.Base64.isBase64([B)Z: Line 361
   * Goal 6. [METHOD] org.apache.commons.codec.binary.Base64.isBase64(Ljava/lang/String;)Z
   * Goal 7. Weak Mutation 119: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceConstant - 0 -> 1
   * Goal 8. Weak Mutation 120: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 9. Weak Mutation 121: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 10. Weak Mutation 122: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> EOF
   * Goal 11. Weak Mutation 123: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> MASK_8BITS
   * Goal 12. Weak Mutation 124: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - InsertUnaryOp Negation of i
   * Goal 13. Weak Mutation 125: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - InsertUnaryOp IINC 1 i
   * Goal 14. Weak Mutation 126: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - InsertUnaryOp IINC -1 i
   * Goal 15. Weak Mutation 127: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable arrayOctet -> CHUNK_SEPARATOR
   */

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      // Undeclared exception!
      try { 
        Base64.isBase64((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 29
  /*
   * 16 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.isArrayByteBase64([B)Z: root-Branch
   * Goal 2. Branch org.apache.commons.codec.binary.Base64.isArrayByteBase64([B)Z: root-Branch in context: org.apache.commons.codec.binary.Base64:isArrayByteBase64([B)Z
   * Goal 3. isArrayByteBase64([B)Z_java.lang.NullPointerException_IMPLICIT
   * Goal 4. org.apache.commons.codec.binary.Base64.isArrayByteBase64([B)Z: Line 335
   * Goal 5. org.apache.commons.codec.binary.Base64.isBase64([B)Z: Line 361
   * Goal 6. [METHOD] org.apache.commons.codec.binary.Base64.isArrayByteBase64([B)Z
   * Goal 7. Weak Mutation 78: org.apache.commons.codec.binary.Base64.isArrayByteBase64([B)Z:335 - ReplaceVariable arrayOctet -> CHUNK_SEPARATOR
   * Goal 8. Weak Mutation 119: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceConstant - 0 -> 1
   * Goal 9. Weak Mutation 120: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 10. Weak Mutation 121: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 11. Weak Mutation 122: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> EOF
   * Goal 12. Weak Mutation 123: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> MASK_8BITS
   * Goal 13. Weak Mutation 124: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - InsertUnaryOp Negation of i
   * Goal 14. Weak Mutation 125: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - InsertUnaryOp IINC 1 i
   * Goal 15. Weak Mutation 126: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - InsertUnaryOp IINC -1 i
   * Goal 16. Weak Mutation 127: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable arrayOctet -> CHUNK_SEPARATOR
   */

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      // Undeclared exception!
      try { 
        Base64.isArrayByteBase64((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 30
  /*
   * 5 covered goals:
   * Goal 1. Branch org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B: root-Branch in context: org.apache.commons.codec.binary.Base64:encodeInteger(Ljava/math/BigInteger;)[B
   * Goal 2. encodeInteger(Ljava/math/BigInteger;)[B_java.lang.NullPointerException_IMPLICIT
   * Goal 3. org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B: Line 319
   * Goal 4. [METHOD] org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B
   * Goal 5. Weak Mutation 76: org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B:319 - ReplaceConstant - bigInteger -> 
   */

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
      try { 
        Base64.encodeInteger((BigInteger) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bigInteger
         //
         verifyException("java.util.Objects", e);
      }
  }

  //Test case number: 31
  /*
   * 127 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.<init>(I[B)V: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.<init>(I)V: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 4. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 5. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 6. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 7. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true
   * Goal 8. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true
   * Goal 9. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 34 IFEQ L722 - true
   * Goal 10. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - true
   * Goal 11. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 12. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 13. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 14. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch in context: org.apache.commons.codec.binary.Base64:<init>(I[BZ)V
   * Goal 15. Branch org.apache.commons.codec.binary.Base64.<init>(I[B)V: root-Branch in context: org.apache.commons.codec.binary.Base64:<init>(I[B)V
   * Goal 16. Branch org.apache.commons.codec.binary.Base64.<init>(I)V: root-Branch in context: org.apache.commons.codec.binary.Base64:<init>(I)V
   * Goal 17. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 18. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 19. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 20. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 21. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 22. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 34 IFEQ L722 - true in context: 
   * Goal 23. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - true in context: 
   * Goal 24. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - false in context: 
   * Goal 25. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 26. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 27. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 28. encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 29. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 494
   * Goal 30. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 495
   * Goal 31. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 521
   * Goal 32. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 522
   * Goal 33. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 34. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 35. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 36. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 37. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 38. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 39. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 40. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 601
   * Goal 41. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 602
   * Goal 42. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 43. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 44. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 45. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 722
   * Goal 46. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 727
   * Goal 47. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 768
   * Goal 48. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 769
   * Goal 49. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 770
   * Goal 50. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 771
   * Goal 51. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 52. [METHOD] org.apache.commons.codec.binary.Base64.<init>(I)V
   * Goal 53. [METHOD] org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V
   * Goal 54. [METHODNOEX] org.apache.commons.codec.binary.Base64.<init>(I)V
   * Goal 55. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 56. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 57. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 58. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 59. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 60. Weak Mutation 340: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> lineLength
   * Goal 61. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 62. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 63. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 64. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 65. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 66. Weak Mutation 347: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> ==
   * Goal 67. Weak Mutation 365: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 0
   * Goal 68. Weak Mutation 366: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 1
   * Goal 69. Weak Mutation 367: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> -1
   * Goal 70. Weak Mutation 368: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 3
   * Goal 71. Weak Mutation 369: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 5
   * Goal 72. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 73. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 74. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 75. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 76. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 77. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 78. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 79. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 80. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 81. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 82. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 83. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 84. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 85. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 86. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 87. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 88. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 89. Weak Mutation 393: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 90. Weak Mutation 583: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:722 - InsertUnaryOp Negation
   * Goal 91. Weak Mutation 584: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:722 - ReplaceComparisonOperator == -> !=
   * Goal 92. Weak Mutation 585: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 93. Weak Mutation 586: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 94. Weak Mutation 588: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> lineLength
   * Goal 95. Weak Mutation 589: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> EOF
   * Goal 96. Weak Mutation 590: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 97. Weak Mutation 591: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp Negation of inAvail
   * Goal 98. Weak Mutation 592: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp IINC 1 inAvail
   * Goal 99. Weak Mutation 593: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp IINC -1 inAvail
   * Goal 100. Weak Mutation 595: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceComparisonOperator >= -> ==
   * Goal 101. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 102. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 103. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 104. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 105. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 106. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 107. Weak Mutation 713: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> !=
   * Goal 108. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 109. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 110. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 111. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 112. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 113. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 114. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 115. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 116. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 117. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 118. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 119. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 120. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 121. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 122. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 123. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 124. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 125. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 126. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 127. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Base64 base64_0 = null;
      try {
        base64_0 = new Base64((-1138));
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // lineSeparator must not contain base64 characters: [\uFFFDg]
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 32
  /*
   * 169 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.<init>(I[B)V: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.<init>(I)V: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.<init>()V: root-Branch
   * Goal 4. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 5. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 6. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 7. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 8. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true
   * Goal 9. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true
   * Goal 10. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - true
   * Goal 11. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 12. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 13. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 14. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch in context: org.apache.commons.codec.binary.Base64:<init>(I[BZ)V
   * Goal 15. Branch org.apache.commons.codec.binary.Base64.<init>(I[B)V: root-Branch in context: org.apache.commons.codec.binary.Base64:<init>(I[B)V
   * Goal 16. Branch org.apache.commons.codec.binary.Base64.<init>()V: root-Branch in context: org.apache.commons.codec.binary.Base64:<init>()V
   * Goal 17. Branch org.apache.commons.codec.binary.Base64.<init>(I)V: root-Branch in context: org.apache.commons.codec.binary.Base64:<init>(I)V
   * Goal 18. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 19. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 20. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 21. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 22. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 23. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - true in context: 
   * Goal 24. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - true in context: 
   * Goal 25. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - false in context: 
   * Goal 26. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 27. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 28. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 29. decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V_java.lang.NullPointerException_IMPLICIT
   * Goal 30. org.apache.commons.codec.binary.Base64.<init>()V: Line 452
   * Goal 31. org.apache.commons.codec.binary.Base64.<init>()V: Line 453
   * Goal 32. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 494
   * Goal 33. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 495
   * Goal 34. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 521
   * Goal 35. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 522
   * Goal 36. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 37. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 38. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 39. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 40. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 41. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 42. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 43. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 601
   * Goal 44. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 602
   * Goal 45. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 46. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 47. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 48. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 641
   * Goal 49. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 644
   * Goal 50. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 647
   * Goal 51. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 648
   * Goal 52. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 649
   * Goal 53. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 54. [METHOD] org.apache.commons.codec.binary.Base64.<init>()V
   * Goal 55. [METHOD] org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V
   * Goal 56. [METHODNOEX] org.apache.commons.codec.binary.Base64.<init>()V
   * Goal 57. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 58. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 59. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 60. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 61. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 62. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 63. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 64. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 65. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 66. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 67. Weak Mutation 348: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> <
   * Goal 68. Weak Mutation 365: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 0
   * Goal 69. Weak Mutation 366: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 1
   * Goal 70. Weak Mutation 367: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> -1
   * Goal 71. Weak Mutation 368: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 3
   * Goal 72. Weak Mutation 369: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 5
   * Goal 73. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 74. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 75. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 76. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 77. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 78. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 79. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 80. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 81. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 82. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 83. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 84. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 85. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 86. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 87. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 88. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 89. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 90. Weak Mutation 393: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 91. Weak Mutation 394: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:641 - InsertUnaryOp Negation
   * Goal 92. Weak Mutation 395: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:641 - ReplaceComparisonOperator == -> !=
   * Goal 93. Weak Mutation 396: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 94. Weak Mutation 397: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 95. Weak Mutation 399: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> lineLength
   * Goal 96. Weak Mutation 400: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> EOF
   * Goal 97. Weak Mutation 401: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 98. Weak Mutation 402: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp Negation of inAvail
   * Goal 99. Weak Mutation 403: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp IINC 1 inAvail
   * Goal 100. Weak Mutation 404: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp IINC -1 inAvail
   * Goal 101. Weak Mutation 406: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceComparisonOperator >= -> ==
   * Goal 102. Weak Mutation 409: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceConstant - 0 -> 1
   * Goal 103. Weak Mutation 410: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 104. Weak Mutation 411: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> inAvail
   * Goal 105. Weak Mutation 412: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> inPos
   * Goal 106. Weak Mutation 413: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> MASK_8BITS
   * Goal 107. Weak Mutation 414: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 108. Weak Mutation 416: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> EOF
   * Goal 109. Weak Mutation 417: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp Negation of i
   * Goal 110. Weak Mutation 418: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC 1 i
   * Goal 111. Weak Mutation 419: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC -1 i
   * Goal 112. Weak Mutation 420: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 113. Weak Mutation 422: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 114. Weak Mutation 423: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> i
   * Goal 115. Weak Mutation 424: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 116. Weak Mutation 425: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> lineLength
   * Goal 117. Weak Mutation 426: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> EOF
   * Goal 118. Weak Mutation 427: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp Negation of inAvail
   * Goal 119. Weak Mutation 428: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC 1 inAvail
   * Goal 120. Weak Mutation 429: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC -1 inAvail
   * Goal 121. Weak Mutation 430: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> -1
   * Goal 122. Weak Mutation 433: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> PEM_CHUNK_SIZE
   * Goal 123. Weak Mutation 434: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> MIME_CHUNK_SIZE
   * Goal 124. Weak Mutation 435: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> lineLength
   * Goal 125. Weak Mutation 436: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> EOF
   * Goal 126. Weak Mutation 437: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> MASK_8BITS
   * Goal 127. Weak Mutation 438: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp Negation
   * Goal 128. Weak Mutation 439: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp +1
   * Goal 129. Weak Mutation 440: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp -1
   * Goal 130. Weak Mutation 441: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable in -> CHUNK_SEPARATOR
   * Goal 131. Weak Mutation 442: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable in -> buffer
   * Goal 132. Weak Mutation 443: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> PEM_CHUNK_SIZE
   * Goal 133. Weak Mutation 445: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> MASK_8BITS
   * Goal 134. Weak Mutation 446: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> i
   * Goal 135. Weak Mutation 447: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> MIME_CHUNK_SIZE
   * Goal 136. Weak Mutation 448: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> lineLength
   * Goal 137. Weak Mutation 449: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> EOF
   * Goal 138. Weak Mutation 450: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp Negation of inPos
   * Goal 139. Weak Mutation 451: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp IINC 1 inPos
   * Goal 140. Weak Mutation 452: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp IINC -1 inPos
   * Goal 141. Weak Mutation 453: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> inAvail
   * Goal 142. Weak Mutation 454: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> i
   * Goal 143. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 144. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 145. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 146. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 147. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 148. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 149. Weak Mutation 713: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> !=
   * Goal 150. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 151. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 152. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 153. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 154. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 155. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 156. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 157. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 158. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 159. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 160. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 161. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 162. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 163. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 164. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 165. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 166. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 167. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 168. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 169. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Base64 base64_0 = null;
      try {
        base64_0 = new Base64();
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // lineSeparator must not contain base64 characters: [\uFFFDg]
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 33
  /*
   * 360 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.<init>(I[B)V: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.<init>(I)V: root-Branch
   * Goal 4. org.apache.commons.codec.binary.Base64.<init>()V: root-Branch
   * Goal 5. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 6. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 7. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 8. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 9. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - false
   * Goal 10. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true
   * Goal 11. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true
   * Goal 12. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - true
   * Goal 13. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - true
   * Goal 14. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - false
   * Goal 15. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - true
   * Goal 16. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - false
   * Goal 17. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I45 Branch 23 IF_ICMPNE L650 - true
   * Goal 18. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I57 Branch 24 IFLT L655 - false
   * Goal 19. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I61 Branch 25 IF_ICMPGE L655 - false
   * Goal 20. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - true
   * Goal 21. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - false
   * Goal 22. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I96 Branch 27 IFNE L660 - true
   * Goal 23. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I96 Branch 27 IFNE L660 - false
   * Goal 24. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - true
   * Goal 25. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - false
   * Goal 26. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I160 Branch 29 IFEQ L672 - false
   * Goal 27. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 30 TABLESWITCH L677 Case 1 - false
   * Goal 28. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 31 TABLESWITCH L677 Case 2 - true
   * Goal 29. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 32 TABLESWITCH L677 Case 3 - false
   * Goal 30. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 33 TABLESWITCH L677 Default-Case - false
   * Goal 31. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 32. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 33. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 34. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - false
   * Goal 35. org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 55 IFEQ L827 - true
   * Goal 36. Branch org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B: root-Branch in context: org.apache.commons.codec.binary.Base64:decodeBase64(Ljava/lang/String;)[B
   * Goal 37. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 38. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 39. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - false in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 40. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - true in context: 
   * Goal 41. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - true in context: 
   * Goal 42. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - false in context: 
   * Goal 43. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - true in context: 
   * Goal 44. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - false in context: 
   * Goal 45. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I45 Branch 23 IF_ICMPNE L650 - true in context: 
   * Goal 46. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I57 Branch 24 IFLT L655 - false in context: 
   * Goal 47. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I61 Branch 25 IF_ICMPGE L655 - false in context: 
   * Goal 48. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - false in context: 
   * Goal 49. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - true in context: 
   * Goal 50. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I96 Branch 27 IFNE L660 - true in context: 
   * Goal 51. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I96 Branch 27 IFNE L660 - false in context: 
   * Goal 52. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I160 Branch 29 IFEQ L672 - false in context: 
   * Goal 53. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - true in context: 
   * Goal 54. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - false in context: 
   * Goal 55. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 31 TABLESWITCH L677 Case 2 - true in context: 
   * Goal 56. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 32 TABLESWITCH L677 Case 3 - false in context: 
   * Goal 57. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 30 TABLESWITCH L677 Case 1 - false in context: 
   * Goal 58. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 33 TABLESWITCH L677 Default-Case - false in context: 
   * Goal 59. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 60. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 61. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 62. Branch org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 55 IFEQ L827 - true in context: 
   * Goal 63. <init>(I[B)V_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 64. [Output]: org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B:NonEmptyArray
   * Goal 65. org.apache.commons.codec.binary.Base64.<init>()V: Line 452
   * Goal 66. org.apache.commons.codec.binary.Base64.<init>()V: Line 453
   * Goal 67. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 494
   * Goal 68. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 495
   * Goal 69. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 521
   * Goal 70. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 522
   * Goal 71. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 72. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 73. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 74. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 75. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 76. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 77. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 593
   * Goal 78. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 594
   * Goal 79. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 80. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 601
   * Goal 81. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 602
   * Goal 82. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 83. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 84. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 85. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 641
   * Goal 86. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 644
   * Goal 87. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 645
   * Goal 88. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 647
   * Goal 89. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 648
   * Goal 90. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 649
   * Goal 91. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 650
   * Goal 92. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 655
   * Goal 93. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 656
   * Goal 94. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 657
   * Goal 95. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 658
   * Goal 96. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 659
   * Goal 97. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 660
   * Goal 98. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 661
   * Goal 99. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 662
   * Goal 100. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 663
   * Goal 101. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 672
   * Goal 102. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 673
   * Goal 103. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 677
   * Goal 104. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 683
   * Goal 105. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 684
   * Goal 106. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 685
   * Goal 107. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 686
   * Goal 108. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 697
   * Goal 109. org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B: Line 158
   * Goal 110. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 111. org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 827
   * Goal 112. org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 832
   * Goal 113. [METHOD] org.apache.commons.codec.binary.Base64.<init>(I[B)V
   * Goal 114. [METHOD] org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B
   * Goal 115. [METHODNOEX] org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B
   * Goal 116. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 117. Weak Mutation 331: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceVariable lineSeparator -> CHUNK_SEPARATOR
   * Goal 118. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 119. Weak Mutation 333: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceVariable lineSeparator -> CHUNK_SEPARATOR
   * Goal 120. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 121. Weak Mutation 335: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:593 - ReplaceVariable lineSeparator -> CHUNK_SEPARATOR
   * Goal 122. Weak Mutation 336: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:594 - ReplaceConstant - lineSeparator must not contain base64 characters: [ -> 
   * Goal 123. Weak Mutation 337: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:594 - ReplaceConstant - ] -> 
   * Goal 124. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 125. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 126. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 127. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 128. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 129. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 130. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 131. Weak Mutation 348: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> <
   * Goal 132. Weak Mutation 365: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 0
   * Goal 133. Weak Mutation 366: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 1
   * Goal 134. Weak Mutation 367: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> -1
   * Goal 135. Weak Mutation 368: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 3
   * Goal 136. Weak Mutation 369: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 5
   * Goal 137. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 138. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 139. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 140. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 141. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 142. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 143. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 144. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 145. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 146. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 147. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 148. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 149. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 150. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 151. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 152. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 153. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 154. Weak Mutation 393: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 155. Weak Mutation 394: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:641 - InsertUnaryOp Negation
   * Goal 156. Weak Mutation 395: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:641 - ReplaceComparisonOperator == -> !=
   * Goal 157. Weak Mutation 396: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 158. Weak Mutation 397: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 159. Weak Mutation 398: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> inPos
   * Goal 160. Weak Mutation 399: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> lineLength
   * Goal 161. Weak Mutation 400: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> EOF
   * Goal 162. Weak Mutation 401: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 163. Weak Mutation 402: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp Negation of inAvail
   * Goal 164. Weak Mutation 403: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp IINC 1 inAvail
   * Goal 165. Weak Mutation 404: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp IINC -1 inAvail
   * Goal 166. Weak Mutation 405: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceComparisonOperator >= -> -1
   * Goal 167. Weak Mutation 406: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceComparisonOperator >= -> ==
   * Goal 168. Weak Mutation 408: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:645 - ReplaceConstant - 1 -> 0
   * Goal 169. Weak Mutation 409: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceConstant - 0 -> 1
   * Goal 170. Weak Mutation 410: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 171. Weak Mutation 411: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> inAvail
   * Goal 172. Weak Mutation 413: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> MASK_8BITS
   * Goal 173. Weak Mutation 414: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 174. Weak Mutation 415: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> lineLength
   * Goal 175. Weak Mutation 416: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> EOF
   * Goal 176. Weak Mutation 417: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp Negation of i
   * Goal 177. Weak Mutation 418: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC 1 i
   * Goal 178. Weak Mutation 419: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC -1 i
   * Goal 179. Weak Mutation 420: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 180. Weak Mutation 421: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> inPos
   * Goal 181. Weak Mutation 422: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 182. Weak Mutation 423: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> i
   * Goal 183. Weak Mutation 424: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 184. Weak Mutation 425: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> lineLength
   * Goal 185. Weak Mutation 426: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> EOF
   * Goal 186. Weak Mutation 427: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp Negation of inAvail
   * Goal 187. Weak Mutation 428: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC 1 inAvail
   * Goal 188. Weak Mutation 429: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC -1 inAvail
   * Goal 189. Weak Mutation 430: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> -1
   * Goal 190. Weak Mutation 431: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> >
   * Goal 191. Weak Mutation 432: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> ==
   * Goal 192. Weak Mutation 433: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> PEM_CHUNK_SIZE
   * Goal 193. Weak Mutation 434: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> MIME_CHUNK_SIZE
   * Goal 194. Weak Mutation 435: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> lineLength
   * Goal 195. Weak Mutation 436: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> EOF
   * Goal 196. Weak Mutation 437: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> MASK_8BITS
   * Goal 197. Weak Mutation 438: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp Negation
   * Goal 198. Weak Mutation 439: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp +1
   * Goal 199. Weak Mutation 440: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp -1
   * Goal 200. Weak Mutation 441: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable in -> CHUNK_SEPARATOR
   * Goal 201. Weak Mutation 442: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable in -> buffer
   * Goal 202. Weak Mutation 443: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> PEM_CHUNK_SIZE
   * Goal 203. Weak Mutation 444: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> inAvail
   * Goal 204. Weak Mutation 445: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> MASK_8BITS
   * Goal 205. Weak Mutation 447: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> MIME_CHUNK_SIZE
   * Goal 206. Weak Mutation 448: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> lineLength
   * Goal 207. Weak Mutation 449: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> EOF
   * Goal 208. Weak Mutation 450: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp Negation of inPos
   * Goal 209. Weak Mutation 451: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp IINC 1 inPos
   * Goal 210. Weak Mutation 452: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp IINC -1 inPos
   * Goal 211. Weak Mutation 453: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> inAvail
   * Goal 212. Weak Mutation 454: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> i
   * Goal 213. Weak Mutation 455: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> PAD
   * Goal 214. Weak Mutation 456: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> pad
   * Goal 215. Weak Mutation 457: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 216. Weak Mutation 458: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp Negation of b
   * Goal 217. Weak Mutation 459: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp IINC 1 b
   * Goal 218. Weak Mutation 460: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp IINC -1 b
   * Goal 219. Weak Mutation 463: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp Negation
   * Goal 220. Weak Mutation 465: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceComparisonOperator != -> <
   * Goal 221. Weak Mutation 466: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceComparisonOperator != -> >
   * Goal 222. Weak Mutation 468: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD
   * Goal 223. Weak Mutation 469: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> pad
   * Goal 224. Weak Mutation 470: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 225. Weak Mutation 471: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp Negation of b
   * Goal 226. Weak Mutation 472: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC 1 b
   * Goal 227. Weak Mutation 473: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC -1 b
   * Goal 228. Weak Mutation 475: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceComparisonOperator < -> !=
   * Goal 229. Weak Mutation 477: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD
   * Goal 230. Weak Mutation 478: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> pad
   * Goal 231. Weak Mutation 479: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 232. Weak Mutation 480: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp Negation of b
   * Goal 233. Weak Mutation 481: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC 1 b
   * Goal 234. Weak Mutation 482: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC -1 b
   * Goal 235. Weak Mutation 483: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 236. Weak Mutation 484: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceComparisonOperator >= -> -1
   * Goal 237. Weak Mutation 487: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 238. Weak Mutation 488: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> PAD
   * Goal 239. Weak Mutation 489: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> pad
   * Goal 240. Weak Mutation 490: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 241. Weak Mutation 491: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp Negation of b
   * Goal 242. Weak Mutation 492: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp IINC 1 b
   * Goal 243. Weak Mutation 493: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp IINC -1 b
   * Goal 244. Weak Mutation 494: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> PEM_CHUNK_SIZE
   * Goal 245. Weak Mutation 495: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> inAvail
   * Goal 246. Weak Mutation 496: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> inPos
   * Goal 247. Weak Mutation 497: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> MASK_8BITS
   * Goal 248. Weak Mutation 498: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> i
   * Goal 249. Weak Mutation 499: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> MIME_CHUNK_SIZE
   * Goal 250. Weak Mutation 500: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> lineLength
   * Goal 251. Weak Mutation 501: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> EOF
   * Goal 252. Weak Mutation 502: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp Negation of result
   * Goal 253. Weak Mutation 503: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp IINC 1 result
   * Goal 254. Weak Mutation 504: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp IINC -1 result
   * Goal 255. Weak Mutation 505: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceComparisonOperator < -> -2
   * Goal 256. Weak Mutation 506: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceComparisonOperator < -> !=
   * Goal 257. Weak Mutation 507: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceComparisonOperator < -> <=
   * Goal 258. Weak Mutation 508: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - InsertUnaryOp Negation
   * Goal 259. Weak Mutation 509: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - InsertUnaryOp +1
   * Goal 260. Weak Mutation 510: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - InsertUnaryOp -1
   * Goal 261. Weak Mutation 511: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 1 -> 0
   * Goal 262. Weak Mutation 512: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> %
   * Goal 263. Weak Mutation 513: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> -
   * Goal 264. Weak Mutation 514: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> *
   * Goal 265. Weak Mutation 515: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> /
   * Goal 266. Weak Mutation 516: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 0
   * Goal 267. Weak Mutation 517: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 1
   * Goal 268. Weak Mutation 518: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> -1
   * Goal 269. Weak Mutation 519: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 3
   * Goal 270. Weak Mutation 520: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 5
   * Goal 271. Weak Mutation 521: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> +
   * Goal 272. Weak Mutation 522: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> -
   * Goal 273. Weak Mutation 523: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> *
   * Goal 274. Weak Mutation 524: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> /
   * Goal 275. Weak Mutation 525: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp Negation
   * Goal 276. Weak Mutation 526: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp +1
   * Goal 277. Weak Mutation 527: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp -1
   * Goal 278. Weak Mutation 528: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 0
   * Goal 279. Weak Mutation 529: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 1
   * Goal 280. Weak Mutation 530: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> -1
   * Goal 281. Weak Mutation 531: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 5
   * Goal 282. Weak Mutation 532: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 7
   * Goal 283. Weak Mutation 533: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceBitwiseOperator << I -> >> I
   * Goal 284. Weak Mutation 534: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceBitwiseOperator << I -> >>> I
   * Goal 285. Weak Mutation 535: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> PEM_CHUNK_SIZE
   * Goal 286. Weak Mutation 536: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> inAvail
   * Goal 287. Weak Mutation 537: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> inPos
   * Goal 288. Weak Mutation 538: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> MASK_8BITS
   * Goal 289. Weak Mutation 539: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> i
   * Goal 290. Weak Mutation 540: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> MIME_CHUNK_SIZE
   * Goal 291. Weak Mutation 541: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> lineLength
   * Goal 292. Weak Mutation 542: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> EOF
   * Goal 293. Weak Mutation 543: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp Negation of result
   * Goal 294. Weak Mutation 544: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp IINC 1 result
   * Goal 295. Weak Mutation 545: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp IINC -1 result
   * Goal 296. Weak Mutation 546: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> %
   * Goal 297. Weak Mutation 547: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> -
   * Goal 298. Weak Mutation 548: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> *
   * Goal 299. Weak Mutation 549: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> /
   * Goal 300. Weak Mutation 550: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - InsertUnaryOp Negation
   * Goal 301. Weak Mutation 551: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - InsertUnaryOp +1
   * Goal 302. Weak Mutation 552: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - InsertUnaryOp -1
   * Goal 303. Weak Mutation 553: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - ReplaceComparisonOperator != -> -1
   * Goal 304. Weak Mutation 554: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - ReplaceComparisonOperator != -> <
   * Goal 305. Weak Mutation 556: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceVariable buffer -> in
   * Goal 306. Weak Mutation 557: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceVariable buffer -> CHUNK_SEPARATOR
   * Goal 307. Weak Mutation 558: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp Negation
   * Goal 308. Weak Mutation 559: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp +1
   * Goal 309. Weak Mutation 560: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp -1
   * Goal 310. Weak Mutation 561: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 1 -> 0
   * Goal 311. Weak Mutation 562: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceArithmeticOperator + -> %
   * Goal 312. Weak Mutation 563: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceArithmeticOperator + -> -
   * Goal 313. Weak Mutation 564: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceArithmeticOperator + -> *
   * Goal 314. Weak Mutation 565: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceArithmeticOperator + -> /
   * Goal 315. Weak Mutation 566: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp Negation
   * Goal 316. Weak Mutation 567: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp +1
   * Goal 317. Weak Mutation 568: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp -1
   * Goal 318. Weak Mutation 569: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 16 -> 0
   * Goal 319. Weak Mutation 570: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 16 -> 1
   * Goal 320. Weak Mutation 571: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 16 -> -1
   * Goal 321. Weak Mutation 572: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 16 -> 15
   * Goal 322. Weak Mutation 573: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 16 -> 17
   * Goal 323. Weak Mutation 574: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceBitwiseOperator >> I -> << I
   * Goal 324. Weak Mutation 576: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 255 -> 0
   * Goal 325. Weak Mutation 577: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 255 -> 1
   * Goal 326. Weak Mutation 578: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 255 -> -1
   * Goal 327. Weak Mutation 579: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 255 -> 254
   * Goal 328. Weak Mutation 580: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 255 -> 256
   * Goal 329. Weak Mutation 581: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceBitwiseOperator & -> |
   * Goal 330. Weak Mutation 582: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceBitwiseOperator & -> ^
   * Goal 331. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 332. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 333. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 334. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 335. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 336. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 337. Weak Mutation 713: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> !=
   * Goal 338. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 339. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 340. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 341. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 342. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 343. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 344. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 345. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 346. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 347. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 348. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 349. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 350. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 351. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 352. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 353. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 354. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 355. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 356. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 357. Weak Mutation 736: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> >=
   * Goal 358. Weak Mutation 738: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 1 -> 0
   * Goal 359. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   * Goal 360. Weak Mutation 745: org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:827 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
      try { 
        Base64.decodeBase64("$VALUES");
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // lineSeparator must not contain base64 characters: [\uFFFDg]
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 34
  /*
   * 245 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.<init>(I[B)V: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.decodeBase64([B)[B: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.<init>(I)V: root-Branch
   * Goal 4. org.apache.commons.codec.binary.Base64.<init>()V: root-Branch
   * Goal 5. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 6. org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;: root-Branch
   * Goal 7. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 8. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 9. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 10. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true
   * Goal 11. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true
   * Goal 12. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - true
   * Goal 13. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - true
   * Goal 14. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - false
   * Goal 15. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - true
   * Goal 16. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - false
   * Goal 17. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I45 Branch 23 IF_ICMPNE L650 - true
   * Goal 18. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I57 Branch 24 IFLT L655 - true
   * Goal 19. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I57 Branch 24 IFLT L655 - false
   * Goal 20. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I61 Branch 25 IF_ICMPGE L655 - false
   * Goal 21. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - true
   * Goal 22. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - true
   * Goal 23. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - false
   * Goal 24. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I160 Branch 29 IFEQ L672 - true
   * Goal 25. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 26. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 27. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 28. Branch org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;: root-Branch in context: org.apache.commons.codec.binary.Base64:decodeInteger([B)Ljava/math/BigInteger;
   * Goal 29. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - true in context: 
   * Goal 30. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - true in context: 
   * Goal 31. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - false in context: 
   * Goal 32. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - true in context: 
   * Goal 33. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - false in context: 
   * Goal 34. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I45 Branch 23 IF_ICMPNE L650 - true in context: 
   * Goal 35. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I57 Branch 24 IFLT L655 - false in context: 
   * Goal 36. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I57 Branch 24 IFLT L655 - true in context: 
   * Goal 37. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I61 Branch 25 IF_ICMPGE L655 - false in context: 
   * Goal 38. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - true in context: 
   * Goal 39. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I160 Branch 29 IFEQ L672 - true in context: 
   * Goal 40. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - true in context: 
   * Goal 41. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - false in context: 
   * Goal 42. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 43. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 44. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 45. [Output]: org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;:NonNull:java.math.BigInteger:byteValue()B:Zero
   * Goal 46. [Output]: org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;:NonNull:java.math.BigInteger:shortValue()S:Zero
   * Goal 47. org.apache.commons.codec.binary.Base64.<init>()V: Line 452
   * Goal 48. org.apache.commons.codec.binary.Base64.<init>()V: Line 453
   * Goal 49. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 494
   * Goal 50. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 495
   * Goal 51. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 521
   * Goal 52. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 522
   * Goal 53. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 54. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 55. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 56. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 57. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 58. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 59. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 60. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 601
   * Goal 61. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 602
   * Goal 62. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 63. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 64. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 65. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 641
   * Goal 66. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 644
   * Goal 67. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 645
   * Goal 68. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 647
   * Goal 69. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 648
   * Goal 70. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 649
   * Goal 71. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 650
   * Goal 72. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 655
   * Goal 73. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 656
   * Goal 74. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 657
   * Goal 75. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 672
   * Goal 76. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 697
   * Goal 77. org.apache.commons.codec.binary.Base64.decodeBase64([B)[B: Line 143
   * Goal 78. org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;: Line 171
   * Goal 79. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 80. [METHOD] org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;
   * Goal 81. [METHODNOEX] org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;
   * Goal 82. Weak Mutation 0: org.apache.commons.codec.binary.Base64.decodeBase64([B)[B:143 - ReplaceVariable base64Data -> CHUNK_SEPARATOR
   * Goal 83. Weak Mutation 1: org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;:171 - ReplaceConstant - 1 -> 0
   * Goal 84. Weak Mutation 2: org.apache.commons.codec.binary.Base64.decodeInteger([B)Ljava/math/BigInteger;:171 - ReplaceVariable pArray -> CHUNK_SEPARATOR
   * Goal 85. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 86. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 87. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 88. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 89. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 90. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 91. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 92. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 93. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 94. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 95. Weak Mutation 348: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> <
   * Goal 96. Weak Mutation 365: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 0
   * Goal 97. Weak Mutation 366: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 1
   * Goal 98. Weak Mutation 367: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> -1
   * Goal 99. Weak Mutation 368: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 3
   * Goal 100. Weak Mutation 369: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 5
   * Goal 101. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 102. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 103. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 104. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 105. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 106. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 107. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 108. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 109. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 110. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 111. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 112. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 113. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 114. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 115. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 116. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 117. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 118. Weak Mutation 393: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 119. Weak Mutation 394: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:641 - InsertUnaryOp Negation
   * Goal 120. Weak Mutation 395: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:641 - ReplaceComparisonOperator == -> !=
   * Goal 121. Weak Mutation 396: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 122. Weak Mutation 397: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 123. Weak Mutation 398: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> inPos
   * Goal 124. Weak Mutation 399: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> lineLength
   * Goal 125. Weak Mutation 400: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> EOF
   * Goal 126. Weak Mutation 401: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 127. Weak Mutation 402: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp Negation of inAvail
   * Goal 128. Weak Mutation 403: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp IINC 1 inAvail
   * Goal 129. Weak Mutation 404: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp IINC -1 inAvail
   * Goal 130. Weak Mutation 405: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceComparisonOperator >= -> -1
   * Goal 131. Weak Mutation 406: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceComparisonOperator >= -> ==
   * Goal 132. Weak Mutation 408: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:645 - ReplaceConstant - 1 -> 0
   * Goal 133. Weak Mutation 409: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceConstant - 0 -> 1
   * Goal 134. Weak Mutation 410: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 135. Weak Mutation 411: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> inAvail
   * Goal 136. Weak Mutation 413: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> MASK_8BITS
   * Goal 137. Weak Mutation 414: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 138. Weak Mutation 415: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> lineLength
   * Goal 139. Weak Mutation 416: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> EOF
   * Goal 140. Weak Mutation 417: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp Negation of i
   * Goal 141. Weak Mutation 418: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC 1 i
   * Goal 142. Weak Mutation 419: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC -1 i
   * Goal 143. Weak Mutation 420: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 144. Weak Mutation 421: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> inPos
   * Goal 145. Weak Mutation 422: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 146. Weak Mutation 423: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> i
   * Goal 147. Weak Mutation 424: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 148. Weak Mutation 425: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> lineLength
   * Goal 149. Weak Mutation 426: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> EOF
   * Goal 150. Weak Mutation 427: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp Negation of inAvail
   * Goal 151. Weak Mutation 428: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC 1 inAvail
   * Goal 152. Weak Mutation 429: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC -1 inAvail
   * Goal 153. Weak Mutation 430: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> -1
   * Goal 154. Weak Mutation 431: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> >
   * Goal 155. Weak Mutation 432: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> ==
   * Goal 156. Weak Mutation 433: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> PEM_CHUNK_SIZE
   * Goal 157. Weak Mutation 434: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> MIME_CHUNK_SIZE
   * Goal 158. Weak Mutation 435: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> lineLength
   * Goal 159. Weak Mutation 436: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> EOF
   * Goal 160. Weak Mutation 437: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> MASK_8BITS
   * Goal 161. Weak Mutation 438: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp Negation
   * Goal 162. Weak Mutation 439: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp +1
   * Goal 163. Weak Mutation 440: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp -1
   * Goal 164. Weak Mutation 441: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable in -> CHUNK_SEPARATOR
   * Goal 165. Weak Mutation 442: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable in -> buffer
   * Goal 166. Weak Mutation 443: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> PEM_CHUNK_SIZE
   * Goal 167. Weak Mutation 444: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> inAvail
   * Goal 168. Weak Mutation 445: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> MASK_8BITS
   * Goal 169. Weak Mutation 447: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> MIME_CHUNK_SIZE
   * Goal 170. Weak Mutation 448: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> lineLength
   * Goal 171. Weak Mutation 449: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> EOF
   * Goal 172. Weak Mutation 450: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp Negation of inPos
   * Goal 173. Weak Mutation 451: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp IINC 1 inPos
   * Goal 174. Weak Mutation 452: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp IINC -1 inPos
   * Goal 175. Weak Mutation 453: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> inAvail
   * Goal 176. Weak Mutation 454: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> i
   * Goal 177. Weak Mutation 455: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> PAD
   * Goal 178. Weak Mutation 456: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> pad
   * Goal 179. Weak Mutation 457: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 180. Weak Mutation 458: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp Negation of b
   * Goal 181. Weak Mutation 459: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp IINC 1 b
   * Goal 182. Weak Mutation 460: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp IINC -1 b
   * Goal 183. Weak Mutation 463: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp Negation
   * Goal 184. Weak Mutation 466: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceComparisonOperator != -> >
   * Goal 185. Weak Mutation 468: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD
   * Goal 186. Weak Mutation 469: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> pad
   * Goal 187. Weak Mutation 470: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 188. Weak Mutation 471: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp Negation of b
   * Goal 189. Weak Mutation 472: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC 1 b
   * Goal 190. Weak Mutation 473: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC -1 b
   * Goal 191. Weak Mutation 474: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceComparisonOperator < -> -2
   * Goal 192. Weak Mutation 476: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceComparisonOperator < -> <=
   * Goal 193. Weak Mutation 477: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD
   * Goal 194. Weak Mutation 478: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> pad
   * Goal 195. Weak Mutation 479: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 196. Weak Mutation 480: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp Negation of b
   * Goal 197. Weak Mutation 481: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC 1 b
   * Goal 198. Weak Mutation 482: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC -1 b
   * Goal 199. Weak Mutation 483: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 200. Weak Mutation 484: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceComparisonOperator >= -> -1
   * Goal 201. Weak Mutation 487: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 202. Weak Mutation 488: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> PAD
   * Goal 203. Weak Mutation 489: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> pad
   * Goal 204. Weak Mutation 490: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 205. Weak Mutation 491: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp Negation of b
   * Goal 206. Weak Mutation 492: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp IINC 1 b
   * Goal 207. Weak Mutation 493: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp IINC -1 b
   * Goal 208. Weak Mutation 494: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> PEM_CHUNK_SIZE
   * Goal 209. Weak Mutation 495: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> inAvail
   * Goal 210. Weak Mutation 496: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> inPos
   * Goal 211. Weak Mutation 497: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> MASK_8BITS
   * Goal 212. Weak Mutation 498: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> i
   * Goal 213. Weak Mutation 499: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> MIME_CHUNK_SIZE
   * Goal 214. Weak Mutation 500: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> lineLength
   * Goal 215. Weak Mutation 502: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp Negation of result
   * Goal 216. Weak Mutation 503: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp IINC 1 result
   * Goal 217. Weak Mutation 504: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp IINC -1 result
   * Goal 218. Weak Mutation 505: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceComparisonOperator < -> -2
   * Goal 219. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 220. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 221. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 222. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 223. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 224. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 225. Weak Mutation 713: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> !=
   * Goal 226. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 227. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 228. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 229. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 230. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 231. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 232. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 233. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 234. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 235. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 236. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 237. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 238. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 239. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 240. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 241. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 242. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 243. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 244. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 245. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte) (-111);
      // Undeclared exception!
      try { 
        Base64.decodeInteger(byteArray0);
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // lineSeparator must not contain base64 characters: [\uFFFDg]
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 35
  /*
   * 455 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 4. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: root-Branch
   * Goal 5. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I3 Branch 1 IFNULL L238 - false
   * Goal 6. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I6 Branch 2 IFNE L238 - true
   * Goal 7. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I14 Branch 3 IFEQ L244 - true
   * Goal 8. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I41 Branch 4 IFLE L246 - true
   * Goal 9. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I4 Branch 5 IF_ICMPEQ L347 - true
   * Goal 10. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I4 Branch 5 IF_ICMPEQ L347 - false
   * Goal 11. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I6 Branch 6 IFLT L347 - false
   * Goal 12. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I10 Branch 7 IF_ICMPGE L347 - false
   * Goal 13. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I15 Branch 8 IF_ICMPEQ L347 - false
   * Goal 14. org.apache.commons.codec.binary.Base64.isBase64([B)Z: I8 Branch 9 IF_ICMPGE L361 - true
   * Goal 15. org.apache.commons.codec.binary.Base64.isBase64([B)Z: I8 Branch 9 IF_ICMPGE L361 - false
   * Goal 16. org.apache.commons.codec.binary.Base64.isBase64([B)Z: I15 Branch 10 IFNE L362 - true
   * Goal 17. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: I26 Branch 12 IFEQ L396 - false
   * Goal 18. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: I36 Branch 13 IF_ICMPNE L396 - false
   * Goal 19. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 20. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 21. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 22. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true
   * Goal 23. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true
   * Goal 24. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 34 IFEQ L722 - true
   * Goal 25. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - true
   * Goal 26. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - false
   * Goal 27. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I22 Branch 36 IF_ICMPNE L729 - true
   * Goal 28. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 38 TABLESWITCH L734 Case 0 - false
   * Goal 29. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 39 TABLESWITCH L734 Case 1 - true
   * Goal 30. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 40 TABLESWITCH L734 Case 2 - false
   * Goal 31. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 41 TABLESWITCH L734 Default-Case - false
   * Goal 32. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I95 Branch 42 IF_ACMPNE L743 - false
   * Goal 33. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I246 Branch 44 IFLE L763 - true
   * Goal 34. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - true
   * Goal 35. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - false
   * Goal 36. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I311 Branch 47 IFGE L772 - true
   * Goal 37. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I330 Branch 48 IF_ICMPNE L776 - true
   * Goal 38. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 39. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 40. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 41. Branch org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B: root-Branch in context: org.apache.commons.codec.binary.Base64:encodeInteger(Ljava/math/BigInteger;)[B
   * Goal 42. Branch org.apache.commons.codec.binary.Base64.isBase64([B)Z: I8 Branch 9 IF_ICMPGE L361 - true in context: org.apache.commons.codec.binary.Base64:isBase64([B)Z
   * Goal 43. Branch org.apache.commons.codec.binary.Base64.isBase64([B)Z: I8 Branch 9 IF_ICMPGE L361 - false in context: org.apache.commons.codec.binary.Base64:isBase64([B)Z
   * Goal 44. Branch org.apache.commons.codec.binary.Base64.isBase64([B)Z: I15 Branch 10 IFNE L362 - true in context: org.apache.commons.codec.binary.Base64:isBase64([B)Z
   * Goal 45. Branch org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: I26 Branch 12 IFEQ L396 - false in context: 
   * Goal 46. Branch org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: I36 Branch 13 IF_ICMPNE L396 - false in context: 
   * Goal 47. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 34 IFEQ L722 - true in context: 
   * Goal 48. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - false in context: 
   * Goal 49. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - true in context: 
   * Goal 50. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I22 Branch 36 IF_ICMPNE L729 - true in context: 
   * Goal 51. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 41 TABLESWITCH L734 Default-Case - false in context: 
   * Goal 52. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 40 TABLESWITCH L734 Case 2 - false in context: 
   * Goal 53. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 39 TABLESWITCH L734 Case 1 - true in context: 
   * Goal 54. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 38 TABLESWITCH L734 Case 0 - false in context: 
   * Goal 55. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I95 Branch 42 IF_ACMPNE L743 - false in context: 
   * Goal 56. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I246 Branch 44 IFLE L763 - true in context: 
   * Goal 57. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - true in context: 
   * Goal 58. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - false in context: 
   * Goal 59. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I311 Branch 47 IFGE L772 - true in context: 
   * Goal 60. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I330 Branch 48 IF_ICMPNE L776 - true in context: 
   * Goal 61. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 62. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 63. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 64. [Output]: org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B:NonEmptyArray
   * Goal 65. [Output]: org.apache.commons.codec.binary.Base64.isBase64([B)Z:True
   * Goal 66. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 67. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 68. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 69. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 70. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 71. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 72. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 73. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 601
   * Goal 74. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 602
   * Goal 75. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 76. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 77. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 78. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 722
   * Goal 79. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 727
   * Goal 80. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 728
   * Goal 81. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 729
   * Goal 82. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 732
   * Goal 83. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 733
   * Goal 84. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 734
   * Goal 85. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 739
   * Goal 86. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 741
   * Goal 87. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 743
   * Goal 88. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 744
   * Goal 89. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 745
   * Goal 90. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 761
   * Goal 91. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 763
   * Goal 92. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 767
   * Goal 93. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 768
   * Goal 94. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 769
   * Goal 95. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 770
   * Goal 96. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 771
   * Goal 97. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 772
   * Goal 98. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 775
   * Goal 99. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 776
   * Goal 100. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 790
   * Goal 101. org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B: Line 197
   * Goal 102. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: Line 216
   * Goal 103. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 238
   * Goal 104. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 244
   * Goal 105. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 245
   * Goal 106. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 246
   * Goal 107. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 253
   * Goal 108. org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B: Line 319
   * Goal 109. org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B: Line 320
   * Goal 110. org.apache.commons.codec.binary.Base64.isBase64(B)Z: Line 347
   * Goal 111. org.apache.commons.codec.binary.Base64.isBase64([B)Z: Line 361
   * Goal 112. org.apache.commons.codec.binary.Base64.isBase64([B)Z: Line 362
   * Goal 113. org.apache.commons.codec.binary.Base64.isBase64([B)Z: Line 366
   * Goal 114. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 115. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 391
   * Goal 116. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 393
   * Goal 117. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 394
   * Goal 118. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 396
   * Goal 119. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 397
   * Goal 120. [METHOD] org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B
   * Goal 121. [METHOD] org.apache.commons.codec.binary.Base64.isBase64([B)Z
   * Goal 122. [METHODNOEX] org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B
   * Goal 123. [METHODNOEX] org.apache.commons.codec.binary.Base64.isBase64([B)Z
   * Goal 124. Weak Mutation 5: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 125. Weak Mutation 6: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp Negation of isChunked
   * Goal 126. Weak Mutation 7: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp IINC 1 isChunked
   * Goal 127. Weak Mutation 8: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp IINC -1 isChunked
   * Goal 128. Weak Mutation 9: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - ReplaceConstant - 0 -> 1
   * Goal 129. Weak Mutation 10: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 130. Weak Mutation 12: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of isChunked
   * Goal 131. Weak Mutation 13: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC 1 isChunked
   * Goal 132. Weak Mutation 14: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC -1 isChunked
   * Goal 133. Weak Mutation 16: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of urlSafe
   * Goal 134. Weak Mutation 17: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 0
   * Goal 135. Weak Mutation 18: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 1
   * Goal 136. Weak Mutation 19: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -1
   * Goal 137. Weak Mutation 20: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 2147483646
   * Goal 138. Weak Mutation 21: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -2147483648
   * Goal 139. Weak Mutation 22: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 140. Weak Mutation 23: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator = null -> != null
   * Goal 141. Weak Mutation 24: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 142. Weak Mutation 26: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator != -> <
   * Goal 143. Weak Mutation 30: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp Negation of isChunked
   * Goal 144. Weak Mutation 31: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC 1 isChunked
   * Goal 145. Weak Mutation 32: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC -1 isChunked
   * Goal 146. Weak Mutation 33: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - ReplaceComparisonOperator == -> !=
   * Goal 147. Weak Mutation 38: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - ReplaceConstant - 0 -> 1
   * Goal 148. Weak Mutation 40: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp Negation of urlSafe
   * Goal 149. Weak Mutation 41: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC 1 urlSafe
   * Goal 150. Weak Mutation 42: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC -1 urlSafe
   * Goal 151. Weak Mutation 43: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:245 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 152. Weak Mutation 44: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp Negation of len
   * Goal 153. Weak Mutation 45: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> PEM_CHUNK_SIZE
   * Goal 154. Weak Mutation 46: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> MIME_CHUNK_SIZE
   * Goal 155. Weak Mutation 47: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> EOF
   * Goal 156. Weak Mutation 48: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> MASK_8BITS
   * Goal 157. Weak Mutation 49: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp Negation of maxResultSize
   * Goal 158. Weak Mutation 50: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp IINC 1 maxResultSize
   * Goal 159. Weak Mutation 51: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp IINC -1 maxResultSize
   * Goal 160. Weak Mutation 53: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceComparisonOperator <= -> ==
   * Goal 161. Weak Mutation 65: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:253 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 162. Weak Mutation 76: org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B:319 - ReplaceConstant - bigInteger -> 
   * Goal 163. Weak Mutation 77: org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B:320 - ReplaceConstant - 0 -> 1
   * Goal 164. Weak Mutation 79: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 165. Weak Mutation 80: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 166. Weak Mutation 81: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 167. Weak Mutation 82: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 168. Weak Mutation 83: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 0
   * Goal 169. Weak Mutation 84: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 1
   * Goal 170. Weak Mutation 85: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> -1
   * Goal 171. Weak Mutation 86: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 60
   * Goal 172. Weak Mutation 87: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 62
   * Goal 173. Weak Mutation 88: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator == -> -2
   * Goal 174. Weak Mutation 89: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator == -> >=
   * Goal 175. Weak Mutation 91: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 176. Weak Mutation 92: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 177. Weak Mutation 93: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 178. Weak Mutation 94: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 179. Weak Mutation 96: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator < -> !=
   * Goal 180. Weak Mutation 98: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 181. Weak Mutation 99: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 182. Weak Mutation 100: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 183. Weak Mutation 101: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 184. Weak Mutation 102: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 185. Weak Mutation 103: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator >= -> -1
   * Goal 186. Weak Mutation 106: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 187. Weak Mutation 107: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 188. Weak Mutation 108: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 189. Weak Mutation 109: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 190. Weak Mutation 110: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 191. Weak Mutation 111: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - -1 -> 0
   * Goal 192. Weak Mutation 112: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - -1 -> 1
   * Goal 193. Weak Mutation 113: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - -1 -> -2
   * Goal 194. Weak Mutation 115: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator == -> >=
   * Goal 195. Weak Mutation 117: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 1 -> 0
   * Goal 196. Weak Mutation 119: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceConstant - 0 -> 1
   * Goal 197. Weak Mutation 120: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 198. Weak Mutation 121: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 199. Weak Mutation 122: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> EOF
   * Goal 200. Weak Mutation 123: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> MASK_8BITS
   * Goal 201. Weak Mutation 124: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - InsertUnaryOp Negation of i
   * Goal 202. Weak Mutation 125: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - InsertUnaryOp IINC 1 i
   * Goal 203. Weak Mutation 126: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - InsertUnaryOp IINC -1 i
   * Goal 204. Weak Mutation 127: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable arrayOctet -> CHUNK_SEPARATOR
   * Goal 205. Weak Mutation 128: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceComparisonOperator >= -> -1
   * Goal 206. Weak Mutation 129: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceComparisonOperator >= -> >
   * Goal 207. Weak Mutation 131: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable arrayOctet -> CHUNK_SEPARATOR
   * Goal 208. Weak Mutation 132: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 209. Weak Mutation 133: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 210. Weak Mutation 134: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> EOF
   * Goal 211. Weak Mutation 135: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> MASK_8BITS
   * Goal 212. Weak Mutation 136: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - InsertUnaryOp Negation of i
   * Goal 213. Weak Mutation 137: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - InsertUnaryOp IINC 1 i
   * Goal 214. Weak Mutation 138: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - InsertUnaryOp IINC -1 i
   * Goal 215. Weak Mutation 139: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceComparisonOperator != -> ==
   * Goal 216. Weak Mutation 150: org.apache.commons.codec.binary.Base64.isBase64([B)Z:366 - ReplaceConstant - 1 -> 0
   * Goal 217. Weak Mutation 151: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceVariable bitlen -> PEM_CHUNK_SIZE
   * Goal 218. Weak Mutation 152: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceVariable bitlen -> MIME_CHUNK_SIZE
   * Goal 219. Weak Mutation 153: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceVariable bitlen -> EOF
   * Goal 220. Weak Mutation 154: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceVariable bitlen -> MASK_8BITS
   * Goal 221. Weak Mutation 155: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - InsertUnaryOp Negation of bitlen
   * Goal 222. Weak Mutation 156: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - InsertUnaryOp IINC 1 bitlen
   * Goal 223. Weak Mutation 157: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - InsertUnaryOp IINC -1 bitlen
   * Goal 224. Weak Mutation 158: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 7 -> 0
   * Goal 225. Weak Mutation 159: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 7 -> 1
   * Goal 226. Weak Mutation 160: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 7 -> -1
   * Goal 227. Weak Mutation 161: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 7 -> 6
   * Goal 228. Weak Mutation 162: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 7 -> 8
   * Goal 229. Weak Mutation 163: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceArithmeticOperator + -> %
   * Goal 230. Weak Mutation 164: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceArithmeticOperator + -> -
   * Goal 231. Weak Mutation 165: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceArithmeticOperator + -> *
   * Goal 232. Weak Mutation 166: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceArithmeticOperator + -> /
   * Goal 233. Weak Mutation 167: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 0
   * Goal 234. Weak Mutation 168: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 1
   * Goal 235. Weak Mutation 169: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> -1
   * Goal 236. Weak Mutation 170: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 2
   * Goal 237. Weak Mutation 171: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 4
   * Goal 238. Weak Mutation 172: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceBitwiseOperator >> I -> << I
   * Goal 239. Weak Mutation 174: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 0
   * Goal 240. Weak Mutation 175: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 1
   * Goal 241. Weak Mutation 176: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> -1
   * Goal 242. Weak Mutation 177: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 2
   * Goal 243. Weak Mutation 178: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 4
   * Goal 244. Weak Mutation 179: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceBitwiseOperator << I -> >> I
   * Goal 245. Weak Mutation 180: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceBitwiseOperator << I -> >>> I
   * Goal 246. Weak Mutation 181: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 0
   * Goal 247. Weak Mutation 182: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 1
   * Goal 248. Weak Mutation 183: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> -1
   * Goal 249. Weak Mutation 184: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 7
   * Goal 250. Weak Mutation 185: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 9
   * Goal 251. Weak Mutation 186: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator % -> +
   * Goal 252. Weak Mutation 187: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator % -> -
   * Goal 253. Weak Mutation 188: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator % -> *
   * Goal 254. Weak Mutation 189: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator % -> /
   * Goal 255. Weak Mutation 191: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceComparisonOperator == -> >=
   * Goal 256. Weak Mutation 193: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 0
   * Goal 257. Weak Mutation 194: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 1
   * Goal 258. Weak Mutation 195: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> -1
   * Goal 259. Weak Mutation 196: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 7
   * Goal 260. Weak Mutation 197: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 9
   * Goal 261. Weak Mutation 198: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator / -> +
   * Goal 262. Weak Mutation 199: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator / -> %
   * Goal 263. Weak Mutation 200: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator / -> -
   * Goal 264. Weak Mutation 201: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator / -> *
   * Goal 265. Weak Mutation 202: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 1 -> 0
   * Goal 266. Weak Mutation 203: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator + -> %
   * Goal 267. Weak Mutation 204: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator + -> -
   * Goal 268. Weak Mutation 205: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator + -> *
   * Goal 269. Weak Mutation 206: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator + -> /
   * Goal 270. Weak Mutation 207: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceVariable bitlen -> PEM_CHUNK_SIZE
   * Goal 271. Weak Mutation 208: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceVariable bitlen -> MIME_CHUNK_SIZE
   * Goal 272. Weak Mutation 209: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceVariable bitlen -> EOF
   * Goal 273. Weak Mutation 210: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceVariable bitlen -> MASK_8BITS
   * Goal 274. Weak Mutation 211: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - InsertUnaryOp Negation of bitlen
   * Goal 275. Weak Mutation 212: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - InsertUnaryOp IINC 1 bitlen
   * Goal 276. Weak Mutation 213: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - InsertUnaryOp IINC -1 bitlen
   * Goal 277. Weak Mutation 214: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 0
   * Goal 278. Weak Mutation 215: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 1
   * Goal 279. Weak Mutation 216: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> -1
   * Goal 280. Weak Mutation 217: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 7
   * Goal 281. Weak Mutation 218: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 9
   * Goal 282. Weak Mutation 219: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator / -> +
   * Goal 283. Weak Mutation 220: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator / -> %
   * Goal 284. Weak Mutation 221: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator / -> -
   * Goal 285. Weak Mutation 222: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator / -> *
   * Goal 286. Weak Mutation 223: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceComparisonOperator != -> -1
   * Goal 287. Weak Mutation 226: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:397 - ReplaceVariable bigBytes -> CHUNK_SEPARATOR
   * Goal 288. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 289. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 290. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 291. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 292. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 293. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 294. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 295. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 296. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 297. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 298. Weak Mutation 348: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> <
   * Goal 299. Weak Mutation 365: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 0
   * Goal 300. Weak Mutation 366: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 1
   * Goal 301. Weak Mutation 367: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> -1
   * Goal 302. Weak Mutation 368: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 3
   * Goal 303. Weak Mutation 369: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 5
   * Goal 304. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 305. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 306. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 307. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 308. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 309. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 310. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 311. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 312. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 313. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 314. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 315. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 316. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 317. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 318. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 319. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 320. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 321. Weak Mutation 393: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 322. Weak Mutation 583: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:722 - InsertUnaryOp Negation
   * Goal 323. Weak Mutation 584: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:722 - ReplaceComparisonOperator == -> !=
   * Goal 324. Weak Mutation 585: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 325. Weak Mutation 586: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 326. Weak Mutation 587: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> inPos
   * Goal 327. Weak Mutation 588: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> lineLength
   * Goal 328. Weak Mutation 589: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> EOF
   * Goal 329. Weak Mutation 590: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 330. Weak Mutation 591: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp Negation of inAvail
   * Goal 331. Weak Mutation 592: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp IINC 1 inAvail
   * Goal 332. Weak Mutation 593: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp IINC -1 inAvail
   * Goal 333. Weak Mutation 594: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceComparisonOperator >= -> -1
   * Goal 334. Weak Mutation 595: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceComparisonOperator >= -> ==
   * Goal 335. Weak Mutation 597: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:728 - ReplaceConstant - 1 -> 0
   * Goal 336. Weak Mutation 598: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceConstant - 0 -> 1
   * Goal 337. Weak Mutation 599: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp Negation
   * Goal 338. Weak Mutation 600: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp +1
   * Goal 339. Weak Mutation 601: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp -1
   * Goal 340. Weak Mutation 604: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceComparisonOperator != -> >
   * Goal 341. Weak Mutation 615: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 342. Weak Mutation 616: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 343. Weak Mutation 617: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> lineLength
   * Goal 344. Weak Mutation 618: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> EOF
   * Goal 345. Weak Mutation 619: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 346. Weak Mutation 620: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - InsertUnaryOp Negation
   * Goal 347. Weak Mutation 621: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - InsertUnaryOp +1
   * Goal 348. Weak Mutation 622: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - InsertUnaryOp -1
   * Goal 349. Weak Mutation 623: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:733 - InsertUnaryOp Negation
   * Goal 350. Weak Mutation 624: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:733 - InsertUnaryOp +1
   * Goal 351. Weak Mutation 625: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:733 - InsertUnaryOp -1
   * Goal 352. Weak Mutation 626: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:734 - InsertUnaryOp Negation
   * Goal 353. Weak Mutation 627: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:734 - InsertUnaryOp +1
   * Goal 354. Weak Mutation 628: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:734 - InsertUnaryOp -1
   * Goal 355. Weak Mutation 629: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceVariable buffer -> in
   * Goal 356. Weak Mutation 630: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceVariable buffer -> CHUNK_SEPARATOR
   * Goal 357. Weak Mutation 631: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp Negation
   * Goal 358. Weak Mutation 632: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp +1
   * Goal 359. Weak Mutation 633: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp -1
   * Goal 360. Weak Mutation 634: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 1 -> 0
   * Goal 361. Weak Mutation 635: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceArithmeticOperator + -> %
   * Goal 362. Weak Mutation 636: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceArithmeticOperator + -> -
   * Goal 363. Weak Mutation 637: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceArithmeticOperator + -> *
   * Goal 364. Weak Mutation 638: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceArithmeticOperator + -> /
   * Goal 365. Weak Mutation 639: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceVariable encodeTable -> CHUNK_SEPARATOR
   * Goal 366. Weak Mutation 640: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp Negation
   * Goal 367. Weak Mutation 641: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp +1
   * Goal 368. Weak Mutation 642: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp -1
   * Goal 369. Weak Mutation 643: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 2 -> 0
   * Goal 370. Weak Mutation 644: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 2 -> 1
   * Goal 371. Weak Mutation 645: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 2 -> -1
   * Goal 372. Weak Mutation 646: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 2 -> 3
   * Goal 373. Weak Mutation 647: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceBitwiseOperator >> I -> << I
   * Goal 374. Weak Mutation 649: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 63 -> 0
   * Goal 375. Weak Mutation 650: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 63 -> 1
   * Goal 376. Weak Mutation 651: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 63 -> -1
   * Goal 377. Weak Mutation 652: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 63 -> 62
   * Goal 378. Weak Mutation 653: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 63 -> 64
   * Goal 379. Weak Mutation 654: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceBitwiseOperator & -> |
   * Goal 380. Weak Mutation 655: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceBitwiseOperator & -> ^
   * Goal 381. Weak Mutation 656: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceVariable buffer -> in
   * Goal 382. Weak Mutation 657: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceVariable buffer -> CHUNK_SEPARATOR
   * Goal 383. Weak Mutation 658: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp Negation
   * Goal 384. Weak Mutation 659: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp +1
   * Goal 385. Weak Mutation 660: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp -1
   * Goal 386. Weak Mutation 661: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 1 -> 0
   * Goal 387. Weak Mutation 662: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceArithmeticOperator + -> %
   * Goal 388. Weak Mutation 663: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceArithmeticOperator + -> -
   * Goal 389. Weak Mutation 664: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceArithmeticOperator + -> *
   * Goal 390. Weak Mutation 665: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceArithmeticOperator + -> /
   * Goal 391. Weak Mutation 666: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceVariable encodeTable -> CHUNK_SEPARATOR
   * Goal 392. Weak Mutation 667: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp Negation
   * Goal 393. Weak Mutation 668: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp +1
   * Goal 394. Weak Mutation 669: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp -1
   * Goal 395. Weak Mutation 670: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 4 -> 0
   * Goal 396. Weak Mutation 671: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 4 -> 1
   * Goal 397. Weak Mutation 672: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 4 -> -1
   * Goal 398. Weak Mutation 673: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 4 -> 3
   * Goal 399. Weak Mutation 674: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 4 -> 5
   * Goal 400. Weak Mutation 675: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceBitwiseOperator << I -> >> I
   * Goal 401. Weak Mutation 676: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceBitwiseOperator << I -> >>> I
   * Goal 402. Weak Mutation 677: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 63 -> 0
   * Goal 403. Weak Mutation 678: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 63 -> 1
   * Goal 404. Weak Mutation 679: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 63 -> -1
   * Goal 405. Weak Mutation 680: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 63 -> 62
   * Goal 406. Weak Mutation 681: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 63 -> 64
   * Goal 407. Weak Mutation 682: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceBitwiseOperator & -> |
   * Goal 408. Weak Mutation 683: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceBitwiseOperator & -> ^
   * Goal 409. Weak Mutation 684: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:743 - ReplaceVariable encodeTable -> CHUNK_SEPARATOR
   * Goal 410. Weak Mutation 685: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:743 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 411. Weak Mutation 686: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:743 - ReplaceComparisonOperator != -> ==
   * Goal 412. Weak Mutation 687: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - ReplaceVariable buffer -> in
   * Goal 413. Weak Mutation 688: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - ReplaceVariable buffer -> CHUNK_SEPARATOR
   * Goal 414. Weak Mutation 689: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - InsertUnaryOp Negation
   * Goal 415. Weak Mutation 690: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - InsertUnaryOp +1
   * Goal 416. Weak Mutation 691: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - InsertUnaryOp -1
   * Goal 417. Weak Mutation 692: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - ReplaceConstant - 1 -> 0
   * Goal 418. Weak Mutation 693: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - ReplaceArithmeticOperator + -> %
   * Goal 419. Weak Mutation 694: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - ReplaceArithmeticOperator + -> -
   * Goal 420. Weak Mutation 695: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - ReplaceArithmeticOperator + -> *
   * Goal 421. Weak Mutation 696: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - ReplaceArithmeticOperator + -> /
   * Goal 422. Weak Mutation 699: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - InsertUnaryOp Negation
   * Goal 423. Weak Mutation 700: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:745 - ReplaceVariable buffer -> in
   * Goal 424. Weak Mutation 701: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:745 - ReplaceVariable buffer -> CHUNK_SEPARATOR
   * Goal 425. Weak Mutation 702: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:745 - InsertUnaryOp Negation
   * Goal 426. Weak Mutation 703: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:745 - InsertUnaryOp +1
   * Goal 427. Weak Mutation 704: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:745 - InsertUnaryOp -1
   * Goal 428. Weak Mutation 705: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:745 - ReplaceConstant - 1 -> 0
   * Goal 429. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 430. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 431. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 432. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 433. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 434. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 435. Weak Mutation 713: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> !=
   * Goal 436. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 437. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 438. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 439. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 440. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 441. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 442. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 443. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 444. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 445. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 446. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 447. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 448. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 449. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 450. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 451. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 452. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 453. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 454. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 455. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      // Undeclared exception!
      try { 
        Base64.encodeInteger(bigInteger0);
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // lineSeparator must not contain base64 characters: [\uFFFDg]
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 36
  /*
   * 80 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I4 Branch 5 IF_ICMPEQ L347 - false
   * Goal 2. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I6 Branch 6 IFLT L347 - false
   * Goal 3. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I10 Branch 7 IF_ICMPGE L347 - false
   * Goal 4. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I15 Branch 8 IF_ICMPEQ L347 - true
   * Goal 5. org.apache.commons.codec.binary.Base64.isBase64([B)Z: I8 Branch 9 IF_ICMPGE L361 - false
   * Goal 6. org.apache.commons.codec.binary.Base64.isBase64([B)Z: I15 Branch 10 IFNE L362 - false
   * Goal 7. org.apache.commons.codec.binary.Base64.isBase64([B)Z: I20 Branch 11 IFNE L362 - true
   * Goal 8. org.apache.commons.codec.binary.Base64.isBase64([B)Z: I20 Branch 11 IFNE L362 - false
   * Goal 9. Branch org.apache.commons.codec.binary.Base64.isBase64([B)Z: I8 Branch 9 IF_ICMPGE L361 - false in context: org.apache.commons.codec.binary.Base64:isBase64([B)Z
   * Goal 10. Branch org.apache.commons.codec.binary.Base64.isBase64([B)Z: I20 Branch 11 IFNE L362 - true in context: org.apache.commons.codec.binary.Base64:isBase64([B)Z
   * Goal 11. Branch org.apache.commons.codec.binary.Base64.isBase64([B)Z: I20 Branch 11 IFNE L362 - false in context: org.apache.commons.codec.binary.Base64:isBase64([B)Z
   * Goal 12. Branch org.apache.commons.codec.binary.Base64.isBase64([B)Z: I15 Branch 10 IFNE L362 - false in context: org.apache.commons.codec.binary.Base64:isBase64([B)Z
   * Goal 13. [Output]: org.apache.commons.codec.binary.Base64.isBase64([B)Z:False
   * Goal 14. org.apache.commons.codec.binary.Base64.isBase64(B)Z: Line 347
   * Goal 15. org.apache.commons.codec.binary.Base64.isBase64([B)Z: Line 361
   * Goal 16. org.apache.commons.codec.binary.Base64.isBase64([B)Z: Line 362
   * Goal 17. org.apache.commons.codec.binary.Base64.isBase64([B)Z: Line 363
   * Goal 18. [METHOD] org.apache.commons.codec.binary.Base64.isBase64([B)Z
   * Goal 19. [METHODNOEX] org.apache.commons.codec.binary.Base64.isBase64([B)Z
   * Goal 20. Weak Mutation 79: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 21. Weak Mutation 80: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 22. Weak Mutation 81: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 23. Weak Mutation 82: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 24. Weak Mutation 83: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 0
   * Goal 25. Weak Mutation 84: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 1
   * Goal 26. Weak Mutation 85: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> -1
   * Goal 27. Weak Mutation 86: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 60
   * Goal 28. Weak Mutation 87: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 62
   * Goal 29. Weak Mutation 90: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator == -> <=
   * Goal 30. Weak Mutation 91: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 31. Weak Mutation 92: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 32. Weak Mutation 93: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 33. Weak Mutation 94: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 34. Weak Mutation 96: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator < -> !=
   * Goal 35. Weak Mutation 97: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator < -> <=
   * Goal 36. Weak Mutation 98: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 37. Weak Mutation 99: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 38. Weak Mutation 100: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 39. Weak Mutation 101: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 40. Weak Mutation 102: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 41. Weak Mutation 103: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator >= -> -1
   * Goal 42. Weak Mutation 106: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 43. Weak Mutation 107: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 44. Weak Mutation 108: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 45. Weak Mutation 109: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 46. Weak Mutation 110: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 47. Weak Mutation 111: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - -1 -> 0
   * Goal 48. Weak Mutation 112: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - -1 -> 1
   * Goal 49. Weak Mutation 113: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - -1 -> -2
   * Goal 50. Weak Mutation 114: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator == -> -2
   * Goal 51. Weak Mutation 118: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 0 -> 1
   * Goal 52. Weak Mutation 119: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceConstant - 0 -> 1
   * Goal 53. Weak Mutation 120: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 54. Weak Mutation 121: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 55. Weak Mutation 122: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> EOF
   * Goal 56. Weak Mutation 123: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> MASK_8BITS
   * Goal 57. Weak Mutation 124: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - InsertUnaryOp Negation of i
   * Goal 58. Weak Mutation 125: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - InsertUnaryOp IINC 1 i
   * Goal 59. Weak Mutation 126: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - InsertUnaryOp IINC -1 i
   * Goal 60. Weak Mutation 127: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable arrayOctet -> CHUNK_SEPARATOR
   * Goal 61. Weak Mutation 128: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceComparisonOperator >= -> -1
   * Goal 62. Weak Mutation 131: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable arrayOctet -> CHUNK_SEPARATOR
   * Goal 63. Weak Mutation 132: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 64. Weak Mutation 133: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 65. Weak Mutation 134: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> EOF
   * Goal 66. Weak Mutation 135: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> MASK_8BITS
   * Goal 67. Weak Mutation 136: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - InsertUnaryOp Negation of i
   * Goal 68. Weak Mutation 137: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - InsertUnaryOp IINC 1 i
   * Goal 69. Weak Mutation 138: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - InsertUnaryOp IINC -1 i
   * Goal 70. Weak Mutation 139: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceComparisonOperator != -> ==
   * Goal 71. Weak Mutation 140: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable arrayOctet -> CHUNK_SEPARATOR
   * Goal 72. Weak Mutation 141: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 73. Weak Mutation 142: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 74. Weak Mutation 143: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> EOF
   * Goal 75. Weak Mutation 144: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> MASK_8BITS
   * Goal 76. Weak Mutation 145: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - InsertUnaryOp Negation of i
   * Goal 77. Weak Mutation 146: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - InsertUnaryOp IINC 1 i
   * Goal 78. Weak Mutation 147: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - InsertUnaryOp IINC -1 i
   * Goal 79. Weak Mutation 148: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceComparisonOperator != -> ==
   * Goal 80. Weak Mutation 149: org.apache.commons.codec.binary.Base64.isBase64([B)Z:363 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)10;
      boolean boolean0 = Base64.isBase64(byteArray0);
      assertFalse(boolean0);
  }

  //Test case number: 37
  /*
   * 24 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I4 Branch 5 IF_ICMPEQ L347 - false
   * Goal 2. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I6 Branch 6 IFLT L347 - true
   * Goal 3. Branch org.apache.commons.codec.binary.Base64.isBase64(B)Z: I4 Branch 5 IF_ICMPEQ L347 - false in context: org.apache.commons.codec.binary.Base64:isBase64(B)Z
   * Goal 4. Branch org.apache.commons.codec.binary.Base64.isBase64(B)Z: I6 Branch 6 IFLT L347 - true in context: org.apache.commons.codec.binary.Base64:isBase64(B)Z
   * Goal 5. [Output]: org.apache.commons.codec.binary.Base64.isBase64(B)Z:False
   * Goal 6. org.apache.commons.codec.binary.Base64.isBase64(B)Z: Line 347
   * Goal 7. [METHOD] org.apache.commons.codec.binary.Base64.isBase64(B)Z
   * Goal 8. [METHODNOEX] org.apache.commons.codec.binary.Base64.isBase64(B)Z
   * Goal 9. Weak Mutation 79: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 10. Weak Mutation 80: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 11. Weak Mutation 81: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 12. Weak Mutation 82: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 13. Weak Mutation 83: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 0
   * Goal 14. Weak Mutation 84: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 1
   * Goal 15. Weak Mutation 85: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> -1
   * Goal 16. Weak Mutation 86: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 60
   * Goal 17. Weak Mutation 87: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 62
   * Goal 18. Weak Mutation 90: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator == -> <=
   * Goal 19. Weak Mutation 91: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 20. Weak Mutation 92: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 21. Weak Mutation 93: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 22. Weak Mutation 94: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 23. Weak Mutation 95: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator < -> -2
   * Goal 24. Weak Mutation 118: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      boolean boolean0 = Base64.isBase64((byte) (-58));
      assertFalse(boolean0);
  }

  //Test case number: 38
  /*
   * 43 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I4 Branch 5 IF_ICMPEQ L347 - false
   * Goal 2. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I6 Branch 6 IFLT L347 - false
   * Goal 3. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I10 Branch 7 IF_ICMPGE L347 - false
   * Goal 4. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I15 Branch 8 IF_ICMPEQ L347 - false
   * Goal 5. Branch org.apache.commons.codec.binary.Base64.isBase64(B)Z: I6 Branch 6 IFLT L347 - false in context: org.apache.commons.codec.binary.Base64:isBase64(B)Z
   * Goal 6. Branch org.apache.commons.codec.binary.Base64.isBase64(B)Z: I4 Branch 5 IF_ICMPEQ L347 - false in context: org.apache.commons.codec.binary.Base64:isBase64(B)Z
   * Goal 7. Branch org.apache.commons.codec.binary.Base64.isBase64(B)Z: I15 Branch 8 IF_ICMPEQ L347 - false in context: org.apache.commons.codec.binary.Base64:isBase64(B)Z
   * Goal 8. Branch org.apache.commons.codec.binary.Base64.isBase64(B)Z: I10 Branch 7 IF_ICMPGE L347 - false in context: org.apache.commons.codec.binary.Base64:isBase64(B)Z
   * Goal 9. [Output]: org.apache.commons.codec.binary.Base64.isBase64(B)Z:True
   * Goal 10. org.apache.commons.codec.binary.Base64.isBase64(B)Z: Line 347
   * Goal 11. [METHOD] org.apache.commons.codec.binary.Base64.isBase64(B)Z
   * Goal 12. [METHODNOEX] org.apache.commons.codec.binary.Base64.isBase64(B)Z
   * Goal 13. Weak Mutation 79: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 14. Weak Mutation 80: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 15. Weak Mutation 81: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 16. Weak Mutation 82: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 17. Weak Mutation 83: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 0
   * Goal 18. Weak Mutation 84: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 1
   * Goal 19. Weak Mutation 85: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> -1
   * Goal 20. Weak Mutation 86: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 60
   * Goal 21. Weak Mutation 87: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 62
   * Goal 22. Weak Mutation 89: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator == -> >=
   * Goal 23. Weak Mutation 91: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 24. Weak Mutation 92: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 25. Weak Mutation 93: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 26. Weak Mutation 94: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 27. Weak Mutation 96: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator < -> !=
   * Goal 28. Weak Mutation 98: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 29. Weak Mutation 99: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 30. Weak Mutation 100: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 31. Weak Mutation 101: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 32. Weak Mutation 102: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 33. Weak Mutation 103: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator >= -> -1
   * Goal 34. Weak Mutation 106: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 35. Weak Mutation 107: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 36. Weak Mutation 108: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 37. Weak Mutation 109: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 38. Weak Mutation 110: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 39. Weak Mutation 111: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - -1 -> 0
   * Goal 40. Weak Mutation 112: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - -1 -> 1
   * Goal 41. Weak Mutation 113: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - -1 -> -2
   * Goal 42. Weak Mutation 115: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator == -> >=
   * Goal 43. Weak Mutation 117: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      boolean boolean0 = Base64.isBase64((byte)111);
      assertTrue(boolean0);
  }

  //Test case number: 39
  /*
   * 43 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I4 Branch 5 IF_ICMPEQ L347 - false
   * Goal 2. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I6 Branch 6 IFLT L347 - false
   * Goal 3. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I10 Branch 7 IF_ICMPGE L347 - false
   * Goal 4. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I15 Branch 8 IF_ICMPEQ L347 - true
   * Goal 5. Branch org.apache.commons.codec.binary.Base64.isBase64(B)Z: I6 Branch 6 IFLT L347 - false in context: org.apache.commons.codec.binary.Base64:isBase64(B)Z
   * Goal 6. Branch org.apache.commons.codec.binary.Base64.isBase64(B)Z: I15 Branch 8 IF_ICMPEQ L347 - true in context: org.apache.commons.codec.binary.Base64:isBase64(B)Z
   * Goal 7. Branch org.apache.commons.codec.binary.Base64.isBase64(B)Z: I4 Branch 5 IF_ICMPEQ L347 - false in context: org.apache.commons.codec.binary.Base64:isBase64(B)Z
   * Goal 8. Branch org.apache.commons.codec.binary.Base64.isBase64(B)Z: I10 Branch 7 IF_ICMPGE L347 - false in context: org.apache.commons.codec.binary.Base64:isBase64(B)Z
   * Goal 9. [Output]: org.apache.commons.codec.binary.Base64.isBase64(B)Z:False
   * Goal 10. org.apache.commons.codec.binary.Base64.isBase64(B)Z: Line 347
   * Goal 11. [METHOD] org.apache.commons.codec.binary.Base64.isBase64(B)Z
   * Goal 12. [METHODNOEX] org.apache.commons.codec.binary.Base64.isBase64(B)Z
   * Goal 13. Weak Mutation 79: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 14. Weak Mutation 80: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 15. Weak Mutation 81: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 16. Weak Mutation 82: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 17. Weak Mutation 83: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 0
   * Goal 18. Weak Mutation 84: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 1
   * Goal 19. Weak Mutation 85: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> -1
   * Goal 20. Weak Mutation 86: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 60
   * Goal 21. Weak Mutation 87: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 62
   * Goal 22. Weak Mutation 90: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator == -> <=
   * Goal 23. Weak Mutation 91: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 24. Weak Mutation 92: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 25. Weak Mutation 93: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 26. Weak Mutation 94: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 27. Weak Mutation 96: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator < -> !=
   * Goal 28. Weak Mutation 98: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 29. Weak Mutation 99: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 30. Weak Mutation 100: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 31. Weak Mutation 101: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 32. Weak Mutation 102: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 33. Weak Mutation 103: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator >= -> -1
   * Goal 34. Weak Mutation 106: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 35. Weak Mutation 107: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 36. Weak Mutation 108: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 37. Weak Mutation 109: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 38. Weak Mutation 110: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 39. Weak Mutation 111: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - -1 -> 0
   * Goal 40. Weak Mutation 112: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - -1 -> 1
   * Goal 41. Weak Mutation 113: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - -1 -> -2
   * Goal 42. Weak Mutation 114: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator == -> -2
   * Goal 43. Weak Mutation 118: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      boolean boolean0 = Base64.isBase64((byte)6);
      assertFalse(boolean0);
  }

  //Test case number: 40
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I3 Branch 1 IFNULL L238 - true
   * Goal 2. Branch org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I3 Branch 1 IFNULL L238 - true in context: org.apache.commons.codec.binary.Base64:encodeBase64([BZZI)[B
   * Goal 3. [Output]: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:Null
   * Goal 4. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 238
   * Goal 5. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 239
   * Goal 6. [METHOD] org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B
   * Goal 7. [METHODNOEX] org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B
   * Goal 8. Weak Mutation 22: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 9. Weak Mutation 23: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator = null -> != null
   * Goal 10. Weak Mutation 28: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:239 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   */

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = Base64.encodeBase64((byte[]) null, true, false, (-616));
      assertNull(byteArray0);
  }

  //Test case number: 41
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I3 Branch 1 IFNULL L238 - false
   * Goal 2. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I6 Branch 2 IFNE L238 - false
   * Goal 3. Branch org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I3 Branch 1 IFNULL L238 - false in context: org.apache.commons.codec.binary.Base64:encodeBase64([BZZI)[B
   * Goal 4. Branch org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I6 Branch 2 IFNE L238 - false in context: org.apache.commons.codec.binary.Base64:encodeBase64([BZZI)[B
   * Goal 5. [Output]: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:EmptyArray
   * Goal 6. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 238
   * Goal 7. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 239
   * Goal 8. [METHOD] org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B
   * Goal 9. [METHODNOEX] org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B
   * Goal 10. Weak Mutation 22: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 11. Weak Mutation 23: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator = null -> != null
   * Goal 12. Weak Mutation 24: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 13. Weak Mutation 25: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator != -> -1
   * Goal 14. Weak Mutation 28: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:239 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   */

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = Base64.encodeBase64(byteArray0, false, false, 43);
      assertEquals(0, byteArray1.length);
  }

  //Test case number: 42
  /*
   * 299 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I3 Branch 1 IFNULL L238 - false
   * Goal 4. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I6 Branch 2 IFNE L238 - true
   * Goal 5. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I14 Branch 3 IFEQ L244 - true
   * Goal 6. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I41 Branch 4 IFLE L246 - true
   * Goal 7. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 8. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 9. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 10. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true
   * Goal 11. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true
   * Goal 12. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 34 IFEQ L722 - true
   * Goal 13. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - true
   * Goal 14. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - false
   * Goal 15. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I22 Branch 36 IF_ICMPNE L729 - true
   * Goal 16. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 38 TABLESWITCH L734 Case 0 - false
   * Goal 17. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 39 TABLESWITCH L734 Case 1 - true
   * Goal 18. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 40 TABLESWITCH L734 Case 2 - false
   * Goal 19. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 41 TABLESWITCH L734 Default-Case - false
   * Goal 20. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I95 Branch 42 IF_ACMPNE L743 - false
   * Goal 21. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I246 Branch 44 IFLE L763 - true
   * Goal 22. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - true
   * Goal 23. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - false
   * Goal 24. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I311 Branch 47 IFGE L772 - true
   * Goal 25. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I330 Branch 48 IF_ICMPNE L776 - true
   * Goal 26. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I330 Branch 48 IF_ICMPNE L776 - false
   * Goal 27. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I421 Branch 49 IFLE L782 - true
   * Goal 28. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 29. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 30. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 31. Branch org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: root-Branch in context: org.apache.commons.codec.binary.Base64:encodeBase64([BZZ)[B
   * Goal 32. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 34 IFEQ L722 - true in context: 
   * Goal 33. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - false in context: 
   * Goal 34. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - true in context: 
   * Goal 35. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I22 Branch 36 IF_ICMPNE L729 - true in context: 
   * Goal 36. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 41 TABLESWITCH L734 Default-Case - false in context: 
   * Goal 37. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 40 TABLESWITCH L734 Case 2 - false in context: 
   * Goal 38. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 39 TABLESWITCH L734 Case 1 - true in context: 
   * Goal 39. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 38 TABLESWITCH L734 Case 0 - false in context: 
   * Goal 40. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I95 Branch 42 IF_ACMPNE L743 - false in context: 
   * Goal 41. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I246 Branch 44 IFLE L763 - true in context: 
   * Goal 42. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - true in context: 
   * Goal 43. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - false in context: 
   * Goal 44. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I311 Branch 47 IFGE L772 - true in context: 
   * Goal 45. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I330 Branch 48 IF_ICMPNE L776 - false in context: 
   * Goal 46. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I330 Branch 48 IF_ICMPNE L776 - true in context: 
   * Goal 47. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I421 Branch 49 IFLE L782 - true in context: 
   * Goal 48. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 49. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 50. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 51. [Output]: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:NonEmptyArray
   * Goal 52. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 53. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 54. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 55. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 56. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 57. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 58. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 59. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 601
   * Goal 60. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 602
   * Goal 61. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 62. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 63. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 64. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 722
   * Goal 65. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 727
   * Goal 66. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 728
   * Goal 67. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 729
   * Goal 68. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 732
   * Goal 69. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 733
   * Goal 70. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 734
   * Goal 71. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 739
   * Goal 72. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 741
   * Goal 73. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 743
   * Goal 74. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 744
   * Goal 75. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 745
   * Goal 76. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 761
   * Goal 77. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 763
   * Goal 78. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 767
   * Goal 79. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 768
   * Goal 80. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 769
   * Goal 81. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 770
   * Goal 82. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 771
   * Goal 83. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 772
   * Goal 84. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 775
   * Goal 85. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 776
   * Goal 86. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 777
   * Goal 87. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 778
   * Goal 88. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 779
   * Goal 89. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 780
   * Goal 90. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 781
   * Goal 91. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 782
   * Goal 92. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 790
   * Goal 93. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: Line 216
   * Goal 94. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 238
   * Goal 95. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 244
   * Goal 96. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 245
   * Goal 97. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 246
   * Goal 98. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 253
   * Goal 99. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 100. [METHOD] org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B
   * Goal 101. [METHODNOEX] org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B
   * Goal 102. Weak Mutation 10: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 103. Weak Mutation 12: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of isChunked
   * Goal 104. Weak Mutation 13: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC 1 isChunked
   * Goal 105. Weak Mutation 14: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC -1 isChunked
   * Goal 106. Weak Mutation 16: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of urlSafe
   * Goal 107. Weak Mutation 17: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 0
   * Goal 108. Weak Mutation 18: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 1
   * Goal 109. Weak Mutation 19: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -1
   * Goal 110. Weak Mutation 20: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 2147483646
   * Goal 111. Weak Mutation 21: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -2147483648
   * Goal 112. Weak Mutation 22: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 113. Weak Mutation 23: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator = null -> != null
   * Goal 114. Weak Mutation 24: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 115. Weak Mutation 26: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator != -> <
   * Goal 116. Weak Mutation 30: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp Negation of isChunked
   * Goal 117. Weak Mutation 31: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC 1 isChunked
   * Goal 118. Weak Mutation 32: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC -1 isChunked
   * Goal 119. Weak Mutation 33: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - ReplaceComparisonOperator == -> !=
   * Goal 120. Weak Mutation 38: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - ReplaceConstant - 0 -> 1
   * Goal 121. Weak Mutation 40: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp Negation of urlSafe
   * Goal 122. Weak Mutation 41: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC 1 urlSafe
   * Goal 123. Weak Mutation 42: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC -1 urlSafe
   * Goal 124. Weak Mutation 43: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:245 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 125. Weak Mutation 44: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp Negation of len
   * Goal 126. Weak Mutation 45: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> PEM_CHUNK_SIZE
   * Goal 127. Weak Mutation 46: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> MIME_CHUNK_SIZE
   * Goal 128. Weak Mutation 47: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> EOF
   * Goal 129. Weak Mutation 48: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> MASK_8BITS
   * Goal 130. Weak Mutation 49: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp Negation of maxResultSize
   * Goal 131. Weak Mutation 50: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp IINC 1 maxResultSize
   * Goal 132. Weak Mutation 51: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp IINC -1 maxResultSize
   * Goal 133. Weak Mutation 53: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceComparisonOperator <= -> ==
   * Goal 134. Weak Mutation 65: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:253 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 135. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 136. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 137. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 138. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 139. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 140. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 141. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 142. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 143. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 144. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 145. Weak Mutation 348: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> <
   * Goal 146. Weak Mutation 365: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 0
   * Goal 147. Weak Mutation 366: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 1
   * Goal 148. Weak Mutation 367: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> -1
   * Goal 149. Weak Mutation 368: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 3
   * Goal 150. Weak Mutation 369: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 5
   * Goal 151. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 152. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 153. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 154. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 155. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 156. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 157. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 158. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 159. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 160. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 161. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 162. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 163. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 164. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 165. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 166. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 167. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 168. Weak Mutation 393: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 169. Weak Mutation 583: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:722 - InsertUnaryOp Negation
   * Goal 170. Weak Mutation 584: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:722 - ReplaceComparisonOperator == -> !=
   * Goal 171. Weak Mutation 585: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 172. Weak Mutation 586: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 173. Weak Mutation 587: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> inPos
   * Goal 174. Weak Mutation 588: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> lineLength
   * Goal 175. Weak Mutation 589: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> EOF
   * Goal 176. Weak Mutation 590: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 177. Weak Mutation 591: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp Negation of inAvail
   * Goal 178. Weak Mutation 592: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp IINC 1 inAvail
   * Goal 179. Weak Mutation 593: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp IINC -1 inAvail
   * Goal 180. Weak Mutation 594: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceComparisonOperator >= -> -1
   * Goal 181. Weak Mutation 595: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceComparisonOperator >= -> ==
   * Goal 182. Weak Mutation 597: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:728 - ReplaceConstant - 1 -> 0
   * Goal 183. Weak Mutation 598: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceConstant - 0 -> 1
   * Goal 184. Weak Mutation 599: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp Negation
   * Goal 185. Weak Mutation 600: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp +1
   * Goal 186. Weak Mutation 601: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp -1
   * Goal 187. Weak Mutation 604: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceComparisonOperator != -> >
   * Goal 188. Weak Mutation 615: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 189. Weak Mutation 616: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 190. Weak Mutation 617: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> lineLength
   * Goal 191. Weak Mutation 618: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> EOF
   * Goal 192. Weak Mutation 619: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 193. Weak Mutation 620: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - InsertUnaryOp Negation
   * Goal 194. Weak Mutation 621: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - InsertUnaryOp +1
   * Goal 195. Weak Mutation 622: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - InsertUnaryOp -1
   * Goal 196. Weak Mutation 623: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:733 - InsertUnaryOp Negation
   * Goal 197. Weak Mutation 624: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:733 - InsertUnaryOp +1
   * Goal 198. Weak Mutation 625: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:733 - InsertUnaryOp -1
   * Goal 199. Weak Mutation 626: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:734 - InsertUnaryOp Negation
   * Goal 200. Weak Mutation 627: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:734 - InsertUnaryOp +1
   * Goal 201. Weak Mutation 628: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:734 - InsertUnaryOp -1
   * Goal 202. Weak Mutation 629: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceVariable buffer -> in
   * Goal 203. Weak Mutation 630: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceVariable buffer -> CHUNK_SEPARATOR
   * Goal 204. Weak Mutation 631: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp Negation
   * Goal 205. Weak Mutation 632: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp +1
   * Goal 206. Weak Mutation 633: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp -1
   * Goal 207. Weak Mutation 634: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 1 -> 0
   * Goal 208. Weak Mutation 635: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceArithmeticOperator + -> %
   * Goal 209. Weak Mutation 636: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceArithmeticOperator + -> -
   * Goal 210. Weak Mutation 637: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceArithmeticOperator + -> *
   * Goal 211. Weak Mutation 638: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceArithmeticOperator + -> /
   * Goal 212. Weak Mutation 639: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceVariable encodeTable -> CHUNK_SEPARATOR
   * Goal 213. Weak Mutation 640: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp Negation
   * Goal 214. Weak Mutation 641: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp +1
   * Goal 215. Weak Mutation 642: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp -1
   * Goal 216. Weak Mutation 643: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 2 -> 0
   * Goal 217. Weak Mutation 644: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 2 -> 1
   * Goal 218. Weak Mutation 645: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 2 -> -1
   * Goal 219. Weak Mutation 646: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 2 -> 3
   * Goal 220. Weak Mutation 649: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 63 -> 0
   * Goal 221. Weak Mutation 650: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 63 -> 1
   * Goal 222. Weak Mutation 651: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 63 -> -1
   * Goal 223. Weak Mutation 652: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 63 -> 62
   * Goal 224. Weak Mutation 653: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 63 -> 64
   * Goal 225. Weak Mutation 654: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceBitwiseOperator & -> |
   * Goal 226. Weak Mutation 655: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceBitwiseOperator & -> ^
   * Goal 227. Weak Mutation 656: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceVariable buffer -> in
   * Goal 228. Weak Mutation 657: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceVariable buffer -> CHUNK_SEPARATOR
   * Goal 229. Weak Mutation 658: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp Negation
   * Goal 230. Weak Mutation 659: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp +1
   * Goal 231. Weak Mutation 660: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp -1
   * Goal 232. Weak Mutation 661: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 1 -> 0
   * Goal 233. Weak Mutation 662: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceArithmeticOperator + -> %
   * Goal 234. Weak Mutation 663: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceArithmeticOperator + -> -
   * Goal 235. Weak Mutation 664: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceArithmeticOperator + -> *
   * Goal 236. Weak Mutation 665: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceArithmeticOperator + -> /
   * Goal 237. Weak Mutation 666: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceVariable encodeTable -> CHUNK_SEPARATOR
   * Goal 238. Weak Mutation 667: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp Negation
   * Goal 239. Weak Mutation 668: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp +1
   * Goal 240. Weak Mutation 669: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp -1
   * Goal 241. Weak Mutation 670: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 4 -> 0
   * Goal 242. Weak Mutation 671: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 4 -> 1
   * Goal 243. Weak Mutation 672: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 4 -> -1
   * Goal 244. Weak Mutation 673: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 4 -> 3
   * Goal 245. Weak Mutation 674: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 4 -> 5
   * Goal 246. Weak Mutation 677: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 63 -> 0
   * Goal 247. Weak Mutation 678: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 63 -> 1
   * Goal 248. Weak Mutation 679: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 63 -> -1
   * Goal 249. Weak Mutation 680: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 63 -> 62
   * Goal 250. Weak Mutation 681: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 63 -> 64
   * Goal 251. Weak Mutation 682: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceBitwiseOperator & -> |
   * Goal 252. Weak Mutation 683: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceBitwiseOperator & -> ^
   * Goal 253. Weak Mutation 684: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:743 - ReplaceVariable encodeTable -> CHUNK_SEPARATOR
   * Goal 254. Weak Mutation 685: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:743 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 255. Weak Mutation 686: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:743 - ReplaceComparisonOperator != -> ==
   * Goal 256. Weak Mutation 687: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - ReplaceVariable buffer -> in
   * Goal 257. Weak Mutation 688: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - ReplaceVariable buffer -> CHUNK_SEPARATOR
   * Goal 258. Weak Mutation 689: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - InsertUnaryOp Negation
   * Goal 259. Weak Mutation 690: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - InsertUnaryOp +1
   * Goal 260. Weak Mutation 691: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - InsertUnaryOp -1
   * Goal 261. Weak Mutation 692: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - ReplaceConstant - 1 -> 0
   * Goal 262. Weak Mutation 693: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - ReplaceArithmeticOperator + -> %
   * Goal 263. Weak Mutation 694: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - ReplaceArithmeticOperator + -> -
   * Goal 264. Weak Mutation 695: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - ReplaceArithmeticOperator + -> *
   * Goal 265. Weak Mutation 696: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - ReplaceArithmeticOperator + -> /
   * Goal 266. Weak Mutation 699: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - InsertUnaryOp Negation
   * Goal 267. Weak Mutation 700: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:745 - ReplaceVariable buffer -> in
   * Goal 268. Weak Mutation 701: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:745 - ReplaceVariable buffer -> CHUNK_SEPARATOR
   * Goal 269. Weak Mutation 702: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:745 - InsertUnaryOp Negation
   * Goal 270. Weak Mutation 703: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:745 - InsertUnaryOp +1
   * Goal 271. Weak Mutation 704: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:745 - InsertUnaryOp -1
   * Goal 272. Weak Mutation 705: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:745 - ReplaceConstant - 1 -> 0
   * Goal 273. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 274. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 275. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 276. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 277. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 278. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 279. Weak Mutation 713: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> !=
   * Goal 280. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 281. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 282. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 283. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 284. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 285. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 286. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 287. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 288. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 289. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 290. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 291. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 292. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 293. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 294. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 295. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 296. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 297. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 298. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 299. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      // Undeclared exception!
      try { 
        Base64.encodeBase64(byteArray0, false, false);
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // lineSeparator must not contain base64 characters: [\uFFFDg]
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 43
  /*
   * 103 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 2. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 3. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 4. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true
   * Goal 5. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - false
   * Goal 6. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 7. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 8. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 9. org.apache.commons.codec.binary.Base64.isUrlSafe()Z: I5 Branch 54 IF_ACMPNE L811 - false
   * Goal 10. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 11. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 12. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 13. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 14. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - false in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 15. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 16. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 17. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 18. Branch org.apache.commons.codec.binary.Base64.isUrlSafe()Z: I5 Branch 54 IF_ACMPNE L811 - false in context: org.apache.commons.codec.binary.Base64:isUrlSafe()Z
   * Goal 19. [Output]: org.apache.commons.codec.binary.Base64.isUrlSafe()Z:True
   * Goal 20. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 21. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 22. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 23. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 24. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 25. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 601
   * Goal 26. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 602
   * Goal 27. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 28. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 29. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 30. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 31. org.apache.commons.codec.binary.Base64.isUrlSafe()Z: Line 811
   * Goal 32. [METHOD] org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 33. [METHOD] org.apache.commons.codec.binary.Base64.isUrlSafe()Z
   * Goal 34. [METHODNOEX] org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 35. [METHODNOEX] org.apache.commons.codec.binary.Base64.isUrlSafe()Z
   * Goal 36. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 37. Weak Mutation 331: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceVariable lineSeparator -> CHUNK_SEPARATOR
   * Goal 38. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 39. Weak Mutation 333: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceVariable lineSeparator -> CHUNK_SEPARATOR
   * Goal 40. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 41. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 42. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 43. Weak Mutation 340: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> lineLength
   * Goal 44. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 45. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 46. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 47. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 48. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 49. Weak Mutation 347: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> ==
   * Goal 50. Weak Mutation 365: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 0
   * Goal 51. Weak Mutation 366: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 1
   * Goal 52. Weak Mutation 367: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> -1
   * Goal 53. Weak Mutation 368: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 3
   * Goal 54. Weak Mutation 369: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 5
   * Goal 55. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 56. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 57. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 58. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 59. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 60. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 61. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 62. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 63. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 64. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 65. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 66. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 67. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 68. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 69. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 70. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 71. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 72. Weak Mutation 392: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable URL_SAFE_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 73. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 74. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 75. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 76. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 77. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 78. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 79. Weak Mutation 714: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> <=
   * Goal 80. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 81. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 82. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 83. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 84. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 85. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 86. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 87. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 88. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 89. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 90. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 91. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 92. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 93. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 94. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 95. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 96. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 97. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 98. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 99. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   * Goal 100. Weak Mutation 740: org.apache.commons.codec.binary.Base64.isUrlSafe()Z:811 - ReplaceVariable encodeTable -> CHUNK_SEPARATOR
   * Goal 101. Weak Mutation 741: org.apache.commons.codec.binary.Base64.isUrlSafe()Z:811 - ReplaceVariable URL_SAFE_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 102. Weak Mutation 742: org.apache.commons.codec.binary.Base64.isUrlSafe()Z:811 - ReplaceComparisonOperator != -> ==
   * Goal 103. Weak Mutation 743: org.apache.commons.codec.binary.Base64.isUrlSafe()Z:811 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      CodecPolicy codecPolicy0 = CodecPolicy.STRICT;
      Base64 base64_0 = new Base64((-3801), byteArray0, true, codecPolicy0);
      boolean boolean0 = base64_0.isUrlSafe();
      assertTrue(boolean0);
  }

  //Test case number: 44
  /*
   * 121 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.<init>(I[B)V: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.<init>(I)V: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 4. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 5. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 6. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 7. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - false
   * Goal 8. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true
   * Goal 9. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 10. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 11. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 12. org.apache.commons.codec.binary.Base64.isUrlSafe()Z: I5 Branch 54 IF_ACMPNE L811 - true
   * Goal 13. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch in context: org.apache.commons.codec.binary.Base64:<init>(I[BZ)V
   * Goal 14. Branch org.apache.commons.codec.binary.Base64.<init>(I[B)V: root-Branch in context: org.apache.commons.codec.binary.Base64:<init>(I[B)V
   * Goal 15. Branch org.apache.commons.codec.binary.Base64.<init>(I)V: root-Branch in context: org.apache.commons.codec.binary.Base64:<init>(I)V
   * Goal 16. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 17. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 18. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 19. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - false in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 20. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 21. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 22. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 23. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 24. Branch org.apache.commons.codec.binary.Base64.isUrlSafe()Z: I5 Branch 54 IF_ACMPNE L811 - true in context: org.apache.commons.codec.binary.Base64:isUrlSafe()Z
   * Goal 25. [Output]: org.apache.commons.codec.binary.Base64.isUrlSafe()Z:False
   * Goal 26. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 494
   * Goal 27. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 495
   * Goal 28. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 521
   * Goal 29. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 522
   * Goal 30. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 31. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 32. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 33. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 34. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 35. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 36. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 37. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 597
   * Goal 38. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 598
   * Goal 39. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 599
   * Goal 40. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 41. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 42. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 43. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 44. org.apache.commons.codec.binary.Base64.isUrlSafe()Z: Line 811
   * Goal 45. [METHOD] org.apache.commons.codec.binary.Base64.<init>(I)V
   * Goal 46. [METHOD] org.apache.commons.codec.binary.Base64.isUrlSafe()Z
   * Goal 47. [METHODNOEX] org.apache.commons.codec.binary.Base64.<init>(I)V
   * Goal 48. [METHODNOEX] org.apache.commons.codec.binary.Base64.isUrlSafe()Z
   * Goal 49. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 50. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 51. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 52. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 53. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 54. Weak Mutation 340: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> lineLength
   * Goal 55. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 56. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 57. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 58. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 59. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 60. Weak Mutation 346: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> -1
   * Goal 61. Weak Mutation 349: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> 0
   * Goal 62. Weak Mutation 350: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> 1
   * Goal 63. Weak Mutation 351: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> -1
   * Goal 64. Weak Mutation 352: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> 3
   * Goal 65. Weak Mutation 353: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> 5
   * Goal 66. Weak Mutation 355: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceArithmeticOperator + -> %
   * Goal 67. Weak Mutation 356: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceArithmeticOperator + -> -
   * Goal 68. Weak Mutation 357: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceArithmeticOperator + -> *
   * Goal 69. Weak Mutation 358: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceArithmeticOperator + -> /
   * Goal 70. Weak Mutation 361: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:599 - ReplaceConstant - 0 -> 1
   * Goal 71. Weak Mutation 362: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:599 - ReplaceVariable lineSeparator -> CHUNK_SEPARATOR
   * Goal 72. Weak Mutation 363: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:599 - ReplaceConstant - 0 -> 1
   * Goal 73. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 74. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 75. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 76. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 77. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 78. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 79. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 80. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 81. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 82. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 83. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 84. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 85. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 86. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 87. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 88. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 89. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 90. Weak Mutation 393: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 91. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 92. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 93. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 94. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 95. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 96. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 97. Weak Mutation 713: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> !=
   * Goal 98. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 99. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 100. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 101. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 102. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 103. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 104. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 105. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 106. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 107. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 108. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 109. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 110. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 111. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 112. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 113. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 114. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 115. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 116. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 117. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   * Goal 118. Weak Mutation 740: org.apache.commons.codec.binary.Base64.isUrlSafe()Z:811 - ReplaceVariable encodeTable -> CHUNK_SEPARATOR
   * Goal 119. Weak Mutation 741: org.apache.commons.codec.binary.Base64.isUrlSafe()Z:811 - ReplaceVariable URL_SAFE_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 120. Weak Mutation 742: org.apache.commons.codec.binary.Base64.isUrlSafe()Z:811 - ReplaceComparisonOperator != -> ==
   * Goal 121. Weak Mutation 744: org.apache.commons.codec.binary.Base64.isUrlSafe()Z:811 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Base64 base64_0 = null;
      try {
        base64_0 = new Base64((byte)6);
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // lineSeparator must not contain base64 characters: [\uFFFDg]
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 45
  /*
   * 110 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.<init>(Z)V: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 4. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 5. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 6. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - false
   * Goal 7. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - false
   * Goal 8. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 9. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - true
   * Goal 10. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 11. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 12. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch in context: org.apache.commons.codec.binary.Base64:<init>(I[BZ)V
   * Goal 13. Branch org.apache.commons.codec.binary.Base64.<init>(Z)V: root-Branch in context: org.apache.commons.codec.binary.Base64:<init>(Z)V
   * Goal 14. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 15. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 16. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 17. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - false in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 18. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - false in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 19. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - true in context: 
   * Goal 20. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 21. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 22. [Output]: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:False
   * Goal 23. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 24. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 25. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 26. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 27. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 28. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 29. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 30. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 597
   * Goal 31. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 598
   * Goal 32. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 599
   * Goal 33. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 34. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 35. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 36. org.apache.commons.codec.binary.Base64.<init>(Z)V: Line 471
   * Goal 37. org.apache.commons.codec.binary.Base64.<init>(Z)V: Line 472
   * Goal 38. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 39. [METHOD] org.apache.commons.codec.binary.Base64.<init>(Z)V
   * Goal 40. [METHOD] org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z
   * Goal 41. [METHODNOEX] org.apache.commons.codec.binary.Base64.<init>(Z)V
   * Goal 42. [METHODNOEX] org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z
   * Goal 43. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 44. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 45. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 46. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 47. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 48. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 49. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 50. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 51. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 52. Weak Mutation 346: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> -1
   * Goal 53. Weak Mutation 349: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> 0
   * Goal 54. Weak Mutation 350: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> 1
   * Goal 55. Weak Mutation 351: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> -1
   * Goal 56. Weak Mutation 352: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> 3
   * Goal 57. Weak Mutation 353: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> 5
   * Goal 58. Weak Mutation 355: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceArithmeticOperator + -> %
   * Goal 59. Weak Mutation 356: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceArithmeticOperator + -> -
   * Goal 60. Weak Mutation 357: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceArithmeticOperator + -> *
   * Goal 61. Weak Mutation 358: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceArithmeticOperator + -> /
   * Goal 62. Weak Mutation 361: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:599 - ReplaceConstant - 0 -> 1
   * Goal 63. Weak Mutation 362: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:599 - ReplaceVariable lineSeparator -> CHUNK_SEPARATOR
   * Goal 64. Weak Mutation 363: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:599 - ReplaceConstant - 0 -> 1
   * Goal 65. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 66. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 67. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 68. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 69. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 70. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 71. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 72. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 73. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 74. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 75. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 76. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 77. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 78. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 79. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 80. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 81. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 82. Weak Mutation 392: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable URL_SAFE_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 83. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 84. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 85. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 86. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 87. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 88. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 89. Weak Mutation 713: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> !=
   * Goal 90. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 91. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 92. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 93. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 94. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 95. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 96. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 97. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 98. Weak Mutation 724: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> ==
   * Goal 99. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 100. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 101. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 102. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 103. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 104. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 105. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 106. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 107. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 108. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 109. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 110. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Base64 base64_0 = null;
      try {
        base64_0 = new Base64(true);
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // lineSeparator must not contain base64 characters: [\uFFFDg]
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 46
  /*
   * 226 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B: root-Branch
   * Goal 4. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I3 Branch 1 IFNULL L238 - false
   * Goal 5. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I6 Branch 2 IFNE L238 - true
   * Goal 6. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I14 Branch 3 IFEQ L244 - true
   * Goal 7. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I41 Branch 4 IFLE L246 - true
   * Goal 8. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 9. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 10. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 11. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true
   * Goal 12. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - false
   * Goal 13. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 34 IFEQ L722 - true
   * Goal 14. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - true
   * Goal 15. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - false
   * Goal 16. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I22 Branch 36 IF_ICMPNE L729 - true
   * Goal 17. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 38 TABLESWITCH L734 Case 0 - false
   * Goal 18. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 39 TABLESWITCH L734 Case 1 - false
   * Goal 19. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 40 TABLESWITCH L734 Case 2 - true
   * Goal 20. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 41 TABLESWITCH L734 Default-Case - false
   * Goal 21. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I188 Branch 43 IF_ACMPNE L754 - true
   * Goal 22. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I246 Branch 44 IFLE L763 - true
   * Goal 23. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - true
   * Goal 24. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - false
   * Goal 25. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I311 Branch 47 IFGE L772 - true
   * Goal 26. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I330 Branch 48 IF_ICMPNE L776 - true
   * Goal 27. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 28. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 29. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 30. Branch org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B: root-Branch in context: org.apache.commons.codec.binary.Base64:encodeBase64URLSafe([B)[B
   * Goal 31. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 34 IFEQ L722 - true in context: 
   * Goal 32. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - false in context: 
   * Goal 33. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - true in context: 
   * Goal 34. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I22 Branch 36 IF_ICMPNE L729 - true in context: 
   * Goal 35. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 41 TABLESWITCH L734 Default-Case - false in context: 
   * Goal 36. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 40 TABLESWITCH L734 Case 2 - true in context: 
   * Goal 37. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 38 TABLESWITCH L734 Case 0 - false in context: 
   * Goal 38. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 39 TABLESWITCH L734 Case 1 - false in context: 
   * Goal 39. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I188 Branch 43 IF_ACMPNE L754 - true in context: 
   * Goal 40. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I246 Branch 44 IFLE L763 - true in context: 
   * Goal 41. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - true in context: 
   * Goal 42. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - false in context: 
   * Goal 43. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I311 Branch 47 IFGE L772 - true in context: 
   * Goal 44. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I330 Branch 48 IF_ICMPNE L776 - true in context: 
   * Goal 45. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 46. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 47. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 48. [Output]: org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B:NonEmptyArray
   * Goal 49. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 50. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 51. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 52. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 53. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 54. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 55. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 56. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 601
   * Goal 57. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 602
   * Goal 58. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 59. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 60. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 61. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 722
   * Goal 62. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 727
   * Goal 63. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 728
   * Goal 64. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 729
   * Goal 65. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 732
   * Goal 66. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 733
   * Goal 67. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 734
   * Goal 68. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 750
   * Goal 69. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 751
   * Goal 70. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 752
   * Goal 71. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 754
   * Goal 72. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 761
   * Goal 73. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 763
   * Goal 74. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 767
   * Goal 75. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 768
   * Goal 76. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 769
   * Goal 77. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 770
   * Goal 78. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 771
   * Goal 79. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 772
   * Goal 80. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 775
   * Goal 81. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 776
   * Goal 82. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 790
   * Goal 83. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: Line 216
   * Goal 84. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 238
   * Goal 85. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 244
   * Goal 86. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 245
   * Goal 87. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 246
   * Goal 88. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 253
   * Goal 89. org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B: Line 292
   * Goal 90. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 91. [METHOD] org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B
   * Goal 92. [METHODNOEX] org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B
   * Goal 93. Weak Mutation 10: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 94. Weak Mutation 11: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable isChunked -> urlSafe
   * Goal 95. Weak Mutation 12: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of isChunked
   * Goal 96. Weak Mutation 13: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC 1 isChunked
   * Goal 97. Weak Mutation 14: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC -1 isChunked
   * Goal 98. Weak Mutation 15: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable urlSafe -> isChunked
   * Goal 99. Weak Mutation 16: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of urlSafe
   * Goal 100. Weak Mutation 17: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 0
   * Goal 101. Weak Mutation 18: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 1
   * Goal 102. Weak Mutation 19: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -1
   * Goal 103. Weak Mutation 20: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 2147483646
   * Goal 104. Weak Mutation 21: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -2147483648
   * Goal 105. Weak Mutation 22: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 106. Weak Mutation 23: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator = null -> != null
   * Goal 107. Weak Mutation 24: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 108. Weak Mutation 26: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator != -> <
   * Goal 109. Weak Mutation 29: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - ReplaceVariable isChunked -> urlSafe
   * Goal 110. Weak Mutation 30: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp Negation of isChunked
   * Goal 111. Weak Mutation 31: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC 1 isChunked
   * Goal 112. Weak Mutation 32: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC -1 isChunked
   * Goal 113. Weak Mutation 33: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - ReplaceComparisonOperator == -> !=
   * Goal 114. Weak Mutation 38: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - ReplaceConstant - 0 -> 1
   * Goal 115. Weak Mutation 39: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - ReplaceVariable urlSafe -> isChunked
   * Goal 116. Weak Mutation 40: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp Negation of urlSafe
   * Goal 117. Weak Mutation 41: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC 1 urlSafe
   * Goal 118. Weak Mutation 42: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC -1 urlSafe
   * Goal 119. Weak Mutation 43: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:245 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 120. Weak Mutation 44: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp Negation of len
   * Goal 121. Weak Mutation 45: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> PEM_CHUNK_SIZE
   * Goal 122. Weak Mutation 46: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> MIME_CHUNK_SIZE
   * Goal 123. Weak Mutation 47: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> EOF
   * Goal 124. Weak Mutation 48: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> MASK_8BITS
   * Goal 125. Weak Mutation 49: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp Negation of maxResultSize
   * Goal 126. Weak Mutation 50: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp IINC 1 maxResultSize
   * Goal 127. Weak Mutation 51: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp IINC -1 maxResultSize
   * Goal 128. Weak Mutation 53: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceComparisonOperator <= -> ==
   * Goal 129. Weak Mutation 65: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:253 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 130. Weak Mutation 70: org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B:292 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 131. Weak Mutation 71: org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B:292 - ReplaceConstant - 0 -> 1
   * Goal 132. Weak Mutation 72: org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B:292 - ReplaceConstant - 1 -> 0
   * Goal 133. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 134. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 135. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 136. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 137. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 138. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 139. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 140. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 141. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 142. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 143. Weak Mutation 348: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> <
   * Goal 144. Weak Mutation 365: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 0
   * Goal 145. Weak Mutation 366: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 1
   * Goal 146. Weak Mutation 367: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> -1
   * Goal 147. Weak Mutation 368: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 3
   * Goal 148. Weak Mutation 369: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 5
   * Goal 149. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 150. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 151. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 152. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 153. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 154. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 155. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 156. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 157. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 158. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 159. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 160. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 161. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 162. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 163. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 164. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 165. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 166. Weak Mutation 392: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable URL_SAFE_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 167. Weak Mutation 583: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:722 - InsertUnaryOp Negation
   * Goal 168. Weak Mutation 584: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:722 - ReplaceComparisonOperator == -> !=
   * Goal 169. Weak Mutation 585: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 170. Weak Mutation 586: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 171. Weak Mutation 587: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> inPos
   * Goal 172. Weak Mutation 588: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> lineLength
   * Goal 173. Weak Mutation 589: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> EOF
   * Goal 174. Weak Mutation 590: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 175. Weak Mutation 591: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp Negation of inAvail
   * Goal 176. Weak Mutation 592: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp IINC 1 inAvail
   * Goal 177. Weak Mutation 593: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp IINC -1 inAvail
   * Goal 178. Weak Mutation 594: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceComparisonOperator >= -> -1
   * Goal 179. Weak Mutation 595: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceComparisonOperator >= -> ==
   * Goal 180. Weak Mutation 597: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:728 - ReplaceConstant - 1 -> 0
   * Goal 181. Weak Mutation 598: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceConstant - 0 -> 1
   * Goal 182. Weak Mutation 599: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp Negation
   * Goal 183. Weak Mutation 600: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp +1
   * Goal 184. Weak Mutation 601: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp -1
   * Goal 185. Weak Mutation 604: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceComparisonOperator != -> >
   * Goal 186. Weak Mutation 615: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 187. Weak Mutation 616: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 188. Weak Mutation 617: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> lineLength
   * Goal 189. Weak Mutation 618: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> EOF
   * Goal 190. Weak Mutation 619: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 191. Weak Mutation 620: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - InsertUnaryOp Negation
   * Goal 192. Weak Mutation 621: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - InsertUnaryOp +1
   * Goal 193. Weak Mutation 622: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - InsertUnaryOp -1
   * Goal 194. Weak Mutation 623: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:733 - InsertUnaryOp Negation
   * Goal 195. Weak Mutation 624: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:733 - InsertUnaryOp +1
   * Goal 196. Weak Mutation 625: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:733 - InsertUnaryOp -1
   * Goal 197. Weak Mutation 626: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:734 - InsertUnaryOp Negation
   * Goal 198. Weak Mutation 627: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:734 - InsertUnaryOp +1
   * Goal 199. Weak Mutation 628: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:734 - InsertUnaryOp -1
   * Goal 200. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 201. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 202. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 203. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 204. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 205. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 206. Weak Mutation 713: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> !=
   * Goal 207. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 208. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 209. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 210. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 211. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 212. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 213. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 214. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 215. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 216. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 217. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 218. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 219. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 220. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 221. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 222. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 223. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 224. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 225. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 226. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        Base64.encodeBase64URLSafe(byteArray0);
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // lineSeparator must not contain base64 characters: [\uFFFDg]
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 47
  /*
   * 567 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.<init>(I[B)V: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.<init>(I)V: root-Branch
   * Goal 4. org.apache.commons.codec.binary.Base64.<init>()V: root-Branch
   * Goal 5. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 6. org.apache.commons.codec.binary.Base64.<init>(Z)V: root-Branch
   * Goal 7. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I3 Branch 1 IFNULL L238 - false
   * Goal 8. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I6 Branch 2 IFNE L238 - true
   * Goal 9. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I14 Branch 3 IFEQ L244 - false
   * Goal 10. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I41 Branch 4 IFLE L246 - true
   * Goal 11. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 12. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 13. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 14. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true
   * Goal 15. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - false
   * Goal 16. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true
   * Goal 17. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - false
   * Goal 18. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - true
   * Goal 19. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - true
   * Goal 20. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - false
   * Goal 21. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - true
   * Goal 22. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - false
   * Goal 23. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I45 Branch 23 IF_ICMPNE L650 - true
   * Goal 24. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I57 Branch 24 IFLT L655 - false
   * Goal 25. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I61 Branch 25 IF_ICMPGE L655 - false
   * Goal 26. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - true
   * Goal 27. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - false
   * Goal 28. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I96 Branch 27 IFNE L660 - true
   * Goal 29. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I96 Branch 27 IFNE L660 - false
   * Goal 30. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - true
   * Goal 31. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - false
   * Goal 32. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I160 Branch 29 IFEQ L672 - false
   * Goal 33. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 30 TABLESWITCH L677 Case 1 - false
   * Goal 34. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 31 TABLESWITCH L677 Case 2 - true
   * Goal 35. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 32 TABLESWITCH L677 Case 3 - false
   * Goal 36. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 33 TABLESWITCH L677 Default-Case - false
   * Goal 37. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 34 IFEQ L722 - true
   * Goal 38. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - true
   * Goal 39. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - false
   * Goal 40. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I22 Branch 36 IF_ICMPNE L729 - true
   * Goal 41. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 38 TABLESWITCH L734 Case 0 - false
   * Goal 42. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 39 TABLESWITCH L734 Case 1 - true
   * Goal 43. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 40 TABLESWITCH L734 Case 2 - false
   * Goal 44. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 41 TABLESWITCH L734 Default-Case - false
   * Goal 45. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I95 Branch 42 IF_ACMPNE L743 - true
   * Goal 46. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I246 Branch 44 IFLE L763 - false
   * Goal 47. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I249 Branch 45 IFLE L763 - false
   * Goal 48. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - true
   * Goal 49. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - false
   * Goal 50. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I311 Branch 47 IFGE L772 - true
   * Goal 51. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I311 Branch 47 IFGE L772 - false
   * Goal 52. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I330 Branch 48 IF_ICMPNE L776 - true
   * Goal 53. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I330 Branch 48 IF_ICMPNE L776 - false
   * Goal 54. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I421 Branch 49 IFLE L782 - false
   * Goal 55. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I426 Branch 50 IF_ICMPGT L782 - true
   * Goal 56. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I426 Branch 50 IF_ICMPGT L782 - false
   * Goal 57. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 58. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 59. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 60. org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 55 IFEQ L827 - true
   * Goal 61. Branch org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B: root-Branch in context: org.apache.commons.codec.binary.Base64:decodeBase64(Ljava/lang/String;)[B
   * Goal 62. Branch org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I3 Branch 1 IFNULL L238 - false in context: org.apache.commons.codec.binary.Base64:encodeBase64([BZZI)[B
   * Goal 63. Branch org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I6 Branch 2 IFNE L238 - true in context: org.apache.commons.codec.binary.Base64:encodeBase64([BZZI)[B
   * Goal 64. Branch org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I14 Branch 3 IFEQ L244 - false in context: org.apache.commons.codec.binary.Base64:encodeBase64([BZZI)[B
   * Goal 65. Branch org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I41 Branch 4 IFLE L246 - true in context: org.apache.commons.codec.binary.Base64:encodeBase64([BZZI)[B
   * Goal 66. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - true in context: 
   * Goal 67. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - true in context: 
   * Goal 68. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - false in context: 
   * Goal 69. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - true in context: 
   * Goal 70. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - false in context: 
   * Goal 71. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I45 Branch 23 IF_ICMPNE L650 - true in context: 
   * Goal 72. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I57 Branch 24 IFLT L655 - false in context: 
   * Goal 73. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I61 Branch 25 IF_ICMPGE L655 - false in context: 
   * Goal 74. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - false in context: 
   * Goal 75. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - true in context: 
   * Goal 76. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I96 Branch 27 IFNE L660 - true in context: 
   * Goal 77. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I96 Branch 27 IFNE L660 - false in context: 
   * Goal 78. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I160 Branch 29 IFEQ L672 - false in context: 
   * Goal 79. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - true in context: 
   * Goal 80. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - false in context: 
   * Goal 81. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 31 TABLESWITCH L677 Case 2 - true in context: 
   * Goal 82. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 32 TABLESWITCH L677 Case 3 - false in context: 
   * Goal 83. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 30 TABLESWITCH L677 Case 1 - false in context: 
   * Goal 84. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 33 TABLESWITCH L677 Default-Case - false in context: 
   * Goal 85. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 34 IFEQ L722 - true in context: 
   * Goal 86. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - false in context: 
   * Goal 87. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - true in context: 
   * Goal 88. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I22 Branch 36 IF_ICMPNE L729 - true in context: 
   * Goal 89. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 41 TABLESWITCH L734 Default-Case - false in context: 
   * Goal 90. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 40 TABLESWITCH L734 Case 2 - false in context: 
   * Goal 91. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 39 TABLESWITCH L734 Case 1 - true in context: 
   * Goal 92. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 38 TABLESWITCH L734 Case 0 - false in context: 
   * Goal 93. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I95 Branch 42 IF_ACMPNE L743 - true in context: 
   * Goal 94. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I249 Branch 45 IFLE L763 - false in context: 
   * Goal 95. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I246 Branch 44 IFLE L763 - false in context: 
   * Goal 96. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - true in context: 
   * Goal 97. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - false in context: 
   * Goal 98. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I311 Branch 47 IFGE L772 - false in context: 
   * Goal 99. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I311 Branch 47 IFGE L772 - true in context: 
   * Goal 100. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I330 Branch 48 IF_ICMPNE L776 - false in context: 
   * Goal 101. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I330 Branch 48 IF_ICMPNE L776 - true in context: 
   * Goal 102. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I426 Branch 50 IF_ICMPGT L782 - true in context: 
   * Goal 103. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I426 Branch 50 IF_ICMPGT L782 - false in context: 
   * Goal 104. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I421 Branch 49 IFLE L782 - false in context: 
   * Goal 105. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 106. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 107. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 108. Branch org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 55 IFEQ L827 - true in context: 
   * Goal 109. [Output]: org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B:NonEmptyArray
   * Goal 110. [Output]: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:NonEmptyArray
   * Goal 111. org.apache.commons.codec.binary.Base64.<init>()V: Line 452
   * Goal 112. org.apache.commons.codec.binary.Base64.<init>()V: Line 453
   * Goal 113. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 494
   * Goal 114. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 495
   * Goal 115. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 521
   * Goal 116. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 522
   * Goal 117. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 118. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 119. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 120. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 121. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 122. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 123. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 124. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 597
   * Goal 125. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 598
   * Goal 126. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 599
   * Goal 127. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 601
   * Goal 128. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 602
   * Goal 129. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 130. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 131. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 132. org.apache.commons.codec.binary.Base64.<init>(Z)V: Line 471
   * Goal 133. org.apache.commons.codec.binary.Base64.<init>(Z)V: Line 472
   * Goal 134. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 641
   * Goal 135. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 644
   * Goal 136. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 645
   * Goal 137. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 647
   * Goal 138. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 648
   * Goal 139. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 649
   * Goal 140. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 650
   * Goal 141. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 655
   * Goal 142. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 656
   * Goal 143. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 657
   * Goal 144. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 658
   * Goal 145. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 659
   * Goal 146. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 660
   * Goal 147. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 661
   * Goal 148. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 662
   * Goal 149. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 663
   * Goal 150. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 672
   * Goal 151. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 673
   * Goal 152. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 677
   * Goal 153. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 683
   * Goal 154. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 684
   * Goal 155. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 685
   * Goal 156. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 686
   * Goal 157. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 697
   * Goal 158. org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B: Line 158
   * Goal 159. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 722
   * Goal 160. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 727
   * Goal 161. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 728
   * Goal 162. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 729
   * Goal 163. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 732
   * Goal 164. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 733
   * Goal 165. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 734
   * Goal 166. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 739
   * Goal 167. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 741
   * Goal 168. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 743
   * Goal 169. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 761
   * Goal 170. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 763
   * Goal 171. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 764
   * Goal 172. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 765
   * Goal 173. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 767
   * Goal 174. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 768
   * Goal 175. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 769
   * Goal 176. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 770
   * Goal 177. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 771
   * Goal 178. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 772
   * Goal 179. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 773
   * Goal 180. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 775
   * Goal 181. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 776
   * Goal 182. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 777
   * Goal 183. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 778
   * Goal 184. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 779
   * Goal 185. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 780
   * Goal 186. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 781
   * Goal 187. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 782
   * Goal 188. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 783
   * Goal 189. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 784
   * Goal 190. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 785
   * Goal 191. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 790
   * Goal 192. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 238
   * Goal 193. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 244
   * Goal 194. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 245
   * Goal 195. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 246
   * Goal 196. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 253
   * Goal 197. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 198. org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 827
   * Goal 199. org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 832
   * Goal 200. [METHOD] org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B
   * Goal 201. [METHOD] org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B
   * Goal 202. [METHODNOEX] org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B
   * Goal 203. [METHODNOEX] org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B
   * Goal 204. Weak Mutation 22: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 205. Weak Mutation 23: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator = null -> != null
   * Goal 206. Weak Mutation 24: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 207. Weak Mutation 26: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator != -> <
   * Goal 208. Weak Mutation 30: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp Negation of isChunked
   * Goal 209. Weak Mutation 31: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC 1 isChunked
   * Goal 210. Weak Mutation 32: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC -1 isChunked
   * Goal 211. Weak Mutation 33: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - ReplaceComparisonOperator == -> !=
   * Goal 212. Weak Mutation 35: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp Negation of urlSafe
   * Goal 213. Weak Mutation 36: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC 1 urlSafe
   * Goal 214. Weak Mutation 37: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC -1 urlSafe
   * Goal 215. Weak Mutation 43: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:245 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 216. Weak Mutation 44: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp Negation of len
   * Goal 217. Weak Mutation 45: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> PEM_CHUNK_SIZE
   * Goal 218. Weak Mutation 46: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> MIME_CHUNK_SIZE
   * Goal 219. Weak Mutation 47: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> EOF
   * Goal 220. Weak Mutation 48: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> MASK_8BITS
   * Goal 221. Weak Mutation 49: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp Negation of maxResultSize
   * Goal 222. Weak Mutation 50: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp IINC 1 maxResultSize
   * Goal 223. Weak Mutation 51: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp IINC -1 maxResultSize
   * Goal 224. Weak Mutation 53: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceComparisonOperator <= -> ==
   * Goal 225. Weak Mutation 65: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:253 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 226. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 227. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 228. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 229. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 230. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 231. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 232. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 233. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 234. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 235. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 236. Weak Mutation 346: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> -1
   * Goal 237. Weak Mutation 348: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> <
   * Goal 238. Weak Mutation 349: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> 0
   * Goal 239. Weak Mutation 350: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> 1
   * Goal 240. Weak Mutation 351: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> -1
   * Goal 241. Weak Mutation 352: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> 3
   * Goal 242. Weak Mutation 353: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> 5
   * Goal 243. Weak Mutation 355: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceArithmeticOperator + -> %
   * Goal 244. Weak Mutation 356: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceArithmeticOperator + -> -
   * Goal 245. Weak Mutation 357: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceArithmeticOperator + -> *
   * Goal 246. Weak Mutation 358: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceArithmeticOperator + -> /
   * Goal 247. Weak Mutation 361: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:599 - ReplaceConstant - 0 -> 1
   * Goal 248. Weak Mutation 362: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:599 - ReplaceVariable lineSeparator -> CHUNK_SEPARATOR
   * Goal 249. Weak Mutation 363: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:599 - ReplaceConstant - 0 -> 1
   * Goal 250. Weak Mutation 365: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 0
   * Goal 251. Weak Mutation 366: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 1
   * Goal 252. Weak Mutation 367: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> -1
   * Goal 253. Weak Mutation 368: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 3
   * Goal 254. Weak Mutation 369: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 5
   * Goal 255. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 256. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 257. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 258. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 259. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 260. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 261. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 262. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 263. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 264. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 265. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 266. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 267. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 268. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 269. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 270. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 271. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 272. Weak Mutation 392: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable URL_SAFE_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 273. Weak Mutation 393: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 274. Weak Mutation 394: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:641 - InsertUnaryOp Negation
   * Goal 275. Weak Mutation 395: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:641 - ReplaceComparisonOperator == -> !=
   * Goal 276. Weak Mutation 396: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 277. Weak Mutation 397: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 278. Weak Mutation 398: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> inPos
   * Goal 279. Weak Mutation 399: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> lineLength
   * Goal 280. Weak Mutation 400: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> EOF
   * Goal 281. Weak Mutation 401: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 282. Weak Mutation 402: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp Negation of inAvail
   * Goal 283. Weak Mutation 403: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp IINC 1 inAvail
   * Goal 284. Weak Mutation 404: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp IINC -1 inAvail
   * Goal 285. Weak Mutation 405: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceComparisonOperator >= -> -1
   * Goal 286. Weak Mutation 406: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceComparisonOperator >= -> ==
   * Goal 287. Weak Mutation 408: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:645 - ReplaceConstant - 1 -> 0
   * Goal 288. Weak Mutation 409: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceConstant - 0 -> 1
   * Goal 289. Weak Mutation 410: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 290. Weak Mutation 411: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> inAvail
   * Goal 291. Weak Mutation 413: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> MASK_8BITS
   * Goal 292. Weak Mutation 414: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 293. Weak Mutation 415: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> lineLength
   * Goal 294. Weak Mutation 416: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> EOF
   * Goal 295. Weak Mutation 417: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp Negation of i
   * Goal 296. Weak Mutation 418: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC 1 i
   * Goal 297. Weak Mutation 419: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC -1 i
   * Goal 298. Weak Mutation 420: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 299. Weak Mutation 421: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> inPos
   * Goal 300. Weak Mutation 422: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 301. Weak Mutation 423: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> i
   * Goal 302. Weak Mutation 424: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 303. Weak Mutation 425: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> lineLength
   * Goal 304. Weak Mutation 426: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> EOF
   * Goal 305. Weak Mutation 427: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp Negation of inAvail
   * Goal 306. Weak Mutation 428: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC 1 inAvail
   * Goal 307. Weak Mutation 429: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC -1 inAvail
   * Goal 308. Weak Mutation 430: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> -1
   * Goal 309. Weak Mutation 431: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> >
   * Goal 310. Weak Mutation 432: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> ==
   * Goal 311. Weak Mutation 433: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> PEM_CHUNK_SIZE
   * Goal 312. Weak Mutation 434: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> MIME_CHUNK_SIZE
   * Goal 313. Weak Mutation 435: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> lineLength
   * Goal 314. Weak Mutation 436: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> EOF
   * Goal 315. Weak Mutation 437: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> MASK_8BITS
   * Goal 316. Weak Mutation 438: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp Negation
   * Goal 317. Weak Mutation 439: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp +1
   * Goal 318. Weak Mutation 440: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp -1
   * Goal 319. Weak Mutation 441: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable in -> CHUNK_SEPARATOR
   * Goal 320. Weak Mutation 442: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable in -> buffer
   * Goal 321. Weak Mutation 443: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> PEM_CHUNK_SIZE
   * Goal 322. Weak Mutation 444: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> inAvail
   * Goal 323. Weak Mutation 445: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> MASK_8BITS
   * Goal 324. Weak Mutation 447: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> MIME_CHUNK_SIZE
   * Goal 325. Weak Mutation 448: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> lineLength
   * Goal 326. Weak Mutation 449: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> EOF
   * Goal 327. Weak Mutation 450: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp Negation of inPos
   * Goal 328. Weak Mutation 451: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp IINC 1 inPos
   * Goal 329. Weak Mutation 452: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp IINC -1 inPos
   * Goal 330. Weak Mutation 453: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> inAvail
   * Goal 331. Weak Mutation 454: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> i
   * Goal 332. Weak Mutation 455: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> PAD
   * Goal 333. Weak Mutation 456: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> pad
   * Goal 334. Weak Mutation 457: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 335. Weak Mutation 458: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp Negation of b
   * Goal 336. Weak Mutation 459: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp IINC 1 b
   * Goal 337. Weak Mutation 460: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp IINC -1 b
   * Goal 338. Weak Mutation 463: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp Negation
   * Goal 339. Weak Mutation 465: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceComparisonOperator != -> <
   * Goal 340. Weak Mutation 466: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceComparisonOperator != -> >
   * Goal 341. Weak Mutation 468: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD
   * Goal 342. Weak Mutation 469: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> pad
   * Goal 343. Weak Mutation 470: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 344. Weak Mutation 471: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp Negation of b
   * Goal 345. Weak Mutation 472: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC 1 b
   * Goal 346. Weak Mutation 473: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC -1 b
   * Goal 347. Weak Mutation 475: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceComparisonOperator < -> !=
   * Goal 348. Weak Mutation 477: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD
   * Goal 349. Weak Mutation 478: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> pad
   * Goal 350. Weak Mutation 479: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 351. Weak Mutation 480: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp Negation of b
   * Goal 352. Weak Mutation 481: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC 1 b
   * Goal 353. Weak Mutation 482: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC -1 b
   * Goal 354. Weak Mutation 483: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 355. Weak Mutation 484: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceComparisonOperator >= -> -1
   * Goal 356. Weak Mutation 487: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 357. Weak Mutation 488: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> PAD
   * Goal 358. Weak Mutation 489: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> pad
   * Goal 359. Weak Mutation 490: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 360. Weak Mutation 491: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp Negation of b
   * Goal 361. Weak Mutation 492: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp IINC 1 b
   * Goal 362. Weak Mutation 493: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp IINC -1 b
   * Goal 363. Weak Mutation 494: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> PEM_CHUNK_SIZE
   * Goal 364. Weak Mutation 495: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> inAvail
   * Goal 365. Weak Mutation 496: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> inPos
   * Goal 366. Weak Mutation 497: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> MASK_8BITS
   * Goal 367. Weak Mutation 498: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> i
   * Goal 368. Weak Mutation 499: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> MIME_CHUNK_SIZE
   * Goal 369. Weak Mutation 500: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> lineLength
   * Goal 370. Weak Mutation 501: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> EOF
   * Goal 371. Weak Mutation 502: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp Negation of result
   * Goal 372. Weak Mutation 503: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp IINC 1 result
   * Goal 373. Weak Mutation 504: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp IINC -1 result
   * Goal 374. Weak Mutation 505: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceComparisonOperator < -> -2
   * Goal 375. Weak Mutation 506: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceComparisonOperator < -> !=
   * Goal 376. Weak Mutation 508: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - InsertUnaryOp Negation
   * Goal 377. Weak Mutation 509: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - InsertUnaryOp +1
   * Goal 378. Weak Mutation 510: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - InsertUnaryOp -1
   * Goal 379. Weak Mutation 511: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 1 -> 0
   * Goal 380. Weak Mutation 512: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> %
   * Goal 381. Weak Mutation 513: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> -
   * Goal 382. Weak Mutation 514: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> *
   * Goal 383. Weak Mutation 515: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> /
   * Goal 384. Weak Mutation 516: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 0
   * Goal 385. Weak Mutation 517: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 1
   * Goal 386. Weak Mutation 518: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> -1
   * Goal 387. Weak Mutation 519: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 3
   * Goal 388. Weak Mutation 520: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 5
   * Goal 389. Weak Mutation 521: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> +
   * Goal 390. Weak Mutation 522: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> -
   * Goal 391. Weak Mutation 523: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> *
   * Goal 392. Weak Mutation 524: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> /
   * Goal 393. Weak Mutation 525: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp Negation
   * Goal 394. Weak Mutation 526: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp +1
   * Goal 395. Weak Mutation 527: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp -1
   * Goal 396. Weak Mutation 528: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 0
   * Goal 397. Weak Mutation 529: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 1
   * Goal 398. Weak Mutation 530: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> -1
   * Goal 399. Weak Mutation 531: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 5
   * Goal 400. Weak Mutation 532: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 7
   * Goal 401. Weak Mutation 533: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceBitwiseOperator << I -> >> I
   * Goal 402. Weak Mutation 534: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceBitwiseOperator << I -> >>> I
   * Goal 403. Weak Mutation 535: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> PEM_CHUNK_SIZE
   * Goal 404. Weak Mutation 536: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> inAvail
   * Goal 405. Weak Mutation 537: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> inPos
   * Goal 406. Weak Mutation 538: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> MASK_8BITS
   * Goal 407. Weak Mutation 539: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> i
   * Goal 408. Weak Mutation 540: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> MIME_CHUNK_SIZE
   * Goal 409. Weak Mutation 541: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> lineLength
   * Goal 410. Weak Mutation 542: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> EOF
   * Goal 411. Weak Mutation 543: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp Negation of result
   * Goal 412. Weak Mutation 544: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp IINC 1 result
   * Goal 413. Weak Mutation 545: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp IINC -1 result
   * Goal 414. Weak Mutation 546: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> %
   * Goal 415. Weak Mutation 547: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> -
   * Goal 416. Weak Mutation 548: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> *
   * Goal 417. Weak Mutation 549: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> /
   * Goal 418. Weak Mutation 550: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - InsertUnaryOp Negation
   * Goal 419. Weak Mutation 551: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - InsertUnaryOp +1
   * Goal 420. Weak Mutation 552: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - InsertUnaryOp -1
   * Goal 421. Weak Mutation 553: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - ReplaceComparisonOperator != -> -1
   * Goal 422. Weak Mutation 554: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - ReplaceComparisonOperator != -> <
   * Goal 423. Weak Mutation 556: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceVariable buffer -> in
   * Goal 424. Weak Mutation 557: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceVariable buffer -> CHUNK_SEPARATOR
   * Goal 425. Weak Mutation 558: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp Negation
   * Goal 426. Weak Mutation 559: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp +1
   * Goal 427. Weak Mutation 560: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp -1
   * Goal 428. Weak Mutation 561: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 1 -> 0
   * Goal 429. Weak Mutation 562: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceArithmeticOperator + -> %
   * Goal 430. Weak Mutation 563: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceArithmeticOperator + -> -
   * Goal 431. Weak Mutation 564: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceArithmeticOperator + -> *
   * Goal 432. Weak Mutation 565: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceArithmeticOperator + -> /
   * Goal 433. Weak Mutation 566: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp Negation
   * Goal 434. Weak Mutation 567: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp +1
   * Goal 435. Weak Mutation 568: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp -1
   * Goal 436. Weak Mutation 569: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 16 -> 0
   * Goal 437. Weak Mutation 570: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 16 -> 1
   * Goal 438. Weak Mutation 571: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 16 -> -1
   * Goal 439. Weak Mutation 572: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 16 -> 15
   * Goal 440. Weak Mutation 573: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 16 -> 17
   * Goal 441. Weak Mutation 574: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceBitwiseOperator >> I -> << I
   * Goal 442. Weak Mutation 575: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceBitwiseOperator >> I -> >>> I
   * Goal 443. Weak Mutation 576: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 255 -> 0
   * Goal 444. Weak Mutation 577: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 255 -> 1
   * Goal 445. Weak Mutation 578: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 255 -> -1
   * Goal 446. Weak Mutation 579: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 255 -> 254
   * Goal 447. Weak Mutation 580: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 255 -> 256
   * Goal 448. Weak Mutation 581: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceBitwiseOperator & -> |
   * Goal 449. Weak Mutation 582: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceBitwiseOperator & -> ^
   * Goal 450. Weak Mutation 583: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:722 - InsertUnaryOp Negation
   * Goal 451. Weak Mutation 584: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:722 - ReplaceComparisonOperator == -> !=
   * Goal 452. Weak Mutation 585: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 453. Weak Mutation 586: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 454. Weak Mutation 587: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> inPos
   * Goal 455. Weak Mutation 588: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> lineLength
   * Goal 456. Weak Mutation 589: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> EOF
   * Goal 457. Weak Mutation 590: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 458. Weak Mutation 591: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp Negation of inAvail
   * Goal 459. Weak Mutation 592: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp IINC 1 inAvail
   * Goal 460. Weak Mutation 593: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp IINC -1 inAvail
   * Goal 461. Weak Mutation 594: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceComparisonOperator >= -> -1
   * Goal 462. Weak Mutation 595: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceComparisonOperator >= -> ==
   * Goal 463. Weak Mutation 597: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:728 - ReplaceConstant - 1 -> 0
   * Goal 464. Weak Mutation 598: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceConstant - 0 -> 1
   * Goal 465. Weak Mutation 599: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp Negation
   * Goal 466. Weak Mutation 600: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp +1
   * Goal 467. Weak Mutation 601: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp -1
   * Goal 468. Weak Mutation 604: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceComparisonOperator != -> >
   * Goal 469. Weak Mutation 615: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 470. Weak Mutation 616: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 471. Weak Mutation 617: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> lineLength
   * Goal 472. Weak Mutation 618: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> EOF
   * Goal 473. Weak Mutation 619: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 474. Weak Mutation 620: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - InsertUnaryOp Negation
   * Goal 475. Weak Mutation 621: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - InsertUnaryOp +1
   * Goal 476. Weak Mutation 622: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - InsertUnaryOp -1
   * Goal 477. Weak Mutation 623: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:733 - InsertUnaryOp Negation
   * Goal 478. Weak Mutation 624: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:733 - InsertUnaryOp +1
   * Goal 479. Weak Mutation 625: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:733 - InsertUnaryOp -1
   * Goal 480. Weak Mutation 626: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:734 - InsertUnaryOp Negation
   * Goal 481. Weak Mutation 627: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:734 - InsertUnaryOp +1
   * Goal 482. Weak Mutation 628: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:734 - InsertUnaryOp -1
   * Goal 483. Weak Mutation 629: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceVariable buffer -> in
   * Goal 484. Weak Mutation 630: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceVariable buffer -> CHUNK_SEPARATOR
   * Goal 485. Weak Mutation 631: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp Negation
   * Goal 486. Weak Mutation 632: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp +1
   * Goal 487. Weak Mutation 633: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp -1
   * Goal 488. Weak Mutation 634: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 1 -> 0
   * Goal 489. Weak Mutation 635: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceArithmeticOperator + -> %
   * Goal 490. Weak Mutation 636: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceArithmeticOperator + -> -
   * Goal 491. Weak Mutation 637: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceArithmeticOperator + -> *
   * Goal 492. Weak Mutation 638: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceArithmeticOperator + -> /
   * Goal 493. Weak Mutation 639: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceVariable encodeTable -> CHUNK_SEPARATOR
   * Goal 494. Weak Mutation 640: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp Negation
   * Goal 495. Weak Mutation 641: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp +1
   * Goal 496. Weak Mutation 642: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp -1
   * Goal 497. Weak Mutation 643: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 2 -> 0
   * Goal 498. Weak Mutation 644: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 2 -> 1
   * Goal 499. Weak Mutation 645: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 2 -> -1
   * Goal 500. Weak Mutation 646: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 2 -> 3
   * Goal 501. Weak Mutation 647: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceBitwiseOperator >> I -> << I
   * Goal 502. Weak Mutation 649: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 63 -> 0
   * Goal 503. Weak Mutation 650: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 63 -> 1
   * Goal 504. Weak Mutation 651: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 63 -> -1
   * Goal 505. Weak Mutation 652: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 63 -> 62
   * Goal 506. Weak Mutation 653: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 63 -> 64
   * Goal 507. Weak Mutation 654: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceBitwiseOperator & -> |
   * Goal 508. Weak Mutation 655: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceBitwiseOperator & -> ^
   * Goal 509. Weak Mutation 656: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceVariable buffer -> in
   * Goal 510. Weak Mutation 657: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceVariable buffer -> CHUNK_SEPARATOR
   * Goal 511. Weak Mutation 658: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp Negation
   * Goal 512. Weak Mutation 659: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp +1
   * Goal 513. Weak Mutation 660: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp -1
   * Goal 514. Weak Mutation 661: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 1 -> 0
   * Goal 515. Weak Mutation 662: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceArithmeticOperator + -> %
   * Goal 516. Weak Mutation 663: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceArithmeticOperator + -> -
   * Goal 517. Weak Mutation 664: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceArithmeticOperator + -> *
   * Goal 518. Weak Mutation 665: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceArithmeticOperator + -> /
   * Goal 519. Weak Mutation 666: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceVariable encodeTable -> CHUNK_SEPARATOR
   * Goal 520. Weak Mutation 667: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp Negation
   * Goal 521. Weak Mutation 668: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp +1
   * Goal 522. Weak Mutation 669: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp -1
   * Goal 523. Weak Mutation 670: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 4 -> 0
   * Goal 524. Weak Mutation 671: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 4 -> 1
   * Goal 525. Weak Mutation 672: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 4 -> -1
   * Goal 526. Weak Mutation 673: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 4 -> 3
   * Goal 527. Weak Mutation 674: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 4 -> 5
   * Goal 528. Weak Mutation 675: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceBitwiseOperator << I -> >> I
   * Goal 529. Weak Mutation 676: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceBitwiseOperator << I -> >>> I
   * Goal 530. Weak Mutation 677: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 63 -> 0
   * Goal 531. Weak Mutation 678: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 63 -> 1
   * Goal 532. Weak Mutation 679: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 63 -> -1
   * Goal 533. Weak Mutation 680: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 63 -> 62
   * Goal 534. Weak Mutation 681: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 63 -> 64
   * Goal 535. Weak Mutation 682: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceBitwiseOperator & -> |
   * Goal 536. Weak Mutation 683: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceBitwiseOperator & -> ^
   * Goal 537. Weak Mutation 684: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:743 - ReplaceVariable encodeTable -> CHUNK_SEPARATOR
   * Goal 538. Weak Mutation 685: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:743 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 539. Weak Mutation 686: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:743 - ReplaceComparisonOperator != -> ==
   * Goal 540. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 541. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 542. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 543. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 544. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 545. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 546. Weak Mutation 713: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> !=
   * Goal 547. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 548. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 549. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 550. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 551. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 552. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 553. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 554. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 555. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 556. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 557. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 558. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 559. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 560. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 561. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 562. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 563. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 564. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 565. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 566. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   * Goal 567. Weak Mutation 745: org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:827 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      // Undeclared exception!
      try { 
        Base64.decodeBase64("Strict decoding: Last encoded character (before the paddings if any) is a valid base 64 alphabet but not a possible encoding. Decod?ng requires at least two trailing 6-bit characters to create bytes.");
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // lineSeparator must not contain base64 characters: [\uFFFDg]
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 48
  /*
   * 453 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.<init>(I[B)V: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.<init>(I)V: root-Branch
   * Goal 4. org.apache.commons.codec.binary.Base64.<init>()V: root-Branch
   * Goal 5. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 6. org.apache.commons.codec.binary.Base64.<init>(Z)V: root-Branch
   * Goal 7. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 8. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 9. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 10. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true
   * Goal 11. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - false
   * Goal 12. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true
   * Goal 13. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - true
   * Goal 14. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - true
   * Goal 15. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - false
   * Goal 16. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - true
   * Goal 17. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - false
   * Goal 18. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I45 Branch 23 IF_ICMPNE L650 - true
   * Goal 19. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I57 Branch 24 IFLT L655 - false
   * Goal 20. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I61 Branch 25 IF_ICMPGE L655 - true
   * Goal 21. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I61 Branch 25 IF_ICMPGE L655 - false
   * Goal 22. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - true
   * Goal 23. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - false
   * Goal 24. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I96 Branch 27 IFNE L660 - true
   * Goal 25. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I96 Branch 27 IFNE L660 - false
   * Goal 26. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - true
   * Goal 27. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - false
   * Goal 28. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I160 Branch 29 IFEQ L672 - false
   * Goal 29. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 30 TABLESWITCH L677 Case 1 - false
   * Goal 30. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 31 TABLESWITCH L677 Case 2 - true
   * Goal 31. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 32 TABLESWITCH L677 Case 3 - false
   * Goal 32. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 33 TABLESWITCH L677 Default-Case - false
   * Goal 33. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 34 IFEQ L722 - true
   * Goal 34. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - true
   * Goal 35. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - false
   * Goal 36. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I22 Branch 36 IF_ICMPNE L729 - false
   * Goal 37. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I25 Branch 37 IFNE L729 - true
   * Goal 38. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 38 TABLESWITCH L734 Case 0 - true
   * Goal 39. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 39 TABLESWITCH L734 Case 1 - false
   * Goal 40. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 40 TABLESWITCH L734 Case 2 - false
   * Goal 41. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 41 TABLESWITCH L734 Default-Case - false
   * Goal 42. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I246 Branch 44 IFLE L763 - false
   * Goal 43. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I249 Branch 45 IFLE L763 - true
   * Goal 44. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - true
   * Goal 45. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 46. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 47. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 48. org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 55 IFEQ L827 - true
   * Goal 49. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch in context: org.apache.commons.codec.binary.Base64:<init>(I[BZ)V
   * Goal 50. Branch org.apache.commons.codec.binary.Base64.<init>(Z)V: root-Branch in context: org.apache.commons.codec.binary.Base64:<init>(Z)V
   * Goal 51. Branch org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B: root-Branch in context: org.apache.commons.codec.binary.Base64:decodeBase64(Ljava/lang/String;)[B
   * Goal 52. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 53. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 54. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 55. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - false in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 56. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 57. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - true in context: 
   * Goal 58. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - true in context: 
   * Goal 59. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - false in context: 
   * Goal 60. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - true in context: 
   * Goal 61. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - false in context: 
   * Goal 62. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I45 Branch 23 IF_ICMPNE L650 - true in context: 
   * Goal 63. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I61 Branch 25 IF_ICMPGE L655 - true in context: 
   * Goal 64. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I57 Branch 24 IFLT L655 - false in context: 
   * Goal 65. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I61 Branch 25 IF_ICMPGE L655 - false in context: 
   * Goal 66. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - false in context: 
   * Goal 67. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - true in context: 
   * Goal 68. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I96 Branch 27 IFNE L660 - true in context: 
   * Goal 69. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I96 Branch 27 IFNE L660 - false in context: 
   * Goal 70. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I160 Branch 29 IFEQ L672 - false in context: 
   * Goal 71. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - true in context: 
   * Goal 72. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - false in context: 
   * Goal 73. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 31 TABLESWITCH L677 Case 2 - true in context: 
   * Goal 74. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 32 TABLESWITCH L677 Case 3 - false in context: 
   * Goal 75. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 30 TABLESWITCH L677 Case 1 - false in context: 
   * Goal 76. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 33 TABLESWITCH L677 Default-Case - false in context: 
   * Goal 77. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 34 IFEQ L722 - true in context: 
   * Goal 78. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - false in context: 
   * Goal 79. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - true in context: 
   * Goal 80. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I22 Branch 36 IF_ICMPNE L729 - false in context: 
   * Goal 81. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I25 Branch 37 IFNE L729 - true in context: 
   * Goal 82. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 41 TABLESWITCH L734 Default-Case - false in context: 
   * Goal 83. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 40 TABLESWITCH L734 Case 2 - false in context: 
   * Goal 84. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 39 TABLESWITCH L734 Case 1 - false in context: 
   * Goal 85. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 38 TABLESWITCH L734 Case 0 - true in context: 
   * Goal 86. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I249 Branch 45 IFLE L763 - true in context: 
   * Goal 87. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I246 Branch 44 IFLE L763 - false in context: 
   * Goal 88. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - true in context: 
   * Goal 89. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 90. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 91. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 92. Branch org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 55 IFEQ L827 - true in context: 
   * Goal 93. [Output]: org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B:NonEmptyArray
   * Goal 94. org.apache.commons.codec.binary.Base64.<init>()V: Line 452
   * Goal 95. org.apache.commons.codec.binary.Base64.<init>()V: Line 453
   * Goal 96. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 494
   * Goal 97. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 495
   * Goal 98. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 521
   * Goal 99. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 522
   * Goal 100. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 101. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 102. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 103. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 104. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 105. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 106. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 107. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 597
   * Goal 108. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 598
   * Goal 109. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 599
   * Goal 110. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 601
   * Goal 111. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 602
   * Goal 112. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 113. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 114. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 115. org.apache.commons.codec.binary.Base64.<init>(Z)V: Line 471
   * Goal 116. org.apache.commons.codec.binary.Base64.<init>(Z)V: Line 472
   * Goal 117. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 641
   * Goal 118. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 644
   * Goal 119. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 645
   * Goal 120. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 647
   * Goal 121. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 648
   * Goal 122. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 649
   * Goal 123. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 650
   * Goal 124. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 655
   * Goal 125. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 656
   * Goal 126. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 657
   * Goal 127. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 658
   * Goal 128. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 659
   * Goal 129. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 660
   * Goal 130. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 661
   * Goal 131. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 662
   * Goal 132. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 663
   * Goal 133. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 672
   * Goal 134. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 673
   * Goal 135. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 677
   * Goal 136. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 683
   * Goal 137. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 684
   * Goal 138. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 685
   * Goal 139. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 686
   * Goal 140. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 697
   * Goal 141. org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B: Line 158
   * Goal 142. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 722
   * Goal 143. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 727
   * Goal 144. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 728
   * Goal 145. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 729
   * Goal 146. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 732
   * Goal 147. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 733
   * Goal 148. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 734
   * Goal 149. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 736
   * Goal 150. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 761
   * Goal 151. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 763
   * Goal 152. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 767
   * Goal 153. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 768
   * Goal 154. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 790
   * Goal 155. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 156. org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 827
   * Goal 157. org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 832
   * Goal 158. [METHOD] org.apache.commons.codec.binary.Base64.<init>(Z)V
   * Goal 159. [METHOD] org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B
   * Goal 160. [METHODNOEX] org.apache.commons.codec.binary.Base64.<init>(Z)V
   * Goal 161. [METHODNOEX] org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B
   * Goal 162. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 163. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 164. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 165. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 166. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 167. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 168. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 169. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 170. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 171. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 172. Weak Mutation 346: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> -1
   * Goal 173. Weak Mutation 348: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> <
   * Goal 174. Weak Mutation 349: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> 0
   * Goal 175. Weak Mutation 350: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> 1
   * Goal 176. Weak Mutation 351: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> -1
   * Goal 177. Weak Mutation 352: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> 3
   * Goal 178. Weak Mutation 353: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> 5
   * Goal 179. Weak Mutation 355: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceArithmeticOperator + -> %
   * Goal 180. Weak Mutation 356: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceArithmeticOperator + -> -
   * Goal 181. Weak Mutation 357: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceArithmeticOperator + -> *
   * Goal 182. Weak Mutation 358: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceArithmeticOperator + -> /
   * Goal 183. Weak Mutation 361: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:599 - ReplaceConstant - 0 -> 1
   * Goal 184. Weak Mutation 362: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:599 - ReplaceVariable lineSeparator -> CHUNK_SEPARATOR
   * Goal 185. Weak Mutation 363: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:599 - ReplaceConstant - 0 -> 1
   * Goal 186. Weak Mutation 365: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 0
   * Goal 187. Weak Mutation 366: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 1
   * Goal 188. Weak Mutation 367: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> -1
   * Goal 189. Weak Mutation 368: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 3
   * Goal 190. Weak Mutation 369: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 5
   * Goal 191. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 192. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 193. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 194. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 195. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 196. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 197. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 198. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 199. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 200. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 201. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 202. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 203. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 204. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 205. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 206. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 207. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 208. Weak Mutation 393: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 209. Weak Mutation 394: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:641 - InsertUnaryOp Negation
   * Goal 210. Weak Mutation 395: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:641 - ReplaceComparisonOperator == -> !=
   * Goal 211. Weak Mutation 396: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 212. Weak Mutation 397: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 213. Weak Mutation 398: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> inPos
   * Goal 214. Weak Mutation 399: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> lineLength
   * Goal 215. Weak Mutation 400: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> EOF
   * Goal 216. Weak Mutation 401: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 217. Weak Mutation 402: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp Negation of inAvail
   * Goal 218. Weak Mutation 403: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp IINC 1 inAvail
   * Goal 219. Weak Mutation 404: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp IINC -1 inAvail
   * Goal 220. Weak Mutation 405: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceComparisonOperator >= -> -1
   * Goal 221. Weak Mutation 406: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceComparisonOperator >= -> ==
   * Goal 222. Weak Mutation 408: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:645 - ReplaceConstant - 1 -> 0
   * Goal 223. Weak Mutation 409: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceConstant - 0 -> 1
   * Goal 224. Weak Mutation 410: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 225. Weak Mutation 411: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> inAvail
   * Goal 226. Weak Mutation 413: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> MASK_8BITS
   * Goal 227. Weak Mutation 414: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 228. Weak Mutation 415: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> lineLength
   * Goal 229. Weak Mutation 416: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> EOF
   * Goal 230. Weak Mutation 417: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp Negation of i
   * Goal 231. Weak Mutation 418: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC 1 i
   * Goal 232. Weak Mutation 419: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC -1 i
   * Goal 233. Weak Mutation 420: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 234. Weak Mutation 421: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> inPos
   * Goal 235. Weak Mutation 422: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 236. Weak Mutation 423: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> i
   * Goal 237. Weak Mutation 424: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 238. Weak Mutation 425: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> lineLength
   * Goal 239. Weak Mutation 426: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> EOF
   * Goal 240. Weak Mutation 427: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp Negation of inAvail
   * Goal 241. Weak Mutation 428: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC 1 inAvail
   * Goal 242. Weak Mutation 429: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC -1 inAvail
   * Goal 243. Weak Mutation 430: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> -1
   * Goal 244. Weak Mutation 431: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> >
   * Goal 245. Weak Mutation 432: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> ==
   * Goal 246. Weak Mutation 433: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> PEM_CHUNK_SIZE
   * Goal 247. Weak Mutation 434: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> MIME_CHUNK_SIZE
   * Goal 248. Weak Mutation 435: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> lineLength
   * Goal 249. Weak Mutation 436: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> EOF
   * Goal 250. Weak Mutation 437: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> MASK_8BITS
   * Goal 251. Weak Mutation 438: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp Negation
   * Goal 252. Weak Mutation 439: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp +1
   * Goal 253. Weak Mutation 440: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp -1
   * Goal 254. Weak Mutation 441: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable in -> CHUNK_SEPARATOR
   * Goal 255. Weak Mutation 442: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable in -> buffer
   * Goal 256. Weak Mutation 443: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> PEM_CHUNK_SIZE
   * Goal 257. Weak Mutation 444: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> inAvail
   * Goal 258. Weak Mutation 445: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> MASK_8BITS
   * Goal 259. Weak Mutation 447: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> MIME_CHUNK_SIZE
   * Goal 260. Weak Mutation 448: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> lineLength
   * Goal 261. Weak Mutation 449: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> EOF
   * Goal 262. Weak Mutation 450: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp Negation of inPos
   * Goal 263. Weak Mutation 451: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp IINC 1 inPos
   * Goal 264. Weak Mutation 452: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp IINC -1 inPos
   * Goal 265. Weak Mutation 453: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> inAvail
   * Goal 266. Weak Mutation 454: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> i
   * Goal 267. Weak Mutation 455: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> PAD
   * Goal 268. Weak Mutation 456: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> pad
   * Goal 269. Weak Mutation 457: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 270. Weak Mutation 458: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp Negation of b
   * Goal 271. Weak Mutation 459: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp IINC 1 b
   * Goal 272. Weak Mutation 460: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp IINC -1 b
   * Goal 273. Weak Mutation 463: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp Negation
   * Goal 274. Weak Mutation 465: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceComparisonOperator != -> <
   * Goal 275. Weak Mutation 466: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceComparisonOperator != -> >
   * Goal 276. Weak Mutation 468: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD
   * Goal 277. Weak Mutation 469: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> pad
   * Goal 278. Weak Mutation 470: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 279. Weak Mutation 471: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp Negation of b
   * Goal 280. Weak Mutation 472: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC 1 b
   * Goal 281. Weak Mutation 473: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC -1 b
   * Goal 282. Weak Mutation 475: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceComparisonOperator < -> !=
   * Goal 283. Weak Mutation 477: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD
   * Goal 284. Weak Mutation 478: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> pad
   * Goal 285. Weak Mutation 479: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 286. Weak Mutation 480: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp Negation of b
   * Goal 287. Weak Mutation 481: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC 1 b
   * Goal 288. Weak Mutation 482: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC -1 b
   * Goal 289. Weak Mutation 483: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 290. Weak Mutation 484: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceComparisonOperator >= -> -1
   * Goal 291. Weak Mutation 486: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceComparisonOperator >= -> ==
   * Goal 292. Weak Mutation 487: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 293. Weak Mutation 488: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> PAD
   * Goal 294. Weak Mutation 489: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> pad
   * Goal 295. Weak Mutation 490: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 296. Weak Mutation 491: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp Negation of b
   * Goal 297. Weak Mutation 492: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp IINC 1 b
   * Goal 298. Weak Mutation 493: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp IINC -1 b
   * Goal 299. Weak Mutation 494: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> PEM_CHUNK_SIZE
   * Goal 300. Weak Mutation 495: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> inAvail
   * Goal 301. Weak Mutation 496: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> inPos
   * Goal 302. Weak Mutation 497: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> MASK_8BITS
   * Goal 303. Weak Mutation 498: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> i
   * Goal 304. Weak Mutation 499: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> MIME_CHUNK_SIZE
   * Goal 305. Weak Mutation 500: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> lineLength
   * Goal 306. Weak Mutation 501: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> EOF
   * Goal 307. Weak Mutation 502: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp Negation of result
   * Goal 308. Weak Mutation 503: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp IINC 1 result
   * Goal 309. Weak Mutation 504: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp IINC -1 result
   * Goal 310. Weak Mutation 505: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceComparisonOperator < -> -2
   * Goal 311. Weak Mutation 506: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceComparisonOperator < -> !=
   * Goal 312. Weak Mutation 508: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - InsertUnaryOp Negation
   * Goal 313. Weak Mutation 509: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - InsertUnaryOp +1
   * Goal 314. Weak Mutation 510: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - InsertUnaryOp -1
   * Goal 315. Weak Mutation 511: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 1 -> 0
   * Goal 316. Weak Mutation 512: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> %
   * Goal 317. Weak Mutation 513: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> -
   * Goal 318. Weak Mutation 514: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> *
   * Goal 319. Weak Mutation 515: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> /
   * Goal 320. Weak Mutation 516: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 0
   * Goal 321. Weak Mutation 517: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 1
   * Goal 322. Weak Mutation 518: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> -1
   * Goal 323. Weak Mutation 519: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 3
   * Goal 324. Weak Mutation 520: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 5
   * Goal 325. Weak Mutation 521: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> +
   * Goal 326. Weak Mutation 522: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> -
   * Goal 327. Weak Mutation 523: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> *
   * Goal 328. Weak Mutation 524: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> /
   * Goal 329. Weak Mutation 525: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp Negation
   * Goal 330. Weak Mutation 526: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp +1
   * Goal 331. Weak Mutation 527: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp -1
   * Goal 332. Weak Mutation 528: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 0
   * Goal 333. Weak Mutation 529: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 1
   * Goal 334. Weak Mutation 530: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> -1
   * Goal 335. Weak Mutation 531: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 5
   * Goal 336. Weak Mutation 532: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 7
   * Goal 337. Weak Mutation 533: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceBitwiseOperator << I -> >> I
   * Goal 338. Weak Mutation 534: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceBitwiseOperator << I -> >>> I
   * Goal 339. Weak Mutation 535: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> PEM_CHUNK_SIZE
   * Goal 340. Weak Mutation 536: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> inAvail
   * Goal 341. Weak Mutation 537: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> inPos
   * Goal 342. Weak Mutation 538: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> MASK_8BITS
   * Goal 343. Weak Mutation 539: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> i
   * Goal 344. Weak Mutation 540: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> MIME_CHUNK_SIZE
   * Goal 345. Weak Mutation 541: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> lineLength
   * Goal 346. Weak Mutation 542: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> EOF
   * Goal 347. Weak Mutation 543: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp Negation of result
   * Goal 348. Weak Mutation 544: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp IINC 1 result
   * Goal 349. Weak Mutation 545: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp IINC -1 result
   * Goal 350. Weak Mutation 546: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> %
   * Goal 351. Weak Mutation 547: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> -
   * Goal 352. Weak Mutation 548: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> *
   * Goal 353. Weak Mutation 549: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> /
   * Goal 354. Weak Mutation 550: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - InsertUnaryOp Negation
   * Goal 355. Weak Mutation 551: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - InsertUnaryOp +1
   * Goal 356. Weak Mutation 552: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - InsertUnaryOp -1
   * Goal 357. Weak Mutation 553: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - ReplaceComparisonOperator != -> -1
   * Goal 358. Weak Mutation 554: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - ReplaceComparisonOperator != -> <
   * Goal 359. Weak Mutation 556: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceVariable buffer -> in
   * Goal 360. Weak Mutation 557: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceVariable buffer -> CHUNK_SEPARATOR
   * Goal 361. Weak Mutation 558: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp Negation
   * Goal 362. Weak Mutation 559: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp +1
   * Goal 363. Weak Mutation 560: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp -1
   * Goal 364. Weak Mutation 561: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 1 -> 0
   * Goal 365. Weak Mutation 562: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceArithmeticOperator + -> %
   * Goal 366. Weak Mutation 563: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceArithmeticOperator + -> -
   * Goal 367. Weak Mutation 564: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceArithmeticOperator + -> *
   * Goal 368. Weak Mutation 565: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceArithmeticOperator + -> /
   * Goal 369. Weak Mutation 566: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp Negation
   * Goal 370. Weak Mutation 567: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp +1
   * Goal 371. Weak Mutation 568: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp -1
   * Goal 372. Weak Mutation 569: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 16 -> 0
   * Goal 373. Weak Mutation 570: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 16 -> 1
   * Goal 374. Weak Mutation 571: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 16 -> -1
   * Goal 375. Weak Mutation 572: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 16 -> 15
   * Goal 376. Weak Mutation 573: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 16 -> 17
   * Goal 377. Weak Mutation 574: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceBitwiseOperator >> I -> << I
   * Goal 378. Weak Mutation 575: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceBitwiseOperator >> I -> >>> I
   * Goal 379. Weak Mutation 576: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 255 -> 0
   * Goal 380. Weak Mutation 577: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 255 -> 1
   * Goal 381. Weak Mutation 578: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 255 -> -1
   * Goal 382. Weak Mutation 579: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 255 -> 254
   * Goal 383. Weak Mutation 580: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 255 -> 256
   * Goal 384. Weak Mutation 581: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceBitwiseOperator & -> |
   * Goal 385. Weak Mutation 582: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceBitwiseOperator & -> ^
   * Goal 386. Weak Mutation 583: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:722 - InsertUnaryOp Negation
   * Goal 387. Weak Mutation 584: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:722 - ReplaceComparisonOperator == -> !=
   * Goal 388. Weak Mutation 585: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 389. Weak Mutation 586: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 390. Weak Mutation 587: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> inPos
   * Goal 391. Weak Mutation 588: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> lineLength
   * Goal 392. Weak Mutation 589: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> EOF
   * Goal 393. Weak Mutation 590: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 394. Weak Mutation 591: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp Negation of inAvail
   * Goal 395. Weak Mutation 592: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp IINC 1 inAvail
   * Goal 396. Weak Mutation 593: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp IINC -1 inAvail
   * Goal 397. Weak Mutation 594: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceComparisonOperator >= -> -1
   * Goal 398. Weak Mutation 596: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceComparisonOperator >= -> >
   * Goal 399. Weak Mutation 597: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:728 - ReplaceConstant - 1 -> 0
   * Goal 400. Weak Mutation 598: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceConstant - 0 -> 1
   * Goal 401. Weak Mutation 599: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp Negation
   * Goal 402. Weak Mutation 600: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp +1
   * Goal 403. Weak Mutation 601: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp -1
   * Goal 404. Weak Mutation 602: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceComparisonOperator != -> -1
   * Goal 405. Weak Mutation 605: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 406. Weak Mutation 607: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceVariable lineLength -> EOF
   * Goal 407. Weak Mutation 608: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 408. Weak Mutation 609: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp Negation
   * Goal 409. Weak Mutation 610: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp +1
   * Goal 410. Weak Mutation 611: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp -1
   * Goal 411. Weak Mutation 613: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceComparisonOperator != -> <
   * Goal 412. Weak Mutation 615: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 413. Weak Mutation 616: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 414. Weak Mutation 617: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> lineLength
   * Goal 415. Weak Mutation 618: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> EOF
   * Goal 416. Weak Mutation 619: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 417. Weak Mutation 620: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - InsertUnaryOp Negation
   * Goal 418. Weak Mutation 621: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - InsertUnaryOp +1
   * Goal 419. Weak Mutation 622: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - InsertUnaryOp -1
   * Goal 420. Weak Mutation 623: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:733 - InsertUnaryOp Negation
   * Goal 421. Weak Mutation 624: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:733 - InsertUnaryOp +1
   * Goal 422. Weak Mutation 625: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:733 - InsertUnaryOp -1
   * Goal 423. Weak Mutation 626: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:734 - InsertUnaryOp Negation
   * Goal 424. Weak Mutation 627: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:734 - InsertUnaryOp +1
   * Goal 425. Weak Mutation 628: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:734 - InsertUnaryOp -1
   * Goal 426. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 427. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 428. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 429. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 430. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 431. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 432. Weak Mutation 713: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> !=
   * Goal 433. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 434. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 435. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 436. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 437. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 438. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 439. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 440. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 441. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 442. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 443. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 444. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 445. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 446. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 447. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 448. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 449. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 450. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 451. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 452. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   * Goal 453. Weak Mutation 745: org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:827 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      // Undeclared exception!
      try { 
        Base64.decodeBase64("z:&7e8i~WEbJ5");
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // lineSeparator must not contain base64 characters: [\uFFFDg]
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 49
  /*
   * 120 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.<init>(I[B)V: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 4. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 5. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 6. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - false
   * Goal 7. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true
   * Goal 8. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 34 IFEQ L722 - false
   * Goal 9. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 10. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 11. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 12. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch in context: org.apache.commons.codec.binary.Base64:<init>(I[BZ)V
   * Goal 13. Branch org.apache.commons.codec.binary.Base64.<init>(I[B)V: root-Branch in context: org.apache.commons.codec.binary.Base64:<init>(I[B)V
   * Goal 14. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 15. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 16. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 17. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - false in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 18. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 19. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 34 IFEQ L722 - false in context: 
   * Goal 20. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 21. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 22. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 23. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 521
   * Goal 24. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 522
   * Goal 25. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 26. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 27. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 28. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 29. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 30. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 31. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 32. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 597
   * Goal 33. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 598
   * Goal 34. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 599
   * Goal 35. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 36. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 37. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 38. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 722
   * Goal 39. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 723
   * Goal 40. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 41. [METHOD] org.apache.commons.codec.binary.Base64.<init>(I[B)V
   * Goal 42. [METHOD] org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V
   * Goal 43. [METHODNOEX] org.apache.commons.codec.binary.Base64.<init>(I[B)V
   * Goal 44. [METHODNOEX] org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V
   * Goal 45. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 46. Weak Mutation 331: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceVariable lineSeparator -> CHUNK_SEPARATOR
   * Goal 47. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 48. Weak Mutation 333: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceVariable lineSeparator -> CHUNK_SEPARATOR
   * Goal 49. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 50. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 51. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 52. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 53. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 54. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 55. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 56. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 57. Weak Mutation 346: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> -1
   * Goal 58. Weak Mutation 349: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> 0
   * Goal 59. Weak Mutation 350: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> 1
   * Goal 60. Weak Mutation 351: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> -1
   * Goal 61. Weak Mutation 352: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> 3
   * Goal 62. Weak Mutation 353: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceConstant - 4 -> 5
   * Goal 63. Weak Mutation 354: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceVariable lineSeparator -> CHUNK_SEPARATOR
   * Goal 64. Weak Mutation 355: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceArithmeticOperator + -> %
   * Goal 65. Weak Mutation 356: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceArithmeticOperator + -> -
   * Goal 66. Weak Mutation 357: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceArithmeticOperator + -> *
   * Goal 67. Weak Mutation 358: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:597 - ReplaceArithmeticOperator + -> /
   * Goal 68. Weak Mutation 359: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:598 - ReplaceVariable lineSeparator -> CHUNK_SEPARATOR
   * Goal 69. Weak Mutation 360: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:599 - ReplaceVariable lineSeparator -> CHUNK_SEPARATOR
   * Goal 70. Weak Mutation 361: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:599 - ReplaceConstant - 0 -> 1
   * Goal 71. Weak Mutation 362: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:599 - ReplaceVariable lineSeparator -> CHUNK_SEPARATOR
   * Goal 72. Weak Mutation 363: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:599 - ReplaceConstant - 0 -> 1
   * Goal 73. Weak Mutation 364: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:599 - ReplaceVariable lineSeparator -> CHUNK_SEPARATOR
   * Goal 74. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 75. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 76. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 77. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 78. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 79. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 80. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 81. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 82. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 83. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 84. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 85. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 86. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 87. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 88. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 89. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 90. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 91. Weak Mutation 393: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 92. Weak Mutation 583: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:722 - InsertUnaryOp Negation
   * Goal 93. Weak Mutation 584: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:722 - ReplaceComparisonOperator == -> !=
   * Goal 94. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 95. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 96. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 97. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 98. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 99. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 100. Weak Mutation 714: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> <=
   * Goal 101. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 102. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 103. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 104. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 105. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 106. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 107. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 108. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 109. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 110. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 111. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 112. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 113. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 114. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 115. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 116. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 117. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 118. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 119. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 120. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      Base64 base64_0 = new Base64(8, byteArray0);
      BaseNCodec.Context baseNCodec_Context0 = new BaseNCodec.Context();
      baseNCodec_Context0.eof = true;
      base64_0.encode(byteArray0, 8, (-596), baseNCodec_Context0);
      assertFalse(base64_0.isUrlSafe());
  }

  //Test case number: 50
  /*
   * 163 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.<init>(I[B)V: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.<init>(I)V: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 4. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 5. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 6. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 7. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true
   * Goal 8. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true
   * Goal 9. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - true
   * Goal 10. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - false
   * Goal 11. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - true
   * Goal 12. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - false
   * Goal 13. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I160 Branch 29 IFEQ L672 - false
   * Goal 14. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 30 TABLESWITCH L677 Case 1 - false
   * Goal 15. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 31 TABLESWITCH L677 Case 2 - false
   * Goal 16. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 32 TABLESWITCH L677 Case 3 - false
   * Goal 17. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 33 TABLESWITCH L677 Default-Case - true
   * Goal 18. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 19. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 20. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 21. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch in context: org.apache.commons.codec.binary.Base64:<init>(I[BZ)V
   * Goal 22. Branch org.apache.commons.codec.binary.Base64.<init>(I[B)V: root-Branch in context: org.apache.commons.codec.binary.Base64:<init>(I[B)V
   * Goal 23. Branch org.apache.commons.codec.binary.Base64.<init>(I)V: root-Branch in context: org.apache.commons.codec.binary.Base64:<init>(I)V
   * Goal 24. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 25. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 26. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 27. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 28. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 29. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - true in context: 
   * Goal 30. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - false in context: 
   * Goal 31. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - true in context: 
   * Goal 32. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I160 Branch 29 IFEQ L672 - false in context: 
   * Goal 33. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - false in context: 
   * Goal 34. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 32 TABLESWITCH L677 Case 3 - false in context: 
   * Goal 35. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 31 TABLESWITCH L677 Case 2 - false in context: 
   * Goal 36. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 30 TABLESWITCH L677 Case 1 - false in context: 
   * Goal 37. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 33 TABLESWITCH L677 Default-Case - true in context: 
   * Goal 38. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 39. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 40. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 41. decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V_java.lang.IllegalStateException_EXPLICIT
   * Goal 42. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 494
   * Goal 43. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 495
   * Goal 44. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 521
   * Goal 45. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 522
   * Goal 46. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 47. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 48. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 49. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 50. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 51. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 52. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 53. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 601
   * Goal 54. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 602
   * Goal 55. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 56. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 57. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 58. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 641
   * Goal 59. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 644
   * Goal 60. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 645
   * Goal 61. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 647
   * Goal 62. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 672
   * Goal 63. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 673
   * Goal 64. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 677
   * Goal 65. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 694
   * Goal 66. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 67. [METHOD] org.apache.commons.codec.binary.Base64.<init>(I)V
   * Goal 68. [METHOD] org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V
   * Goal 69. [METHODNOEX] org.apache.commons.codec.binary.Base64.<init>(I)V
   * Goal 70. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 71. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 72. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 73. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 74. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 75. Weak Mutation 340: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> lineLength
   * Goal 76. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 77. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 78. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 79. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 80. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 81. Weak Mutation 347: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> ==
   * Goal 82. Weak Mutation 365: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 0
   * Goal 83. Weak Mutation 366: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 1
   * Goal 84. Weak Mutation 367: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> -1
   * Goal 85. Weak Mutation 368: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 3
   * Goal 86. Weak Mutation 369: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 5
   * Goal 87. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 88. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 89. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 90. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 91. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 92. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 93. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 94. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 95. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 96. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 97. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 98. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 99. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 100. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 101. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 102. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 103. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 104. Weak Mutation 393: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 105. Weak Mutation 394: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:641 - InsertUnaryOp Negation
   * Goal 106. Weak Mutation 395: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:641 - ReplaceComparisonOperator == -> !=
   * Goal 107. Weak Mutation 396: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 108. Weak Mutation 397: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 109. Weak Mutation 399: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> lineLength
   * Goal 110. Weak Mutation 400: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> EOF
   * Goal 111. Weak Mutation 401: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 112. Weak Mutation 402: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp Negation of inAvail
   * Goal 113. Weak Mutation 403: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp IINC 1 inAvail
   * Goal 114. Weak Mutation 404: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp IINC -1 inAvail
   * Goal 115. Weak Mutation 405: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceComparisonOperator >= -> -1
   * Goal 116. Weak Mutation 408: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:645 - ReplaceConstant - 1 -> 0
   * Goal 117. Weak Mutation 409: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceConstant - 0 -> 1
   * Goal 118. Weak Mutation 410: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 119. Weak Mutation 411: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> inAvail
   * Goal 120. Weak Mutation 412: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> inPos
   * Goal 121. Weak Mutation 413: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> MASK_8BITS
   * Goal 122. Weak Mutation 414: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 123. Weak Mutation 416: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> EOF
   * Goal 124. Weak Mutation 417: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp Negation of i
   * Goal 125. Weak Mutation 418: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC 1 i
   * Goal 126. Weak Mutation 419: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC -1 i
   * Goal 127. Weak Mutation 420: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 128. Weak Mutation 422: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 129. Weak Mutation 423: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> i
   * Goal 130. Weak Mutation 424: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 131. Weak Mutation 425: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> lineLength
   * Goal 132. Weak Mutation 426: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> EOF
   * Goal 133. Weak Mutation 427: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp Negation of inAvail
   * Goal 134. Weak Mutation 428: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC 1 inAvail
   * Goal 135. Weak Mutation 429: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC -1 inAvail
   * Goal 136. Weak Mutation 432: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> ==
   * Goal 137. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 138. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 139. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 140. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 141. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 142. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 143. Weak Mutation 713: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> !=
   * Goal 144. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 145. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 146. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 147. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 148. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 149. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 150. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 151. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 152. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 153. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 154. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 155. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 156. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 157. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 158. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 159. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 160. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 161. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 162. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 163. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      Base64 base64_0 = null;
      try {
        base64_0 = new Base64((-848));
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // lineSeparator must not contain base64 characters: [\uFFFDg]
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 51
  /*
   * 364 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.<init>(I[B)V: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.<init>(I)V: root-Branch
   * Goal 4. org.apache.commons.codec.binary.Base64.<init>()V: root-Branch
   * Goal 5. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 6. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 7. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 8. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 9. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - false
   * Goal 10. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true
   * Goal 11. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true
   * Goal 12. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - true
   * Goal 13. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - true
   * Goal 14. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - false
   * Goal 15. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - true
   * Goal 16. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - false
   * Goal 17. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I45 Branch 23 IF_ICMPNE L650 - true
   * Goal 18. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I57 Branch 24 IFLT L655 - false
   * Goal 19. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I61 Branch 25 IF_ICMPGE L655 - true
   * Goal 20. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I61 Branch 25 IF_ICMPGE L655 - false
   * Goal 21. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - true
   * Goal 22. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - false
   * Goal 23. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I96 Branch 27 IFNE L660 - true
   * Goal 24. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I96 Branch 27 IFNE L660 - false
   * Goal 25. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - true
   * Goal 26. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - false
   * Goal 27. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I160 Branch 29 IFEQ L672 - false
   * Goal 28. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 30 TABLESWITCH L677 Case 1 - false
   * Goal 29. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 31 TABLESWITCH L677 Case 2 - true
   * Goal 30. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 32 TABLESWITCH L677 Case 3 - false
   * Goal 31. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 33 TABLESWITCH L677 Default-Case - false
   * Goal 32. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - true
   * Goal 33. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 34. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 35. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 36. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - false
   * Goal 37. org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 55 IFEQ L827 - true
   * Goal 38. Branch org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B: root-Branch in context: org.apache.commons.codec.binary.Base64:decodeBase64(Ljava/lang/String;)[B
   * Goal 39. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 40. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 41. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - false in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 42. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 20 IFEQ L641 - true in context: 
   * Goal 43. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - true in context: 
   * Goal 44. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 21 IFGE L644 - false in context: 
   * Goal 45. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - true in context: 
   * Goal 46. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I24 Branch 22 IF_ICMPGE L647 - false in context: 
   * Goal 47. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I45 Branch 23 IF_ICMPNE L650 - true in context: 
   * Goal 48. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I61 Branch 25 IF_ICMPGE L655 - true in context: 
   * Goal 49. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I57 Branch 24 IFLT L655 - false in context: 
   * Goal 50. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I61 Branch 25 IF_ICMPGE L655 - false in context: 
   * Goal 51. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - false in context: 
   * Goal 52. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I71 Branch 26 IFLT L657 - true in context: 
   * Goal 53. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I96 Branch 27 IFNE L660 - true in context: 
   * Goal 54. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I96 Branch 27 IFNE L660 - false in context: 
   * Goal 55. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I160 Branch 29 IFEQ L672 - false in context: 
   * Goal 56. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - true in context: 
   * Goal 57. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I157 Branch 28 IFEQ L672 - false in context: 
   * Goal 58. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 31 TABLESWITCH L677 Case 2 - true in context: 
   * Goal 59. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 32 TABLESWITCH L677 Case 3 - false in context: 
   * Goal 60. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 30 TABLESWITCH L677 Case 1 - false in context: 
   * Goal 61. Branch org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I173 Branch 33 TABLESWITCH L677 Default-Case - false in context: 
   * Goal 62. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 63. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 64. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 65. Branch org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 55 IFEQ L827 - true in context: 
   * Goal 66. <init>(I[BZ)V_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 67. [Output]: org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B:NonEmptyArray
   * Goal 68. org.apache.commons.codec.binary.Base64.<init>()V: Line 452
   * Goal 69. org.apache.commons.codec.binary.Base64.<init>()V: Line 453
   * Goal 70. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 494
   * Goal 71. org.apache.commons.codec.binary.Base64.<init>(I)V: Line 495
   * Goal 72. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 521
   * Goal 73. org.apache.commons.codec.binary.Base64.<init>(I[B)V: Line 522
   * Goal 74. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 75. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 76. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 77. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 78. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 79. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 80. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 593
   * Goal 81. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 594
   * Goal 82. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 83. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 601
   * Goal 84. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 602
   * Goal 85. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 86. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 87. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 88. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 641
   * Goal 89. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 644
   * Goal 90. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 645
   * Goal 91. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 647
   * Goal 92. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 648
   * Goal 93. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 649
   * Goal 94. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 650
   * Goal 95. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 655
   * Goal 96. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 656
   * Goal 97. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 657
   * Goal 98. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 658
   * Goal 99. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 659
   * Goal 100. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 660
   * Goal 101. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 661
   * Goal 102. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 662
   * Goal 103. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 663
   * Goal 104. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 672
   * Goal 105. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 673
   * Goal 106. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 677
   * Goal 107. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 683
   * Goal 108. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 684
   * Goal 109. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 685
   * Goal 110. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 686
   * Goal 111. org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 697
   * Goal 112. org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B: Line 158
   * Goal 113. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 114. org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 827
   * Goal 115. org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 832
   * Goal 116. [METHOD] org.apache.commons.codec.binary.Base64.<init>(I[BZ)V
   * Goal 117. [METHOD] org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B
   * Goal 118. [METHODNOEX] org.apache.commons.codec.binary.Base64.decodeBase64(Ljava/lang/String;)[B
   * Goal 119. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 120. Weak Mutation 331: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceVariable lineSeparator -> CHUNK_SEPARATOR
   * Goal 121. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 122. Weak Mutation 333: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceVariable lineSeparator -> CHUNK_SEPARATOR
   * Goal 123. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 124. Weak Mutation 335: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:593 - ReplaceVariable lineSeparator -> CHUNK_SEPARATOR
   * Goal 125. Weak Mutation 336: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:594 - ReplaceConstant - lineSeparator must not contain base64 characters: [ -> 
   * Goal 126. Weak Mutation 337: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:594 - ReplaceConstant - ] -> 
   * Goal 127. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 128. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 129. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 130. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 131. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 132. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 133. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 134. Weak Mutation 348: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> <
   * Goal 135. Weak Mutation 365: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 0
   * Goal 136. Weak Mutation 366: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 1
   * Goal 137. Weak Mutation 367: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> -1
   * Goal 138. Weak Mutation 368: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 3
   * Goal 139. Weak Mutation 369: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 5
   * Goal 140. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 141. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 142. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 143. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 144. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 145. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 146. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 147. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 148. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 149. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 150. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 151. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 152. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 153. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 154. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 155. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 156. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 157. Weak Mutation 393: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 158. Weak Mutation 394: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:641 - InsertUnaryOp Negation
   * Goal 159. Weak Mutation 395: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:641 - ReplaceComparisonOperator == -> !=
   * Goal 160. Weak Mutation 396: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 161. Weak Mutation 397: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 162. Weak Mutation 398: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> inPos
   * Goal 163. Weak Mutation 399: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> lineLength
   * Goal 164. Weak Mutation 400: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> EOF
   * Goal 165. Weak Mutation 401: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 166. Weak Mutation 402: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp Negation of inAvail
   * Goal 167. Weak Mutation 403: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp IINC 1 inAvail
   * Goal 168. Weak Mutation 404: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - InsertUnaryOp IINC -1 inAvail
   * Goal 169. Weak Mutation 405: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceComparisonOperator >= -> -1
   * Goal 170. Weak Mutation 406: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:644 - ReplaceComparisonOperator >= -> ==
   * Goal 171. Weak Mutation 408: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:645 - ReplaceConstant - 1 -> 0
   * Goal 172. Weak Mutation 409: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceConstant - 0 -> 1
   * Goal 173. Weak Mutation 410: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 174. Weak Mutation 411: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> inAvail
   * Goal 175. Weak Mutation 413: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> MASK_8BITS
   * Goal 176. Weak Mutation 414: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 177. Weak Mutation 415: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> lineLength
   * Goal 178. Weak Mutation 416: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable i -> EOF
   * Goal 179. Weak Mutation 417: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp Negation of i
   * Goal 180. Weak Mutation 418: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC 1 i
   * Goal 181. Weak Mutation 419: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC -1 i
   * Goal 182. Weak Mutation 420: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 183. Weak Mutation 421: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> inPos
   * Goal 184. Weak Mutation 422: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 185. Weak Mutation 423: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> i
   * Goal 186. Weak Mutation 424: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 187. Weak Mutation 425: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> lineLength
   * Goal 188. Weak Mutation 426: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceVariable inAvail -> EOF
   * Goal 189. Weak Mutation 427: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp Negation of inAvail
   * Goal 190. Weak Mutation 428: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC 1 inAvail
   * Goal 191. Weak Mutation 429: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - InsertUnaryOp IINC -1 inAvail
   * Goal 192. Weak Mutation 430: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> -1
   * Goal 193. Weak Mutation 431: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> >
   * Goal 194. Weak Mutation 432: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:647 - ReplaceComparisonOperator >= -> ==
   * Goal 195. Weak Mutation 433: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> PEM_CHUNK_SIZE
   * Goal 196. Weak Mutation 434: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> MIME_CHUNK_SIZE
   * Goal 197. Weak Mutation 435: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> lineLength
   * Goal 198. Weak Mutation 436: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> EOF
   * Goal 199. Weak Mutation 437: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - ReplaceVariable decodeSize -> MASK_8BITS
   * Goal 200. Weak Mutation 438: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp Negation
   * Goal 201. Weak Mutation 439: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp +1
   * Goal 202. Weak Mutation 440: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:648 - InsertUnaryOp -1
   * Goal 203. Weak Mutation 441: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable in -> CHUNK_SEPARATOR
   * Goal 204. Weak Mutation 442: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable in -> buffer
   * Goal 205. Weak Mutation 443: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> PEM_CHUNK_SIZE
   * Goal 206. Weak Mutation 444: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> inAvail
   * Goal 207. Weak Mutation 445: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> MASK_8BITS
   * Goal 208. Weak Mutation 447: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> MIME_CHUNK_SIZE
   * Goal 209. Weak Mutation 448: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> lineLength
   * Goal 210. Weak Mutation 449: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> EOF
   * Goal 211. Weak Mutation 450: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp Negation of inPos
   * Goal 212. Weak Mutation 451: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp IINC 1 inPos
   * Goal 213. Weak Mutation 452: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - InsertUnaryOp IINC -1 inPos
   * Goal 214. Weak Mutation 453: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> inAvail
   * Goal 215. Weak Mutation 454: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:649 - ReplaceVariable inPos -> i
   * Goal 216. Weak Mutation 455: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> PAD
   * Goal 217. Weak Mutation 456: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> pad
   * Goal 218. Weak Mutation 457: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 219. Weak Mutation 458: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp Negation of b
   * Goal 220. Weak Mutation 459: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp IINC 1 b
   * Goal 221. Weak Mutation 460: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp IINC -1 b
   * Goal 222. Weak Mutation 463: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - InsertUnaryOp Negation
   * Goal 223. Weak Mutation 465: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceComparisonOperator != -> <
   * Goal 224. Weak Mutation 466: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:650 - ReplaceComparisonOperator != -> >
   * Goal 225. Weak Mutation 468: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD
   * Goal 226. Weak Mutation 469: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> pad
   * Goal 227. Weak Mutation 470: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 228. Weak Mutation 471: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp Negation of b
   * Goal 229. Weak Mutation 472: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC 1 b
   * Goal 230. Weak Mutation 473: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC -1 b
   * Goal 231. Weak Mutation 475: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceComparisonOperator < -> !=
   * Goal 232. Weak Mutation 477: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD
   * Goal 233. Weak Mutation 478: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> pad
   * Goal 234. Weak Mutation 479: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 235. Weak Mutation 480: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp Negation of b
   * Goal 236. Weak Mutation 481: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC 1 b
   * Goal 237. Weak Mutation 482: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - InsertUnaryOp IINC -1 b
   * Goal 238. Weak Mutation 483: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 239. Weak Mutation 484: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceComparisonOperator >= -> -1
   * Goal 240. Weak Mutation 486: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:655 - ReplaceComparisonOperator >= -> ==
   * Goal 241. Weak Mutation 487: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 242. Weak Mutation 488: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> PAD
   * Goal 243. Weak Mutation 489: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> pad
   * Goal 244. Weak Mutation 490: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - ReplaceVariable b -> PAD_DEFAULT
   * Goal 245. Weak Mutation 491: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp Negation of b
   * Goal 246. Weak Mutation 492: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp IINC 1 b
   * Goal 247. Weak Mutation 493: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:656 - InsertUnaryOp IINC -1 b
   * Goal 248. Weak Mutation 494: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> PEM_CHUNK_SIZE
   * Goal 249. Weak Mutation 495: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> inAvail
   * Goal 250. Weak Mutation 496: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> inPos
   * Goal 251. Weak Mutation 497: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> MASK_8BITS
   * Goal 252. Weak Mutation 498: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> i
   * Goal 253. Weak Mutation 499: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> MIME_CHUNK_SIZE
   * Goal 254. Weak Mutation 500: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> lineLength
   * Goal 255. Weak Mutation 501: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceVariable result -> EOF
   * Goal 256. Weak Mutation 502: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp Negation of result
   * Goal 257. Weak Mutation 503: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp IINC 1 result
   * Goal 258. Weak Mutation 504: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - InsertUnaryOp IINC -1 result
   * Goal 259. Weak Mutation 505: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceComparisonOperator < -> -2
   * Goal 260. Weak Mutation 506: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:657 - ReplaceComparisonOperator < -> !=
   * Goal 261. Weak Mutation 508: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - InsertUnaryOp Negation
   * Goal 262. Weak Mutation 509: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - InsertUnaryOp +1
   * Goal 263. Weak Mutation 510: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - InsertUnaryOp -1
   * Goal 264. Weak Mutation 511: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 1 -> 0
   * Goal 265. Weak Mutation 512: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> %
   * Goal 266. Weak Mutation 513: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> -
   * Goal 267. Weak Mutation 514: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> *
   * Goal 268. Weak Mutation 515: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator + -> /
   * Goal 269. Weak Mutation 516: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 0
   * Goal 270. Weak Mutation 517: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 1
   * Goal 271. Weak Mutation 518: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> -1
   * Goal 272. Weak Mutation 519: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 3
   * Goal 273. Weak Mutation 520: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceConstant - 4 -> 5
   * Goal 274. Weak Mutation 521: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> +
   * Goal 275. Weak Mutation 522: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> -
   * Goal 276. Weak Mutation 523: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> *
   * Goal 277. Weak Mutation 524: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:658 - ReplaceArithmeticOperator % -> /
   * Goal 278. Weak Mutation 525: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp Negation
   * Goal 279. Weak Mutation 526: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp +1
   * Goal 280. Weak Mutation 527: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp -1
   * Goal 281. Weak Mutation 528: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 0
   * Goal 282. Weak Mutation 529: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 1
   * Goal 283. Weak Mutation 530: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> -1
   * Goal 284. Weak Mutation 531: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 5
   * Goal 285. Weak Mutation 532: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceConstant - 6 -> 7
   * Goal 286. Weak Mutation 533: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceBitwiseOperator << I -> >> I
   * Goal 287. Weak Mutation 534: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceBitwiseOperator << I -> >>> I
   * Goal 288. Weak Mutation 535: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> PEM_CHUNK_SIZE
   * Goal 289. Weak Mutation 536: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> inAvail
   * Goal 290. Weak Mutation 537: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> inPos
   * Goal 291. Weak Mutation 538: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> MASK_8BITS
   * Goal 292. Weak Mutation 539: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> i
   * Goal 293. Weak Mutation 540: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> MIME_CHUNK_SIZE
   * Goal 294. Weak Mutation 541: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> lineLength
   * Goal 295. Weak Mutation 542: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceVariable result -> EOF
   * Goal 296. Weak Mutation 543: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp Negation of result
   * Goal 297. Weak Mutation 544: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp IINC 1 result
   * Goal 298. Weak Mutation 545: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - InsertUnaryOp IINC -1 result
   * Goal 299. Weak Mutation 546: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> %
   * Goal 300. Weak Mutation 547: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> -
   * Goal 301. Weak Mutation 548: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> *
   * Goal 302. Weak Mutation 549: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:659 - ReplaceArithmeticOperator + -> /
   * Goal 303. Weak Mutation 550: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - InsertUnaryOp Negation
   * Goal 304. Weak Mutation 551: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - InsertUnaryOp +1
   * Goal 305. Weak Mutation 552: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - InsertUnaryOp -1
   * Goal 306. Weak Mutation 553: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - ReplaceComparisonOperator != -> -1
   * Goal 307. Weak Mutation 554: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:660 - ReplaceComparisonOperator != -> <
   * Goal 308. Weak Mutation 556: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceVariable buffer -> in
   * Goal 309. Weak Mutation 557: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceVariable buffer -> CHUNK_SEPARATOR
   * Goal 310. Weak Mutation 558: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp Negation
   * Goal 311. Weak Mutation 559: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp +1
   * Goal 312. Weak Mutation 560: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp -1
   * Goal 313. Weak Mutation 561: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 1 -> 0
   * Goal 314. Weak Mutation 562: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceArithmeticOperator + -> %
   * Goal 315. Weak Mutation 563: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceArithmeticOperator + -> -
   * Goal 316. Weak Mutation 564: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceArithmeticOperator + -> *
   * Goal 317. Weak Mutation 565: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceArithmeticOperator + -> /
   * Goal 318. Weak Mutation 566: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp Negation
   * Goal 319. Weak Mutation 567: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp +1
   * Goal 320. Weak Mutation 568: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - InsertUnaryOp -1
   * Goal 321. Weak Mutation 569: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 16 -> 0
   * Goal 322. Weak Mutation 570: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 16 -> 1
   * Goal 323. Weak Mutation 571: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 16 -> -1
   * Goal 324. Weak Mutation 572: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 16 -> 15
   * Goal 325. Weak Mutation 573: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 16 -> 17
   * Goal 326. Weak Mutation 574: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceBitwiseOperator >> I -> << I
   * Goal 327. Weak Mutation 576: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 255 -> 0
   * Goal 328. Weak Mutation 577: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 255 -> 1
   * Goal 329. Weak Mutation 578: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 255 -> -1
   * Goal 330. Weak Mutation 579: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 255 -> 254
   * Goal 331. Weak Mutation 580: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceConstant - 255 -> 256
   * Goal 332. Weak Mutation 581: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceBitwiseOperator & -> |
   * Goal 333. Weak Mutation 582: org.apache.commons.codec.binary.Base64.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:661 - ReplaceBitwiseOperator & -> ^
   * Goal 334. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 335. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 336. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 337. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 338. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 339. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 340. Weak Mutation 712: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> -2
   * Goal 341. Weak Mutation 713: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> !=
   * Goal 342. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 343. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 344. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 345. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 346. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 347. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 348. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 349. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 350. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 351. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 352. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 353. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 354. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 355. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 356. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 357. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 358. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 359. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 360. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 361. Weak Mutation 736: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> >=
   * Goal 362. Weak Mutation 738: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 1 -> 0
   * Goal 363. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   * Goal 364. Weak Mutation 745: org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:827 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      // Undeclared exception!
      try { 
        Base64.decodeBase64("s`LGEU~5");
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // lineSeparator must not contain base64 characters: [\uFFFDg]
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 52
  /*
   * 46 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - false
   * Goal 3. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - true
   * Goal 4. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true
   * Goal 5. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch in context: org.apache.commons.codec.binary.Base64:<init>(I[BZ)V
   * Goal 6. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - false in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 7. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 8. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 9. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 10. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 11. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 12. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 13. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 14. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 605
   * Goal 15. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 606
   * Goal 16. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 17. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 18. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 19. [METHOD] org.apache.commons.codec.binary.Base64.<init>(I[BZ)V
   * Goal 20. [METHODNOEX] org.apache.commons.codec.binary.Base64.<init>(I[BZ)V
   * Goal 21. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 22. Weak Mutation 331: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceVariable lineSeparator -> CHUNK_SEPARATOR
   * Goal 23. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 24. Weak Mutation 370: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:605 - ReplaceConstant - 4 -> 0
   * Goal 25. Weak Mutation 371: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:605 - ReplaceConstant - 4 -> 1
   * Goal 26. Weak Mutation 372: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:605 - ReplaceConstant - 4 -> -1
   * Goal 27. Weak Mutation 373: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:605 - ReplaceConstant - 4 -> 3
   * Goal 28. Weak Mutation 374: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:605 - ReplaceConstant - 4 -> 5
   * Goal 29. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 30. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 31. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 32. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 33. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 34. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 35. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 36. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 37. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 38. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 39. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 40. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 41. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 42. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 43. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 44. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 45. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 46. Weak Mutation 393: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   */

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Base64 base64_0 = new Base64(2234, (byte[]) null, false);
      assertFalse(base64_0.isUrlSafe());
  }

  //Test case number: 53
  /*
   * 155 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: I26 Branch 12 IFEQ L396 - false
   * Goal 3. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: I56 Branch 14 IFNE L404 - true
   * Goal 4. Branch org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B: root-Branch in context: org.apache.commons.codec.binary.Base64:encodeInteger(Ljava/math/BigInteger;)[B
   * Goal 5. Branch org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: I26 Branch 12 IFEQ L396 - false in context: 
   * Goal 6. Branch org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: I36 Branch 13 IF_ICMPNE L396 - true in context: 
   * Goal 7. Branch org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: I56 Branch 14 IFNE L404 - true in context: 
   * Goal 8. encodeInteger(Ljava/math/BigInteger;)[B_java.lang.NegativeArraySizeException_IMPLICIT
   * Goal 9. org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B: Line 319
   * Goal 10. org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B: Line 320
   * Goal 11. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 391
   * Goal 12. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 393
   * Goal 13. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 394
   * Goal 14. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 396
   * Goal 15. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 400
   * Goal 16. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 401
   * Goal 17. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 404
   * Goal 18. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 408
   * Goal 19. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 409
   * Goal 20. [METHOD] org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B
   * Goal 21. Weak Mutation 76: org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B:319 - ReplaceConstant - bigInteger -> 
   * Goal 22. Weak Mutation 151: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceVariable bitlen -> PEM_CHUNK_SIZE
   * Goal 23. Weak Mutation 152: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceVariable bitlen -> MIME_CHUNK_SIZE
   * Goal 24. Weak Mutation 153: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceVariable bitlen -> EOF
   * Goal 25. Weak Mutation 154: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceVariable bitlen -> MASK_8BITS
   * Goal 26. Weak Mutation 155: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - InsertUnaryOp Negation of bitlen
   * Goal 27. Weak Mutation 156: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - InsertUnaryOp IINC 1 bitlen
   * Goal 28. Weak Mutation 157: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - InsertUnaryOp IINC -1 bitlen
   * Goal 29. Weak Mutation 158: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 7 -> 0
   * Goal 30. Weak Mutation 159: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 7 -> 1
   * Goal 31. Weak Mutation 160: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 7 -> -1
   * Goal 32. Weak Mutation 161: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 7 -> 6
   * Goal 33. Weak Mutation 162: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 7 -> 8
   * Goal 34. Weak Mutation 163: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceArithmeticOperator + -> %
   * Goal 35. Weak Mutation 164: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceArithmeticOperator + -> -
   * Goal 36. Weak Mutation 165: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceArithmeticOperator + -> *
   * Goal 37. Weak Mutation 166: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceArithmeticOperator + -> /
   * Goal 38. Weak Mutation 167: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 0
   * Goal 39. Weak Mutation 168: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 1
   * Goal 40. Weak Mutation 169: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> -1
   * Goal 41. Weak Mutation 170: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 2
   * Goal 42. Weak Mutation 171: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 4
   * Goal 43. Weak Mutation 172: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceBitwiseOperator >> I -> << I
   * Goal 44. Weak Mutation 173: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceBitwiseOperator >> I -> >>> I
   * Goal 45. Weak Mutation 174: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 0
   * Goal 46. Weak Mutation 175: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 1
   * Goal 47. Weak Mutation 176: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> -1
   * Goal 48. Weak Mutation 177: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 2
   * Goal 49. Weak Mutation 178: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 4
   * Goal 50. Weak Mutation 179: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceBitwiseOperator << I -> >> I
   * Goal 51. Weak Mutation 180: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceBitwiseOperator << I -> >>> I
   * Goal 52. Weak Mutation 181: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 0
   * Goal 53. Weak Mutation 182: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 1
   * Goal 54. Weak Mutation 183: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> -1
   * Goal 55. Weak Mutation 184: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 7
   * Goal 56. Weak Mutation 185: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 9
   * Goal 57. Weak Mutation 186: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator % -> +
   * Goal 58. Weak Mutation 187: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator % -> -
   * Goal 59. Weak Mutation 188: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator % -> *
   * Goal 60. Weak Mutation 189: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator % -> /
   * Goal 61. Weak Mutation 191: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceComparisonOperator == -> >=
   * Goal 62. Weak Mutation 193: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 0
   * Goal 63. Weak Mutation 194: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 1
   * Goal 64. Weak Mutation 195: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> -1
   * Goal 65. Weak Mutation 196: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 7
   * Goal 66. Weak Mutation 197: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 9
   * Goal 67. Weak Mutation 198: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator / -> +
   * Goal 68. Weak Mutation 199: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator / -> %
   * Goal 69. Weak Mutation 200: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator / -> -
   * Goal 70. Weak Mutation 201: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator / -> *
   * Goal 71. Weak Mutation 202: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 1 -> 0
   * Goal 72. Weak Mutation 203: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator + -> %
   * Goal 73. Weak Mutation 204: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator + -> -
   * Goal 74. Weak Mutation 205: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator + -> *
   * Goal 75. Weak Mutation 206: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator + -> /
   * Goal 76. Weak Mutation 207: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceVariable bitlen -> PEM_CHUNK_SIZE
   * Goal 77. Weak Mutation 208: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceVariable bitlen -> MIME_CHUNK_SIZE
   * Goal 78. Weak Mutation 209: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceVariable bitlen -> EOF
   * Goal 79. Weak Mutation 210: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceVariable bitlen -> MASK_8BITS
   * Goal 80. Weak Mutation 211: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - InsertUnaryOp Negation of bitlen
   * Goal 81. Weak Mutation 212: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - InsertUnaryOp IINC 1 bitlen
   * Goal 82. Weak Mutation 213: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - InsertUnaryOp IINC -1 bitlen
   * Goal 83. Weak Mutation 214: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 0
   * Goal 84. Weak Mutation 215: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 1
   * Goal 85. Weak Mutation 216: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> -1
   * Goal 86. Weak Mutation 217: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 7
   * Goal 87. Weak Mutation 218: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 9
   * Goal 88. Weak Mutation 219: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator / -> +
   * Goal 89. Weak Mutation 220: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator / -> %
   * Goal 90. Weak Mutation 221: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator / -> -
   * Goal 91. Weak Mutation 222: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator / -> *
   * Goal 92. Weak Mutation 224: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceComparisonOperator != -> <
   * Goal 93. Weak Mutation 227: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:400 - ReplaceConstant - 0 -> 1
   * Goal 94. Weak Mutation 228: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:401 - ReplaceVariable bigBytes -> CHUNK_SEPARATOR
   * Goal 95. Weak Mutation 229: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceConstant - 8 -> 0
   * Goal 96. Weak Mutation 230: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceConstant - 8 -> 1
   * Goal 97. Weak Mutation 231: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceConstant - 8 -> -1
   * Goal 98. Weak Mutation 232: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceConstant - 8 -> 7
   * Goal 99. Weak Mutation 233: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceConstant - 8 -> 9
   * Goal 100. Weak Mutation 234: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceArithmeticOperator % -> +
   * Goal 101. Weak Mutation 235: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceArithmeticOperator % -> -
   * Goal 102. Weak Mutation 236: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceArithmeticOperator % -> *
   * Goal 103. Weak Mutation 237: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceArithmeticOperator % -> /
   * Goal 104. Weak Mutation 239: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceComparisonOperator != -> <
   * Goal 105. Weak Mutation 244: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable bitlen -> PEM_CHUNK_SIZE
   * Goal 106. Weak Mutation 245: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable bitlen -> MIME_CHUNK_SIZE
   * Goal 107. Weak Mutation 246: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable bitlen -> len
   * Goal 108. Weak Mutation 247: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable bitlen -> EOF
   * Goal 109. Weak Mutation 248: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable bitlen -> startSrc
   * Goal 110. Weak Mutation 249: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable bitlen -> MASK_8BITS
   * Goal 111. Weak Mutation 250: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - InsertUnaryOp Negation of bitlen
   * Goal 112. Weak Mutation 251: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - InsertUnaryOp IINC 1 bitlen
   * Goal 113. Weak Mutation 252: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - InsertUnaryOp IINC -1 bitlen
   * Goal 114. Weak Mutation 253: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceConstant - 8 -> 0
   * Goal 115. Weak Mutation 254: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceConstant - 8 -> 1
   * Goal 116. Weak Mutation 255: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceConstant - 8 -> -1
   * Goal 117. Weak Mutation 256: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceConstant - 8 -> 7
   * Goal 118. Weak Mutation 257: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceConstant - 8 -> 9
   * Goal 119. Weak Mutation 258: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceArithmeticOperator / -> +
   * Goal 120. Weak Mutation 259: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceArithmeticOperator / -> %
   * Goal 121. Weak Mutation 260: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceArithmeticOperator / -> -
   * Goal 122. Weak Mutation 261: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceArithmeticOperator / -> *
   * Goal 123. Weak Mutation 262: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable len -> bitlen
   * Goal 124. Weak Mutation 263: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable len -> PEM_CHUNK_SIZE
   * Goal 125. Weak Mutation 264: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable len -> MIME_CHUNK_SIZE
   * Goal 126. Weak Mutation 265: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable len -> EOF
   * Goal 127. Weak Mutation 266: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable len -> startSrc
   * Goal 128. Weak Mutation 267: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable len -> MASK_8BITS
   * Goal 129. Weak Mutation 268: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - InsertUnaryOp Negation of len
   * Goal 130. Weak Mutation 269: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - InsertUnaryOp IINC 1 len
   * Goal 131. Weak Mutation 270: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - InsertUnaryOp IINC -1 len
   * Goal 132. Weak Mutation 271: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceArithmeticOperator - -> +
   * Goal 133. Weak Mutation 272: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceArithmeticOperator - -> %
   * Goal 134. Weak Mutation 273: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceArithmeticOperator - -> *
   * Goal 135. Weak Mutation 274: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceArithmeticOperator - -> /
   * Goal 136. Weak Mutation 275: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceVariable bitlen -> PEM_CHUNK_SIZE
   * Goal 137. Weak Mutation 276: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceVariable bitlen -> len
   * Goal 138. Weak Mutation 277: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceVariable bitlen -> MASK_8BITS
   * Goal 139. Weak Mutation 278: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceVariable bitlen -> MIME_CHUNK_SIZE
   * Goal 140. Weak Mutation 279: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceVariable bitlen -> EOF
   * Goal 141. Weak Mutation 280: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceVariable bitlen -> startSrc
   * Goal 142. Weak Mutation 281: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceVariable bitlen -> startDst
   * Goal 143. Weak Mutation 282: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - InsertUnaryOp Negation of bitlen
   * Goal 144. Weak Mutation 283: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - InsertUnaryOp IINC 1 bitlen
   * Goal 145. Weak Mutation 284: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - InsertUnaryOp IINC -1 bitlen
   * Goal 146. Weak Mutation 285: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceConstant - 8 -> 0
   * Goal 147. Weak Mutation 286: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceConstant - 8 -> 1
   * Goal 148. Weak Mutation 287: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceConstant - 8 -> -1
   * Goal 149. Weak Mutation 288: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceConstant - 8 -> 7
   * Goal 150. Weak Mutation 289: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceConstant - 8 -> 9
   * Goal 151. Weak Mutation 290: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceArithmeticOperator / -> +
   * Goal 152. Weak Mutation 291: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceArithmeticOperator / -> %
   * Goal 153. Weak Mutation 292: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceArithmeticOperator / -> -
   * Goal 154. Weak Mutation 293: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceArithmeticOperator / -> *
   * Goal 155. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: I36 Branch 13 IF_ICMPNE L396 - true
   */

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = bigInteger0.shiftLeft(2147483639);
      // Undeclared exception!
      try { 
        Base64.encodeInteger(bigInteger1);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -268435456
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 54
  /*
   * 185 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: root-Branch
   * Goal 4. org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B: root-Branch
   * Goal 5. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I3 Branch 1 IFNULL L238 - false
   * Goal 6. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I6 Branch 2 IFNE L238 - false
   * Goal 7. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: I26 Branch 12 IFEQ L396 - true
   * Goal 8. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: I56 Branch 14 IFNE L404 - false
   * Goal 9. Branch org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B: root-Branch in context: org.apache.commons.codec.binary.Base64:encodeInteger(Ljava/math/BigInteger;)[B
   * Goal 10. Branch org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B: root-Branch in context: org.apache.commons.codec.binary.Base64:encodeBase64URLSafe([B)[B
   * Goal 11. Branch org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: I26 Branch 12 IFEQ L396 - true in context: 
   * Goal 12. Branch org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: I56 Branch 14 IFNE L404 - false in context: 
   * Goal 13. [Output]: org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B:EmptyArray
   * Goal 14. [Output]: org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B:EmptyArray
   * Goal 15. org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B: Line 197
   * Goal 16. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: Line 216
   * Goal 17. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 238
   * Goal 18. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 239
   * Goal 19. org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B: Line 292
   * Goal 20. org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B: Line 319
   * Goal 21. org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B: Line 320
   * Goal 22. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 391
   * Goal 23. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 393
   * Goal 24. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 394
   * Goal 25. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 396
   * Goal 26. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 400
   * Goal 27. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 401
   * Goal 28. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 404
   * Goal 29. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 405
   * Goal 30. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 406
   * Goal 31. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 408
   * Goal 32. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 409
   * Goal 33. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 410
   * Goal 34. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 411
   * Goal 35. [METHOD] org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B
   * Goal 36. [METHOD] org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B
   * Goal 37. [METHODNOEX] org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B
   * Goal 38. [METHODNOEX] org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B
   * Goal 39. Weak Mutation 5: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 40. Weak Mutation 6: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp Negation of isChunked
   * Goal 41. Weak Mutation 7: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp IINC 1 isChunked
   * Goal 42. Weak Mutation 8: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp IINC -1 isChunked
   * Goal 43. Weak Mutation 9: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - ReplaceConstant - 0 -> 1
   * Goal 44. Weak Mutation 10: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 45. Weak Mutation 11: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable isChunked -> urlSafe
   * Goal 46. Weak Mutation 12: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of isChunked
   * Goal 47. Weak Mutation 13: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC 1 isChunked
   * Goal 48. Weak Mutation 14: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC -1 isChunked
   * Goal 49. Weak Mutation 15: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable urlSafe -> isChunked
   * Goal 50. Weak Mutation 16: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of urlSafe
   * Goal 51. Weak Mutation 17: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 0
   * Goal 52. Weak Mutation 18: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 1
   * Goal 53. Weak Mutation 19: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -1
   * Goal 54. Weak Mutation 20: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 2147483646
   * Goal 55. Weak Mutation 21: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -2147483648
   * Goal 56. Weak Mutation 22: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 57. Weak Mutation 23: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator = null -> != null
   * Goal 58. Weak Mutation 24: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 59. Weak Mutation 25: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator != -> -1
   * Goal 60. Weak Mutation 28: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:239 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 61. Weak Mutation 70: org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B:292 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 62. Weak Mutation 71: org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B:292 - ReplaceConstant - 0 -> 1
   * Goal 63. Weak Mutation 72: org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B:292 - ReplaceConstant - 1 -> 0
   * Goal 64. Weak Mutation 76: org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B:319 - ReplaceConstant - bigInteger -> 
   * Goal 65. Weak Mutation 77: org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B:320 - ReplaceConstant - 0 -> 1
   * Goal 66. Weak Mutation 151: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceVariable bitlen -> PEM_CHUNK_SIZE
   * Goal 67. Weak Mutation 152: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceVariable bitlen -> MIME_CHUNK_SIZE
   * Goal 68. Weak Mutation 153: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceVariable bitlen -> EOF
   * Goal 69. Weak Mutation 154: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceVariable bitlen -> MASK_8BITS
   * Goal 70. Weak Mutation 155: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - InsertUnaryOp Negation of bitlen
   * Goal 71. Weak Mutation 156: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - InsertUnaryOp IINC 1 bitlen
   * Goal 72. Weak Mutation 157: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - InsertUnaryOp IINC -1 bitlen
   * Goal 73. Weak Mutation 158: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 7 -> 0
   * Goal 74. Weak Mutation 159: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 7 -> 1
   * Goal 75. Weak Mutation 160: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 7 -> -1
   * Goal 76. Weak Mutation 161: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 7 -> 6
   * Goal 77. Weak Mutation 162: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 7 -> 8
   * Goal 78. Weak Mutation 163: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceArithmeticOperator + -> %
   * Goal 79. Weak Mutation 164: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceArithmeticOperator + -> -
   * Goal 80. Weak Mutation 165: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceArithmeticOperator + -> *
   * Goal 81. Weak Mutation 166: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceArithmeticOperator + -> /
   * Goal 82. Weak Mutation 167: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 0
   * Goal 83. Weak Mutation 168: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 1
   * Goal 84. Weak Mutation 169: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> -1
   * Goal 85. Weak Mutation 170: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 2
   * Goal 86. Weak Mutation 171: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 4
   * Goal 87. Weak Mutation 172: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceBitwiseOperator >> I -> << I
   * Goal 88. Weak Mutation 174: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 0
   * Goal 89. Weak Mutation 175: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 1
   * Goal 90. Weak Mutation 176: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> -1
   * Goal 91. Weak Mutation 177: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 2
   * Goal 92. Weak Mutation 178: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 4
   * Goal 93. Weak Mutation 181: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 0
   * Goal 94. Weak Mutation 182: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 1
   * Goal 95. Weak Mutation 183: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> -1
   * Goal 96. Weak Mutation 184: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 7
   * Goal 97. Weak Mutation 185: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 9
   * Goal 98. Weak Mutation 186: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator % -> +
   * Goal 99. Weak Mutation 187: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator % -> -
   * Goal 100. Weak Mutation 190: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceComparisonOperator == -> -2
   * Goal 101. Weak Mutation 227: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:400 - ReplaceConstant - 0 -> 1
   * Goal 102. Weak Mutation 228: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:401 - ReplaceVariable bigBytes -> CHUNK_SEPARATOR
   * Goal 103. Weak Mutation 229: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceConstant - 8 -> 0
   * Goal 104. Weak Mutation 230: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceConstant - 8 -> 1
   * Goal 105. Weak Mutation 231: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceConstant - 8 -> -1
   * Goal 106. Weak Mutation 232: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceConstant - 8 -> 7
   * Goal 107. Weak Mutation 233: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceConstant - 8 -> 9
   * Goal 108. Weak Mutation 234: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceArithmeticOperator % -> +
   * Goal 109. Weak Mutation 235: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceArithmeticOperator % -> -
   * Goal 110. Weak Mutation 238: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:404 - ReplaceComparisonOperator != -> -1
   * Goal 111. Weak Mutation 241: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:405 - ReplaceConstant - 1 -> 0
   * Goal 112. Weak Mutation 242: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:406 - ReplaceVariable len -> bitlen
   * Goal 113. Weak Mutation 243: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:406 - ReplaceVariable len -> startSrc
   * Goal 114. Weak Mutation 244: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable bitlen -> PEM_CHUNK_SIZE
   * Goal 115. Weak Mutation 245: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable bitlen -> MIME_CHUNK_SIZE
   * Goal 116. Weak Mutation 247: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable bitlen -> EOF
   * Goal 117. Weak Mutation 248: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable bitlen -> startSrc
   * Goal 118. Weak Mutation 249: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable bitlen -> MASK_8BITS
   * Goal 119. Weak Mutation 250: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - InsertUnaryOp Negation of bitlen
   * Goal 120. Weak Mutation 251: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - InsertUnaryOp IINC 1 bitlen
   * Goal 121. Weak Mutation 252: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - InsertUnaryOp IINC -1 bitlen
   * Goal 122. Weak Mutation 253: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceConstant - 8 -> 0
   * Goal 123. Weak Mutation 254: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceConstant - 8 -> 1
   * Goal 124. Weak Mutation 255: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceConstant - 8 -> -1
   * Goal 125. Weak Mutation 256: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceConstant - 8 -> 7
   * Goal 126. Weak Mutation 257: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceConstant - 8 -> 9
   * Goal 127. Weak Mutation 258: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceArithmeticOperator / -> +
   * Goal 128. Weak Mutation 260: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceArithmeticOperator / -> -
   * Goal 129. Weak Mutation 263: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable len -> PEM_CHUNK_SIZE
   * Goal 130. Weak Mutation 264: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable len -> MIME_CHUNK_SIZE
   * Goal 131. Weak Mutation 265: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable len -> EOF
   * Goal 132. Weak Mutation 266: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable len -> startSrc
   * Goal 133. Weak Mutation 267: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceVariable len -> MASK_8BITS
   * Goal 134. Weak Mutation 268: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - InsertUnaryOp Negation of len
   * Goal 135. Weak Mutation 269: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - InsertUnaryOp IINC 1 len
   * Goal 136. Weak Mutation 270: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - InsertUnaryOp IINC -1 len
   * Goal 137. Weak Mutation 272: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceArithmeticOperator - -> %
   * Goal 138. Weak Mutation 274: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:408 - ReplaceArithmeticOperator - -> /
   * Goal 139. Weak Mutation 275: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceVariable bitlen -> PEM_CHUNK_SIZE
   * Goal 140. Weak Mutation 277: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceVariable bitlen -> MASK_8BITS
   * Goal 141. Weak Mutation 278: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceVariable bitlen -> MIME_CHUNK_SIZE
   * Goal 142. Weak Mutation 279: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceVariable bitlen -> EOF
   * Goal 143. Weak Mutation 280: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceVariable bitlen -> startSrc
   * Goal 144. Weak Mutation 282: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - InsertUnaryOp Negation of bitlen
   * Goal 145. Weak Mutation 283: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - InsertUnaryOp IINC 1 bitlen
   * Goal 146. Weak Mutation 284: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - InsertUnaryOp IINC -1 bitlen
   * Goal 147. Weak Mutation 285: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceConstant - 8 -> 0
   * Goal 148. Weak Mutation 286: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceConstant - 8 -> 1
   * Goal 149. Weak Mutation 287: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceConstant - 8 -> -1
   * Goal 150. Weak Mutation 288: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceConstant - 8 -> 7
   * Goal 151. Weak Mutation 289: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceConstant - 8 -> 9
   * Goal 152. Weak Mutation 290: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceArithmeticOperator / -> +
   * Goal 153. Weak Mutation 292: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:409 - ReplaceArithmeticOperator / -> -
   * Goal 154. Weak Mutation 294: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable bigBytes -> resizedBytes
   * Goal 155. Weak Mutation 295: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable bigBytes -> CHUNK_SEPARATOR
   * Goal 156. Weak Mutation 296: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startSrc -> bitlen
   * Goal 157. Weak Mutation 297: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startSrc -> PEM_CHUNK_SIZE
   * Goal 158. Weak Mutation 298: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startSrc -> len
   * Goal 159. Weak Mutation 299: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startSrc -> MASK_8BITS
   * Goal 160. Weak Mutation 300: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startSrc -> MIME_CHUNK_SIZE
   * Goal 161. Weak Mutation 301: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startSrc -> EOF
   * Goal 162. Weak Mutation 302: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startSrc -> startDst
   * Goal 163. Weak Mutation 303: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - InsertUnaryOp Negation of startSrc
   * Goal 164. Weak Mutation 304: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - InsertUnaryOp IINC 1 startSrc
   * Goal 165. Weak Mutation 305: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - InsertUnaryOp IINC -1 startSrc
   * Goal 166. Weak Mutation 306: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable resizedBytes -> bigBytes
   * Goal 167. Weak Mutation 307: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable resizedBytes -> CHUNK_SEPARATOR
   * Goal 168. Weak Mutation 309: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startDst -> PEM_CHUNK_SIZE
   * Goal 169. Weak Mutation 311: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startDst -> MASK_8BITS
   * Goal 170. Weak Mutation 312: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startDst -> MIME_CHUNK_SIZE
   * Goal 171. Weak Mutation 313: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startDst -> EOF
   * Goal 172. Weak Mutation 314: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable startDst -> startSrc
   * Goal 173. Weak Mutation 315: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - InsertUnaryOp Negation of startDst
   * Goal 174. Weak Mutation 316: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - InsertUnaryOp IINC 1 startDst
   * Goal 175. Weak Mutation 317: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - InsertUnaryOp IINC -1 startDst
   * Goal 176. Weak Mutation 319: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable len -> PEM_CHUNK_SIZE
   * Goal 177. Weak Mutation 320: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable len -> MASK_8BITS
   * Goal 178. Weak Mutation 321: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable len -> MIME_CHUNK_SIZE
   * Goal 179. Weak Mutation 322: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable len -> EOF
   * Goal 180. Weak Mutation 323: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - ReplaceVariable len -> startSrc
   * Goal 181. Weak Mutation 325: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - InsertUnaryOp Negation of len
   * Goal 182. Weak Mutation 326: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - InsertUnaryOp IINC 1 len
   * Goal 183. Weak Mutation 327: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:410 - InsertUnaryOp IINC -1 len
   * Goal 184. Weak Mutation 328: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:411 - ReplaceVariable resizedBytes -> bigBytes
   * Goal 185. Weak Mutation 329: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:411 - ReplaceVariable resizedBytes -> CHUNK_SEPARATOR
   */

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      byte[] byteArray0 = Base64.encodeInteger(bigInteger0);
      byte[] byteArray1 = Base64.encodeBase64URLSafe(byteArray0);
      assertEquals(0, byteArray1.length);
  }

  //Test case number: 55
  /*
   * 32 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I4 Branch 5 IF_ICMPEQ L347 - false
   * Goal 2. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I6 Branch 6 IFLT L347 - false
   * Goal 3. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I10 Branch 7 IF_ICMPGE L347 - true
   * Goal 4. Branch org.apache.commons.codec.binary.Base64.isBase64(B)Z: I6 Branch 6 IFLT L347 - false in context: org.apache.commons.codec.binary.Base64:isBase64(B)Z
   * Goal 5. Branch org.apache.commons.codec.binary.Base64.isBase64(B)Z: I4 Branch 5 IF_ICMPEQ L347 - false in context: org.apache.commons.codec.binary.Base64:isBase64(B)Z
   * Goal 6. Branch org.apache.commons.codec.binary.Base64.isBase64(B)Z: I10 Branch 7 IF_ICMPGE L347 - true in context: org.apache.commons.codec.binary.Base64:isBase64(B)Z
   * Goal 7. [Output]: org.apache.commons.codec.binary.Base64.isBase64(B)Z:False
   * Goal 8. org.apache.commons.codec.binary.Base64.isBase64(B)Z: Line 347
   * Goal 9. [METHOD] org.apache.commons.codec.binary.Base64.isBase64(B)Z
   * Goal 10. [METHODNOEX] org.apache.commons.codec.binary.Base64.isBase64(B)Z
   * Goal 11. Weak Mutation 79: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 12. Weak Mutation 80: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 13. Weak Mutation 81: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 14. Weak Mutation 82: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 15. Weak Mutation 83: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 0
   * Goal 16. Weak Mutation 84: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 1
   * Goal 17. Weak Mutation 85: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> -1
   * Goal 18. Weak Mutation 86: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 60
   * Goal 19. Weak Mutation 87: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 62
   * Goal 20. Weak Mutation 89: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator == -> >=
   * Goal 21. Weak Mutation 91: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 22. Weak Mutation 92: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 23. Weak Mutation 93: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 24. Weak Mutation 94: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 25. Weak Mutation 96: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator < -> !=
   * Goal 26. Weak Mutation 98: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 27. Weak Mutation 99: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 28. Weak Mutation 100: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 29. Weak Mutation 101: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 30. Weak Mutation 102: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 31. Weak Mutation 105: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator >= -> ==
   * Goal 32. Weak Mutation 118: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      boolean boolean0 = Base64.isBase64((byte)125);
      assertFalse(boolean0);
  }

  //Test case number: 56
  /*
   * 16 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I4 Branch 5 IF_ICMPEQ L347 - true
   * Goal 2. Branch org.apache.commons.codec.binary.Base64.isBase64(B)Z: I4 Branch 5 IF_ICMPEQ L347 - true in context: org.apache.commons.codec.binary.Base64:isBase64(B)Z
   * Goal 3. [Output]: org.apache.commons.codec.binary.Base64.isBase64(B)Z:True
   * Goal 4. org.apache.commons.codec.binary.Base64.isBase64(B)Z: Line 347
   * Goal 5. [METHOD] org.apache.commons.codec.binary.Base64.isBase64(B)Z
   * Goal 6. [METHODNOEX] org.apache.commons.codec.binary.Base64.isBase64(B)Z
   * Goal 7. Weak Mutation 80: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 8. Weak Mutation 81: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 9. Weak Mutation 82: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 10. Weak Mutation 83: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 0
   * Goal 11. Weak Mutation 84: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 1
   * Goal 12. Weak Mutation 85: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> -1
   * Goal 13. Weak Mutation 86: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 60
   * Goal 14. Weak Mutation 87: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 62
   * Goal 15. Weak Mutation 88: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator == -> -2
   * Goal 16. Weak Mutation 117: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      boolean boolean0 = Base64.isBase64((byte)61);
      assertTrue(boolean0);
  }

  //Test case number: 57
  /*
   * 133 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I3 Branch 1 IFNULL L238 - false
   * Goal 3. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I6 Branch 2 IFNE L238 - true
   * Goal 4. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I14 Branch 3 IFEQ L244 - true
   * Goal 5. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I41 Branch 4 IFLE L246 - false
   * Goal 6. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 7. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 8. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 9. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true
   * Goal 10. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true
   * Goal 11. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 12. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 13. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 14. Branch org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I3 Branch 1 IFNULL L238 - false in context: org.apache.commons.codec.binary.Base64:encodeBase64([BZZI)[B
   * Goal 15. Branch org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I6 Branch 2 IFNE L238 - true in context: org.apache.commons.codec.binary.Base64:encodeBase64([BZZI)[B
   * Goal 16. Branch org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I14 Branch 3 IFEQ L244 - true in context: org.apache.commons.codec.binary.Base64:encodeBase64([BZZI)[B
   * Goal 17. Branch org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I41 Branch 4 IFLE L246 - false in context: org.apache.commons.codec.binary.Base64:encodeBase64([BZZI)[B
   * Goal 18. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 19. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 20. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 21. encodeBase64([BZZI)[B_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 22. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 23. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 24. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 25. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 26. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 27. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 28. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 29. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 601
   * Goal 30. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 602
   * Goal 31. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 32. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 33. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 34. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 238
   * Goal 35. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 244
   * Goal 36. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 245
   * Goal 37. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 246
   * Goal 38. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 247
   * Goal 39. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 40. [METHOD] org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B
   * Goal 41. Weak Mutation 22: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 42. Weak Mutation 23: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator = null -> != null
   * Goal 43. Weak Mutation 24: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 44. Weak Mutation 26: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator != -> <
   * Goal 45. Weak Mutation 30: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp Negation of isChunked
   * Goal 46. Weak Mutation 31: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC 1 isChunked
   * Goal 47. Weak Mutation 32: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC -1 isChunked
   * Goal 48. Weak Mutation 33: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - ReplaceComparisonOperator == -> !=
   * Goal 49. Weak Mutation 38: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - ReplaceConstant - 0 -> 1
   * Goal 50. Weak Mutation 40: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp Negation of urlSafe
   * Goal 51. Weak Mutation 41: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC 1 urlSafe
   * Goal 52. Weak Mutation 42: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC -1 urlSafe
   * Goal 53. Weak Mutation 43: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:245 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 54. Weak Mutation 44: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp Negation of len
   * Goal 55. Weak Mutation 45: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> PEM_CHUNK_SIZE
   * Goal 56. Weak Mutation 46: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> MIME_CHUNK_SIZE
   * Goal 57. Weak Mutation 47: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> EOF
   * Goal 58. Weak Mutation 48: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> MASK_8BITS
   * Goal 59. Weak Mutation 49: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp Negation of maxResultSize
   * Goal 60. Weak Mutation 50: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp IINC 1 maxResultSize
   * Goal 61. Weak Mutation 51: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp IINC -1 maxResultSize
   * Goal 62. Weak Mutation 52: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceComparisonOperator <= -> -1
   * Goal 63. Weak Mutation 55: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:247 - ReplaceConstant - Input array too big, the output array would be bigger ( -> 
   * Goal 64. Weak Mutation 56: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:247 - InsertUnaryOp Negation of len
   * Goal 65. Weak Mutation 57: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:247 - ReplaceConstant - ) than the specified maximum size of  -> 
   * Goal 66. Weak Mutation 58: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:247 - ReplaceVariable maxResultSize -> PEM_CHUNK_SIZE
   * Goal 67. Weak Mutation 59: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:247 - ReplaceVariable maxResultSize -> MIME_CHUNK_SIZE
   * Goal 68. Weak Mutation 60: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:247 - ReplaceVariable maxResultSize -> EOF
   * Goal 69. Weak Mutation 61: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:247 - ReplaceVariable maxResultSize -> MASK_8BITS
   * Goal 70. Weak Mutation 62: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:247 - InsertUnaryOp Negation of maxResultSize
   * Goal 71. Weak Mutation 63: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:247 - InsertUnaryOp IINC 1 maxResultSize
   * Goal 72. Weak Mutation 64: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:247 - InsertUnaryOp IINC -1 maxResultSize
   * Goal 73. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 74. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 75. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 76. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 77. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 78. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 79. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 80. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 81. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 82. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 83. Weak Mutation 348: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> <
   * Goal 84. Weak Mutation 365: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 0
   * Goal 85. Weak Mutation 366: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 1
   * Goal 86. Weak Mutation 367: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> -1
   * Goal 87. Weak Mutation 368: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 3
   * Goal 88. Weak Mutation 369: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 5
   * Goal 89. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 90. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 91. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 92. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 93. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 94. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 95. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 96. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 97. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 98. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 99. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 100. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 101. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 102. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 103. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 104. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 105. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 106. Weak Mutation 393: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 107. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 108. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 109. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 110. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 111. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 112. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 113. Weak Mutation 713: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> !=
   * Goal 114. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 115. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 116. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 117. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 118. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 119. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 120. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 121. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 122. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 123. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 124. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 125. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 126. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 127. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 128. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 129. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 130. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 131. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 132. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 133. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
      try { 
        Base64.encodeBase64(byteArray0, false, false, (-4752));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // lineSeparator must not contain base64 characters: [\uFFFDg]
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 58
  /*
   * 229 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: root-Branch
   * Goal 4. org.apache.commons.codec.binary.Base64.encodeBase64([B)[B: root-Branch
   * Goal 5. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I3 Branch 1 IFNULL L238 - false
   * Goal 6. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I6 Branch 2 IFNE L238 - true
   * Goal 7. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I14 Branch 3 IFEQ L244 - true
   * Goal 8. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I41 Branch 4 IFLE L246 - true
   * Goal 9. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 10. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 11. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 12. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true
   * Goal 13. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true
   * Goal 14. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 34 IFEQ L722 - true
   * Goal 15. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - true
   * Goal 16. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - false
   * Goal 17. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I22 Branch 36 IF_ICMPNE L729 - true
   * Goal 18. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 38 TABLESWITCH L734 Case 0 - false
   * Goal 19. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 39 TABLESWITCH L734 Case 1 - false
   * Goal 20. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 40 TABLESWITCH L734 Case 2 - true
   * Goal 21. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 41 TABLESWITCH L734 Default-Case - false
   * Goal 22. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I188 Branch 43 IF_ACMPNE L754 - false
   * Goal 23. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I246 Branch 44 IFLE L763 - true
   * Goal 24. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - true
   * Goal 25. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - false
   * Goal 26. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I311 Branch 47 IFGE L772 - true
   * Goal 27. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I330 Branch 48 IF_ICMPNE L776 - true
   * Goal 28. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 29. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 30. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 31. Branch org.apache.commons.codec.binary.Base64.encodeBase64([B)[B: root-Branch in context: org.apache.commons.codec.binary.Base64:encodeBase64([B)[B
   * Goal 32. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 34 IFEQ L722 - true in context: 
   * Goal 33. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - false in context: 
   * Goal 34. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - true in context: 
   * Goal 35. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I22 Branch 36 IF_ICMPNE L729 - true in context: 
   * Goal 36. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 41 TABLESWITCH L734 Default-Case - false in context: 
   * Goal 37. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 40 TABLESWITCH L734 Case 2 - true in context: 
   * Goal 38. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 38 TABLESWITCH L734 Case 0 - false in context: 
   * Goal 39. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 39 TABLESWITCH L734 Case 1 - false in context: 
   * Goal 40. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I188 Branch 43 IF_ACMPNE L754 - false in context: 
   * Goal 41. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I246 Branch 44 IFLE L763 - true in context: 
   * Goal 42. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - true in context: 
   * Goal 43. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - false in context: 
   * Goal 44. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I311 Branch 47 IFGE L772 - true in context: 
   * Goal 45. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I330 Branch 48 IF_ICMPNE L776 - true in context: 
   * Goal 46. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 47. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 48. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 49. [Output]: org.apache.commons.codec.binary.Base64.encodeBase64([B)[B:NonEmptyArray
   * Goal 50. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 51. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 52. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 53. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 54. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 55. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 56. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 57. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 601
   * Goal 58. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 602
   * Goal 59. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 60. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 61. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 62. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 722
   * Goal 63. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 727
   * Goal 64. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 728
   * Goal 65. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 729
   * Goal 66. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 732
   * Goal 67. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 733
   * Goal 68. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 734
   * Goal 69. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 750
   * Goal 70. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 751
   * Goal 71. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 752
   * Goal 72. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 754
   * Goal 73. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 755
   * Goal 74. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 761
   * Goal 75. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 763
   * Goal 76. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 767
   * Goal 77. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 768
   * Goal 78. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 769
   * Goal 79. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 770
   * Goal 80. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 771
   * Goal 81. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 772
   * Goal 82. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 775
   * Goal 83. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 776
   * Goal 84. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 790
   * Goal 85. org.apache.commons.codec.binary.Base64.encodeBase64([B)[B: Line 182
   * Goal 86. org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B: Line 197
   * Goal 87. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: Line 216
   * Goal 88. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 238
   * Goal 89. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 244
   * Goal 90. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 245
   * Goal 91. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 246
   * Goal 92. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 253
   * Goal 93. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 94. [METHOD] org.apache.commons.codec.binary.Base64.encodeBase64([B)[B
   * Goal 95. [METHODNOEX] org.apache.commons.codec.binary.Base64.encodeBase64([B)[B
   * Goal 96. Weak Mutation 3: org.apache.commons.codec.binary.Base64.encodeBase64([B)[B:182 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 97. Weak Mutation 4: org.apache.commons.codec.binary.Base64.encodeBase64([B)[B:182 - ReplaceConstant - 0 -> 1
   * Goal 98. Weak Mutation 5: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 99. Weak Mutation 6: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp Negation of isChunked
   * Goal 100. Weak Mutation 7: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp IINC 1 isChunked
   * Goal 101. Weak Mutation 8: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp IINC -1 isChunked
   * Goal 102. Weak Mutation 9: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - ReplaceConstant - 0 -> 1
   * Goal 103. Weak Mutation 10: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 104. Weak Mutation 12: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of isChunked
   * Goal 105. Weak Mutation 13: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC 1 isChunked
   * Goal 106. Weak Mutation 14: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC -1 isChunked
   * Goal 107. Weak Mutation 16: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of urlSafe
   * Goal 108. Weak Mutation 17: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 0
   * Goal 109. Weak Mutation 18: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 1
   * Goal 110. Weak Mutation 19: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -1
   * Goal 111. Weak Mutation 20: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 2147483646
   * Goal 112. Weak Mutation 21: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -2147483648
   * Goal 113. Weak Mutation 22: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 114. Weak Mutation 23: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator = null -> != null
   * Goal 115. Weak Mutation 24: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 116. Weak Mutation 26: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator != -> <
   * Goal 117. Weak Mutation 30: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp Negation of isChunked
   * Goal 118. Weak Mutation 31: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC 1 isChunked
   * Goal 119. Weak Mutation 32: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC -1 isChunked
   * Goal 120. Weak Mutation 33: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - ReplaceComparisonOperator == -> !=
   * Goal 121. Weak Mutation 38: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - ReplaceConstant - 0 -> 1
   * Goal 122. Weak Mutation 40: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp Negation of urlSafe
   * Goal 123. Weak Mutation 41: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC 1 urlSafe
   * Goal 124. Weak Mutation 42: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC -1 urlSafe
   * Goal 125. Weak Mutation 43: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:245 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 126. Weak Mutation 44: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp Negation of len
   * Goal 127. Weak Mutation 45: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> PEM_CHUNK_SIZE
   * Goal 128. Weak Mutation 46: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> MIME_CHUNK_SIZE
   * Goal 129. Weak Mutation 47: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> EOF
   * Goal 130. Weak Mutation 48: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> MASK_8BITS
   * Goal 131. Weak Mutation 49: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp Negation of maxResultSize
   * Goal 132. Weak Mutation 50: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp IINC 1 maxResultSize
   * Goal 133. Weak Mutation 51: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp IINC -1 maxResultSize
   * Goal 134. Weak Mutation 53: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceComparisonOperator <= -> ==
   * Goal 135. Weak Mutation 65: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:253 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 136. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 137. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 138. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 139. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 140. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 141. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 142. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 143. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 144. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 145. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 146. Weak Mutation 348: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> <
   * Goal 147. Weak Mutation 365: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 0
   * Goal 148. Weak Mutation 366: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 1
   * Goal 149. Weak Mutation 367: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> -1
   * Goal 150. Weak Mutation 368: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 3
   * Goal 151. Weak Mutation 369: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 5
   * Goal 152. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 153. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 154. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 155. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 156. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 157. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 158. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 159. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 160. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 161. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 162. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 163. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 164. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 165. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 166. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 167. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 168. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 169. Weak Mutation 393: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 170. Weak Mutation 583: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:722 - InsertUnaryOp Negation
   * Goal 171. Weak Mutation 584: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:722 - ReplaceComparisonOperator == -> !=
   * Goal 172. Weak Mutation 585: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 173. Weak Mutation 586: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 174. Weak Mutation 587: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> inPos
   * Goal 175. Weak Mutation 588: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> lineLength
   * Goal 176. Weak Mutation 589: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> EOF
   * Goal 177. Weak Mutation 590: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 178. Weak Mutation 591: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp Negation of inAvail
   * Goal 179. Weak Mutation 592: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp IINC 1 inAvail
   * Goal 180. Weak Mutation 593: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp IINC -1 inAvail
   * Goal 181. Weak Mutation 594: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceComparisonOperator >= -> -1
   * Goal 182. Weak Mutation 595: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceComparisonOperator >= -> ==
   * Goal 183. Weak Mutation 597: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:728 - ReplaceConstant - 1 -> 0
   * Goal 184. Weak Mutation 598: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceConstant - 0 -> 1
   * Goal 185. Weak Mutation 599: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp Negation
   * Goal 186. Weak Mutation 600: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp +1
   * Goal 187. Weak Mutation 601: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp -1
   * Goal 188. Weak Mutation 604: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceComparisonOperator != -> >
   * Goal 189. Weak Mutation 615: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 190. Weak Mutation 616: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 191. Weak Mutation 617: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> lineLength
   * Goal 192. Weak Mutation 618: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> EOF
   * Goal 193. Weak Mutation 619: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 194. Weak Mutation 620: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - InsertUnaryOp Negation
   * Goal 195. Weak Mutation 621: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - InsertUnaryOp +1
   * Goal 196. Weak Mutation 622: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - InsertUnaryOp -1
   * Goal 197. Weak Mutation 623: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:733 - InsertUnaryOp Negation
   * Goal 198. Weak Mutation 624: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:733 - InsertUnaryOp +1
   * Goal 199. Weak Mutation 625: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:733 - InsertUnaryOp -1
   * Goal 200. Weak Mutation 626: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:734 - InsertUnaryOp Negation
   * Goal 201. Weak Mutation 627: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:734 - InsertUnaryOp +1
   * Goal 202. Weak Mutation 628: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:734 - InsertUnaryOp -1
   * Goal 203. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 204. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 205. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 206. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 207. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 208. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 209. Weak Mutation 713: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> !=
   * Goal 210. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 211. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 212. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 213. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 214. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 215. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 216. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 217. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 218. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 219. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 220. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 221. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 222. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 223. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 224. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 225. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 226. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 227. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 228. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 229. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        Base64.encodeBase64(byteArray0);
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // lineSeparator must not contain base64 characters: [\uFFFDg]
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 59
  /*
   * 78 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.isArrayByteBase64([B)Z: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I4 Branch 5 IF_ICMPEQ L347 - false
   * Goal 3. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I6 Branch 6 IFLT L347 - false
   * Goal 4. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I10 Branch 7 IF_ICMPGE L347 - false
   * Goal 5. org.apache.commons.codec.binary.Base64.isBase64(B)Z: I15 Branch 8 IF_ICMPEQ L347 - true
   * Goal 6. org.apache.commons.codec.binary.Base64.isBase64([B)Z: I8 Branch 9 IF_ICMPGE L361 - false
   * Goal 7. org.apache.commons.codec.binary.Base64.isBase64([B)Z: I15 Branch 10 IFNE L362 - false
   * Goal 8. org.apache.commons.codec.binary.Base64.isBase64([B)Z: I20 Branch 11 IFNE L362 - false
   * Goal 9. Branch org.apache.commons.codec.binary.Base64.isArrayByteBase64([B)Z: root-Branch in context: org.apache.commons.codec.binary.Base64:isArrayByteBase64([B)Z
   * Goal 10. [Output]: org.apache.commons.codec.binary.Base64.isArrayByteBase64([B)Z:False
   * Goal 11. org.apache.commons.codec.binary.Base64.isArrayByteBase64([B)Z: Line 335
   * Goal 12. org.apache.commons.codec.binary.Base64.isBase64(B)Z: Line 347
   * Goal 13. org.apache.commons.codec.binary.Base64.isBase64([B)Z: Line 361
   * Goal 14. org.apache.commons.codec.binary.Base64.isBase64([B)Z: Line 362
   * Goal 15. org.apache.commons.codec.binary.Base64.isBase64([B)Z: Line 363
   * Goal 16. [METHOD] org.apache.commons.codec.binary.Base64.isArrayByteBase64([B)Z
   * Goal 17. [METHODNOEX] org.apache.commons.codec.binary.Base64.isArrayByteBase64([B)Z
   * Goal 18. Weak Mutation 78: org.apache.commons.codec.binary.Base64.isArrayByteBase64([B)Z:335 - ReplaceVariable arrayOctet -> CHUNK_SEPARATOR
   * Goal 19. Weak Mutation 79: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 20. Weak Mutation 80: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 21. Weak Mutation 81: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 22. Weak Mutation 82: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 23. Weak Mutation 83: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 0
   * Goal 24. Weak Mutation 84: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 1
   * Goal 25. Weak Mutation 85: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> -1
   * Goal 26. Weak Mutation 86: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 60
   * Goal 27. Weak Mutation 87: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 61 -> 62
   * Goal 28. Weak Mutation 90: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator == -> <=
   * Goal 29. Weak Mutation 91: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 30. Weak Mutation 92: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 31. Weak Mutation 93: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 32. Weak Mutation 94: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 33. Weak Mutation 97: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator < -> <=
   * Goal 34. Weak Mutation 98: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 35. Weak Mutation 99: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 36. Weak Mutation 100: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 37. Weak Mutation 101: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 38. Weak Mutation 102: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 39. Weak Mutation 103: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator >= -> -1
   * Goal 40. Weak Mutation 106: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 41. Weak Mutation 107: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 42. Weak Mutation 108: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp Negation of octet
   * Goal 43. Weak Mutation 109: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC 1 octet
   * Goal 44. Weak Mutation 110: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - InsertUnaryOp IINC -1 octet
   * Goal 45. Weak Mutation 111: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - -1 -> 0
   * Goal 46. Weak Mutation 112: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - -1 -> 1
   * Goal 47. Weak Mutation 113: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - -1 -> -2
   * Goal 48. Weak Mutation 114: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceComparisonOperator == -> -2
   * Goal 49. Weak Mutation 118: org.apache.commons.codec.binary.Base64.isBase64(B)Z:347 - ReplaceConstant - 0 -> 1
   * Goal 50. Weak Mutation 119: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceConstant - 0 -> 1
   * Goal 51. Weak Mutation 120: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 52. Weak Mutation 121: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 53. Weak Mutation 122: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> EOF
   * Goal 54. Weak Mutation 123: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable i -> MASK_8BITS
   * Goal 55. Weak Mutation 124: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - InsertUnaryOp Negation of i
   * Goal 56. Weak Mutation 125: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - InsertUnaryOp IINC 1 i
   * Goal 57. Weak Mutation 126: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - InsertUnaryOp IINC -1 i
   * Goal 58. Weak Mutation 127: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceVariable arrayOctet -> CHUNK_SEPARATOR
   * Goal 59. Weak Mutation 128: org.apache.commons.codec.binary.Base64.isBase64([B)Z:361 - ReplaceComparisonOperator >= -> -1
   * Goal 60. Weak Mutation 131: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable arrayOctet -> CHUNK_SEPARATOR
   * Goal 61. Weak Mutation 132: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 62. Weak Mutation 133: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 63. Weak Mutation 134: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> EOF
   * Goal 64. Weak Mutation 135: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> MASK_8BITS
   * Goal 65. Weak Mutation 136: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - InsertUnaryOp Negation of i
   * Goal 66. Weak Mutation 137: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - InsertUnaryOp IINC 1 i
   * Goal 67. Weak Mutation 138: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - InsertUnaryOp IINC -1 i
   * Goal 68. Weak Mutation 139: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceComparisonOperator != -> ==
   * Goal 69. Weak Mutation 140: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable arrayOctet -> CHUNK_SEPARATOR
   * Goal 70. Weak Mutation 141: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> PEM_CHUNK_SIZE
   * Goal 71. Weak Mutation 142: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> MIME_CHUNK_SIZE
   * Goal 72. Weak Mutation 143: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> EOF
   * Goal 73. Weak Mutation 144: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceVariable i -> MASK_8BITS
   * Goal 74. Weak Mutation 145: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - InsertUnaryOp Negation of i
   * Goal 75. Weak Mutation 146: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - InsertUnaryOp IINC 1 i
   * Goal 76. Weak Mutation 147: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - InsertUnaryOp IINC -1 i
   * Goal 77. Weak Mutation 148: org.apache.commons.codec.binary.Base64.isBase64([B)Z:362 - ReplaceComparisonOperator != -> ==
   * Goal 78. Weak Mutation 149: org.apache.commons.codec.binary.Base64.isBase64([B)Z:363 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      boolean boolean0 = Base64.isArrayByteBase64(byteArray0);
      assertFalse(boolean0);
  }

  //Test case number: 60
  /*
   * 211 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B: root-Branch
   * Goal 4. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I3 Branch 1 IFNULL L238 - false
   * Goal 5. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I6 Branch 2 IFNE L238 - true
   * Goal 6. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I14 Branch 3 IFEQ L244 - true
   * Goal 7. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I41 Branch 4 IFLE L246 - true
   * Goal 8. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 9. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 10. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 11. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true
   * Goal 12. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - false
   * Goal 13. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 34 IFEQ L722 - true
   * Goal 14. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - true
   * Goal 15. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - false
   * Goal 16. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I22 Branch 36 IF_ICMPNE L729 - false
   * Goal 17. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I25 Branch 37 IFNE L729 - false
   * Goal 18. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - true
   * Goal 19. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - false
   * Goal 20. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I311 Branch 47 IFGE L772 - true
   * Goal 21. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I330 Branch 48 IF_ICMPNE L776 - true
   * Goal 22. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I330 Branch 48 IF_ICMPNE L776 - false
   * Goal 23. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I421 Branch 49 IFLE L782 - true
   * Goal 24. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 25. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 26. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 27. Branch org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B: root-Branch in context: org.apache.commons.codec.binary.Base64:encodeBase64URLSafe([B)[B
   * Goal 28. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 34 IFEQ L722 - true in context: 
   * Goal 29. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - false in context: 
   * Goal 30. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - true in context: 
   * Goal 31. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I25 Branch 37 IFNE L729 - false in context: 
   * Goal 32. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I22 Branch 36 IF_ICMPNE L729 - false in context: 
   * Goal 33. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - true in context: 
   * Goal 34. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - false in context: 
   * Goal 35. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I311 Branch 47 IFGE L772 - true in context: 
   * Goal 36. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I330 Branch 48 IF_ICMPNE L776 - false in context: 
   * Goal 37. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I330 Branch 48 IF_ICMPNE L776 - true in context: 
   * Goal 38. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I421 Branch 49 IFLE L782 - true in context: 
   * Goal 39. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 40. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true in context: 
   * Goal 41. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 42. [Output]: org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B:NonEmptyArray
   * Goal 43. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 44. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 45. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 46. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 47. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 48. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 49. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 50. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 601
   * Goal 51. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 602
   * Goal 52. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 53. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 54. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 55. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 722
   * Goal 56. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 727
   * Goal 57. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 728
   * Goal 58. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 729
   * Goal 59. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 730
   * Goal 60. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 768
   * Goal 61. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 769
   * Goal 62. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 770
   * Goal 63. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 771
   * Goal 64. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 772
   * Goal 65. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 775
   * Goal 66. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 776
   * Goal 67. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 777
   * Goal 68. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 778
   * Goal 69. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 779
   * Goal 70. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 780
   * Goal 71. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 781
   * Goal 72. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 782
   * Goal 73. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 790
   * Goal 74. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: Line 216
   * Goal 75. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 238
   * Goal 76. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 244
   * Goal 77. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 245
   * Goal 78. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 246
   * Goal 79. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 253
   * Goal 80. org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B: Line 292
   * Goal 81. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 82. [METHOD] org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B
   * Goal 83. [METHODNOEX] org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B
   * Goal 84. Weak Mutation 10: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 85. Weak Mutation 11: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable isChunked -> urlSafe
   * Goal 86. Weak Mutation 12: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of isChunked
   * Goal 87. Weak Mutation 13: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC 1 isChunked
   * Goal 88. Weak Mutation 14: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC -1 isChunked
   * Goal 89. Weak Mutation 15: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable urlSafe -> isChunked
   * Goal 90. Weak Mutation 16: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of urlSafe
   * Goal 91. Weak Mutation 17: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 0
   * Goal 92. Weak Mutation 18: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 1
   * Goal 93. Weak Mutation 19: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -1
   * Goal 94. Weak Mutation 20: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 2147483646
   * Goal 95. Weak Mutation 21: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -2147483648
   * Goal 96. Weak Mutation 22: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 97. Weak Mutation 23: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator = null -> != null
   * Goal 98. Weak Mutation 24: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 99. Weak Mutation 26: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator != -> <
   * Goal 100. Weak Mutation 29: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - ReplaceVariable isChunked -> urlSafe
   * Goal 101. Weak Mutation 30: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp Negation of isChunked
   * Goal 102. Weak Mutation 31: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC 1 isChunked
   * Goal 103. Weak Mutation 32: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC -1 isChunked
   * Goal 104. Weak Mutation 33: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - ReplaceComparisonOperator == -> !=
   * Goal 105. Weak Mutation 38: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - ReplaceConstant - 0 -> 1
   * Goal 106. Weak Mutation 39: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - ReplaceVariable urlSafe -> isChunked
   * Goal 107. Weak Mutation 40: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp Negation of urlSafe
   * Goal 108. Weak Mutation 41: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC 1 urlSafe
   * Goal 109. Weak Mutation 42: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC -1 urlSafe
   * Goal 110. Weak Mutation 43: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:245 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 111. Weak Mutation 44: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp Negation of len
   * Goal 112. Weak Mutation 45: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> PEM_CHUNK_SIZE
   * Goal 113. Weak Mutation 46: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> MIME_CHUNK_SIZE
   * Goal 114. Weak Mutation 47: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> EOF
   * Goal 115. Weak Mutation 48: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> MASK_8BITS
   * Goal 116. Weak Mutation 49: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp Negation of maxResultSize
   * Goal 117. Weak Mutation 50: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp IINC 1 maxResultSize
   * Goal 118. Weak Mutation 51: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp IINC -1 maxResultSize
   * Goal 119. Weak Mutation 53: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceComparisonOperator <= -> ==
   * Goal 120. Weak Mutation 65: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:253 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 121. Weak Mutation 70: org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B:292 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 122. Weak Mutation 71: org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B:292 - ReplaceConstant - 0 -> 1
   * Goal 123. Weak Mutation 72: org.apache.commons.codec.binary.Base64.encodeBase64URLSafe([B)[B:292 - ReplaceConstant - 1 -> 0
   * Goal 124. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 125. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 126. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 127. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 128. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 129. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 130. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 131. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 132. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 133. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 134. Weak Mutation 348: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> <
   * Goal 135. Weak Mutation 365: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 0
   * Goal 136. Weak Mutation 366: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 1
   * Goal 137. Weak Mutation 367: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> -1
   * Goal 138. Weak Mutation 368: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 3
   * Goal 139. Weak Mutation 369: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 5
   * Goal 140. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 141. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 142. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 143. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 144. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 145. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 146. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 147. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 148. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 149. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 150. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 151. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 152. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 153. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 154. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 155. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 156. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 157. Weak Mutation 392: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable URL_SAFE_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 158. Weak Mutation 583: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:722 - InsertUnaryOp Negation
   * Goal 159. Weak Mutation 584: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:722 - ReplaceComparisonOperator == -> !=
   * Goal 160. Weak Mutation 585: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 161. Weak Mutation 586: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 162. Weak Mutation 587: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> inPos
   * Goal 163. Weak Mutation 588: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> lineLength
   * Goal 164. Weak Mutation 589: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> EOF
   * Goal 165. Weak Mutation 590: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 166. Weak Mutation 591: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp Negation of inAvail
   * Goal 167. Weak Mutation 592: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp IINC 1 inAvail
   * Goal 168. Weak Mutation 593: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp IINC -1 inAvail
   * Goal 169. Weak Mutation 594: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceComparisonOperator >= -> -1
   * Goal 170. Weak Mutation 595: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceComparisonOperator >= -> ==
   * Goal 171. Weak Mutation 597: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:728 - ReplaceConstant - 1 -> 0
   * Goal 172. Weak Mutation 598: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceConstant - 0 -> 1
   * Goal 173. Weak Mutation 599: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp Negation
   * Goal 174. Weak Mutation 600: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp +1
   * Goal 175. Weak Mutation 601: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp -1
   * Goal 176. Weak Mutation 602: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceComparisonOperator != -> -1
   * Goal 177. Weak Mutation 605: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 178. Weak Mutation 606: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 179. Weak Mutation 607: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceVariable lineLength -> EOF
   * Goal 180. Weak Mutation 608: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 181. Weak Mutation 609: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp Negation
   * Goal 182. Weak Mutation 610: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp +1
   * Goal 183. Weak Mutation 611: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp -1
   * Goal 184. Weak Mutation 612: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceComparisonOperator != -> -1
   * Goal 185. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 186. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 187. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 188. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 189. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 190. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 191. Weak Mutation 713: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> !=
   * Goal 192. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 193. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 194. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 195. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 196. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 197. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 198. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 199. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 200. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 201. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 202. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 203. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 204. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 205. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 206. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 207. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 208. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 209. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 210. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 211. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        Base64.encodeBase64URLSafe(byteArray0);
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // lineSeparator must not contain base64 characters: [\uFFFDg]
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  //Test case number: 61
  /*
   * 32 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString([B)Ljava/lang/String;: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I3 Branch 1 IFNULL L238 - false
   * Goal 4. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I6 Branch 2 IFNE L238 - false
   * Goal 5. Branch org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString([B)Ljava/lang/String;: root-Branch in context: org.apache.commons.codec.binary.Base64:encodeBase64URLSafeString([B)Ljava/lang/String;
   * Goal 6. [Output]: org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString([B)Ljava/lang/String;:EmptyString
   * Goal 7. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: Line 216
   * Goal 8. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 238
   * Goal 9. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 239
   * Goal 10. org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString([B)Ljava/lang/String;: Line 305
   * Goal 11. [METHOD] org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString([B)Ljava/lang/String;
   * Goal 12. [METHODNOEX] org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString([B)Ljava/lang/String;
   * Goal 13. Weak Mutation 10: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 14. Weak Mutation 11: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable isChunked -> urlSafe
   * Goal 15. Weak Mutation 12: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of isChunked
   * Goal 16. Weak Mutation 13: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC 1 isChunked
   * Goal 17. Weak Mutation 14: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC -1 isChunked
   * Goal 18. Weak Mutation 15: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable urlSafe -> isChunked
   * Goal 19. Weak Mutation 16: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of urlSafe
   * Goal 20. Weak Mutation 17: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 0
   * Goal 21. Weak Mutation 18: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 1
   * Goal 22. Weak Mutation 19: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -1
   * Goal 23. Weak Mutation 20: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 2147483646
   * Goal 24. Weak Mutation 21: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -2147483648
   * Goal 25. Weak Mutation 22: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 26. Weak Mutation 23: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator = null -> != null
   * Goal 27. Weak Mutation 24: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 28. Weak Mutation 25: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator != -> -1
   * Goal 29. Weak Mutation 28: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:239 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 30. Weak Mutation 73: org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString([B)Ljava/lang/String;:305 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 31. Weak Mutation 74: org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString([B)Ljava/lang/String;:305 - ReplaceConstant - 0 -> 1
   * Goal 32. Weak Mutation 75: org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString([B)Ljava/lang/String;:305 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      String string0 = Base64.encodeBase64URLSafeString(byteArray0);
      assertEquals("", string0);
  }

  //Test case number: 62
  /*
   * 33 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.encodeBase64String([B)Ljava/lang/String;: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: root-Branch
   * Goal 4. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I3 Branch 1 IFNULL L238 - true
   * Goal 5. Branch org.apache.commons.codec.binary.Base64.encodeBase64String([B)Ljava/lang/String;: root-Branch in context: org.apache.commons.codec.binary.Base64:encodeBase64String([B)Ljava/lang/String;
   * Goal 6. [Output]: org.apache.commons.codec.binary.Base64.encodeBase64String([B)Ljava/lang/String;:Null
   * Goal 7. org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B: Line 197
   * Goal 8. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: Line 216
   * Goal 9. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 238
   * Goal 10. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 239
   * Goal 11. org.apache.commons.codec.binary.Base64.encodeBase64String([B)Ljava/lang/String;: Line 279
   * Goal 12. [METHOD] org.apache.commons.codec.binary.Base64.encodeBase64String([B)Ljava/lang/String;
   * Goal 13. [METHODNOEX] org.apache.commons.codec.binary.Base64.encodeBase64String([B)Ljava/lang/String;
   * Goal 14. Weak Mutation 5: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 15. Weak Mutation 6: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp Negation of isChunked
   * Goal 16. Weak Mutation 7: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp IINC 1 isChunked
   * Goal 17. Weak Mutation 8: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp IINC -1 isChunked
   * Goal 18. Weak Mutation 9: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - ReplaceConstant - 0 -> 1
   * Goal 19. Weak Mutation 10: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 20. Weak Mutation 12: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of isChunked
   * Goal 21. Weak Mutation 13: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC 1 isChunked
   * Goal 22. Weak Mutation 14: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC -1 isChunked
   * Goal 23. Weak Mutation 16: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of urlSafe
   * Goal 24. Weak Mutation 17: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 0
   * Goal 25. Weak Mutation 18: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 1
   * Goal 26. Weak Mutation 19: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -1
   * Goal 27. Weak Mutation 20: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 2147483646
   * Goal 28. Weak Mutation 21: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -2147483648
   * Goal 29. Weak Mutation 22: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 30. Weak Mutation 23: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator = null -> != null
   * Goal 31. Weak Mutation 28: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:239 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 32. Weak Mutation 68: org.apache.commons.codec.binary.Base64.encodeBase64String([B)Ljava/lang/String;:279 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 33. Weak Mutation 69: org.apache.commons.codec.binary.Base64.encodeBase64String([B)Ljava/lang/String;:279 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      String string0 = Base64.encodeBase64String((byte[]) null);
      assertNull(string0);
  }

  //Test case number: 63
  /*
   * 400 covered goals:
   * Goal 1. org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B: root-Branch
   * Goal 2. org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B: root-Branch
   * Goal 3. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: root-Branch
   * Goal 4. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: root-Branch
   * Goal 5. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I3 Branch 1 IFNULL L238 - false
   * Goal 6. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I6 Branch 2 IFNE L238 - true
   * Goal 7. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I14 Branch 3 IFEQ L244 - true
   * Goal 8. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: I41 Branch 4 IFLE L246 - true
   * Goal 9. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: I26 Branch 12 IFEQ L396 - false
   * Goal 10. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: I36 Branch 13 IF_ICMPNE L396 - false
   * Goal 11. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true
   * Goal 12. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false
   * Goal 13. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - true
   * Goal 14. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - false
   * Goal 15. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I69 Branch 18 IFLE L596 - true
   * Goal 16. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I129 Branch 19 IFEQ L609 - true
   * Goal 17. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 34 IFEQ L722 - true
   * Goal 18. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - true
   * Goal 19. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - false
   * Goal 20. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I22 Branch 36 IF_ICMPNE L729 - true
   * Goal 21. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 38 TABLESWITCH L734 Case 0 - false
   * Goal 22. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 39 TABLESWITCH L734 Case 1 - true
   * Goal 23. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 40 TABLESWITCH L734 Case 2 - false
   * Goal 24. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 41 TABLESWITCH L734 Default-Case - false
   * Goal 25. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I95 Branch 42 IF_ACMPNE L743 - false
   * Goal 26. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I246 Branch 44 IFLE L763 - true
   * Goal 27. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - true
   * Goal 28. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - false
   * Goal 29. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I311 Branch 47 IFGE L772 - true
   * Goal 30. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I330 Branch 48 IF_ICMPNE L776 - true
   * Goal 31. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false
   * Goal 32. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false
   * Goal 33. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - true
   * Goal 34. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - false
   * Goal 35. Branch org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B: root-Branch in context: org.apache.commons.codec.binary.Base64:encodeInteger(Ljava/math/BigInteger;)[B
   * Goal 36. Branch org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: I26 Branch 12 IFEQ L396 - false in context: 
   * Goal 37. Branch org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: I36 Branch 13 IF_ICMPNE L396 - false in context: 
   * Goal 38. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I7 Branch 15 IFNONNULL L584 - true in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 39. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I25 Branch 16 IFNULL L591 - false in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 40. Branch org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: I31 Branch 17 IFEQ L592 - false in context: org.apache.commons.codec.binary.Base64:<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 41. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I4 Branch 34 IFEQ L722 - true in context: 
   * Goal 42. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - false in context: 
   * Goal 43. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I11 Branch 35 IFGE L727 - true in context: 
   * Goal 44. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I22 Branch 36 IF_ICMPNE L729 - true in context: 
   * Goal 45. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 41 TABLESWITCH L734 Default-Case - false in context: 
   * Goal 46. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 40 TABLESWITCH L734 Case 2 - false in context: 
   * Goal 47. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 39 TABLESWITCH L734 Case 1 - true in context: 
   * Goal 48. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I46 Branch 38 TABLESWITCH L734 Case 0 - false in context: 
   * Goal 49. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I95 Branch 42 IF_ACMPNE L743 - false in context: 
   * Goal 50. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I246 Branch 44 IFLE L763 - true in context: 
   * Goal 51. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - true in context: 
   * Goal 52. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I282 Branch 46 IF_ICMPGE L768 - false in context: 
   * Goal 53. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I311 Branch 47 IFGE L772 - true in context: 
   * Goal 54. Branch org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: I330 Branch 48 IF_ICMPNE L776 - true in context: 
   * Goal 55. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I8 Branch 52 IF_ICMPGE L801 - false in context: 
   * Goal 56. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I14 Branch 53 IF_ICMPEQ L801 - false in context: 
   * Goal 57. Branch org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: I3 Branch 51 IFLT L801 - false in context: 
   * Goal 58. <init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 59. [Output]: org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B:NonEmptyArray
   * Goal 60. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 552
   * Goal 61. org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: Line 553
   * Goal 62. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 422
   * Goal 63. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 584
   * Goal 64. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 591
   * Goal 65. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 592
   * Goal 66. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 593
   * Goal 67. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 594
   * Goal 68. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 596
   * Goal 69. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 601
   * Goal 70. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 602
   * Goal 71. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 608
   * Goal 72. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 609
   * Goal 73. org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V: Line 610
   * Goal 74. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 722
   * Goal 75. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 727
   * Goal 76. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 728
   * Goal 77. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 729
   * Goal 78. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 732
   * Goal 79. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 733
   * Goal 80. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 734
   * Goal 81. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 739
   * Goal 82. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 741
   * Goal 83. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 743
   * Goal 84. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 744
   * Goal 85. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 745
   * Goal 86. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 761
   * Goal 87. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 763
   * Goal 88. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 767
   * Goal 89. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 768
   * Goal 90. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 769
   * Goal 91. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 770
   * Goal 92. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 771
   * Goal 93. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 772
   * Goal 94. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 775
   * Goal 95. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 776
   * Goal 96. org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V: Line 790
   * Goal 97. org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B: Line 197
   * Goal 98. org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B: Line 216
   * Goal 99. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 238
   * Goal 100. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 244
   * Goal 101. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 245
   * Goal 102. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 246
   * Goal 103. org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B: Line 253
   * Goal 104. org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B: Line 319
   * Goal 105. org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B: Line 320
   * Goal 106. org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z: Line 801
   * Goal 107. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 391
   * Goal 108. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 393
   * Goal 109. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 394
   * Goal 110. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 396
   * Goal 111. org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: Line 397
   * Goal 112. [METHOD] org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V
   * Goal 113. [METHOD] org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B
   * Goal 114. [METHODNOEX] org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B
   * Goal 115. Weak Mutation 5: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 116. Weak Mutation 6: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp Negation of isChunked
   * Goal 117. Weak Mutation 7: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp IINC 1 isChunked
   * Goal 118. Weak Mutation 8: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - InsertUnaryOp IINC -1 isChunked
   * Goal 119. Weak Mutation 9: org.apache.commons.codec.binary.Base64.encodeBase64([BZ)[B:197 - ReplaceConstant - 0 -> 1
   * Goal 120. Weak Mutation 10: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 121. Weak Mutation 12: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of isChunked
   * Goal 122. Weak Mutation 13: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC 1 isChunked
   * Goal 123. Weak Mutation 14: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp IINC -1 isChunked
   * Goal 124. Weak Mutation 16: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - InsertUnaryOp Negation of urlSafe
   * Goal 125. Weak Mutation 17: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 0
   * Goal 126. Weak Mutation 18: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 1
   * Goal 127. Weak Mutation 19: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -1
   * Goal 128. Weak Mutation 20: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> 2147483646
   * Goal 129. Weak Mutation 21: org.apache.commons.codec.binary.Base64.encodeBase64([BZZ)[B:216 - ReplaceConstant - 2147483647 -> -2147483648
   * Goal 130. Weak Mutation 22: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 131. Weak Mutation 23: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator = null -> != null
   * Goal 132. Weak Mutation 24: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 133. Weak Mutation 26: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:238 - ReplaceComparisonOperator != -> <
   * Goal 134. Weak Mutation 30: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp Negation of isChunked
   * Goal 135. Weak Mutation 31: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC 1 isChunked
   * Goal 136. Weak Mutation 32: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC -1 isChunked
   * Goal 137. Weak Mutation 33: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - ReplaceComparisonOperator == -> !=
   * Goal 138. Weak Mutation 38: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - ReplaceConstant - 0 -> 1
   * Goal 139. Weak Mutation 40: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp Negation of urlSafe
   * Goal 140. Weak Mutation 41: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC 1 urlSafe
   * Goal 141. Weak Mutation 42: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:244 - InsertUnaryOp IINC -1 urlSafe
   * Goal 142. Weak Mutation 43: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:245 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 143. Weak Mutation 44: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp Negation of len
   * Goal 144. Weak Mutation 45: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> PEM_CHUNK_SIZE
   * Goal 145. Weak Mutation 46: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> MIME_CHUNK_SIZE
   * Goal 146. Weak Mutation 47: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> EOF
   * Goal 147. Weak Mutation 48: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceVariable maxResultSize -> MASK_8BITS
   * Goal 148. Weak Mutation 49: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp Negation of maxResultSize
   * Goal 149. Weak Mutation 50: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp IINC 1 maxResultSize
   * Goal 150. Weak Mutation 51: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - InsertUnaryOp IINC -1 maxResultSize
   * Goal 151. Weak Mutation 53: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:246 - ReplaceComparisonOperator <= -> ==
   * Goal 152. Weak Mutation 65: org.apache.commons.codec.binary.Base64.encodeBase64([BZZI)[B:253 - ReplaceVariable binaryData -> CHUNK_SEPARATOR
   * Goal 153. Weak Mutation 76: org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B:319 - ReplaceConstant - bigInteger -> 
   * Goal 154. Weak Mutation 77: org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B:320 - ReplaceConstant - 0 -> 1
   * Goal 155. Weak Mutation 151: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceVariable bitlen -> PEM_CHUNK_SIZE
   * Goal 156. Weak Mutation 152: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceVariable bitlen -> MIME_CHUNK_SIZE
   * Goal 157. Weak Mutation 153: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceVariable bitlen -> EOF
   * Goal 158. Weak Mutation 154: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceVariable bitlen -> MASK_8BITS
   * Goal 159. Weak Mutation 155: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - InsertUnaryOp Negation of bitlen
   * Goal 160. Weak Mutation 156: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - InsertUnaryOp IINC 1 bitlen
   * Goal 161. Weak Mutation 157: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - InsertUnaryOp IINC -1 bitlen
   * Goal 162. Weak Mutation 158: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 7 -> 0
   * Goal 163. Weak Mutation 159: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 7 -> 1
   * Goal 164. Weak Mutation 160: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 7 -> -1
   * Goal 165. Weak Mutation 161: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 7 -> 6
   * Goal 166. Weak Mutation 162: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 7 -> 8
   * Goal 167. Weak Mutation 163: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceArithmeticOperator + -> %
   * Goal 168. Weak Mutation 164: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceArithmeticOperator + -> -
   * Goal 169. Weak Mutation 165: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceArithmeticOperator + -> *
   * Goal 170. Weak Mutation 166: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceArithmeticOperator + -> /
   * Goal 171. Weak Mutation 167: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 0
   * Goal 172. Weak Mutation 168: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 1
   * Goal 173. Weak Mutation 169: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> -1
   * Goal 174. Weak Mutation 170: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 2
   * Goal 175. Weak Mutation 171: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 4
   * Goal 176. Weak Mutation 172: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceBitwiseOperator >> I -> << I
   * Goal 177. Weak Mutation 174: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 0
   * Goal 178. Weak Mutation 175: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 1
   * Goal 179. Weak Mutation 176: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> -1
   * Goal 180. Weak Mutation 177: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 2
   * Goal 181. Weak Mutation 178: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceConstant - 3 -> 4
   * Goal 182. Weak Mutation 179: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceBitwiseOperator << I -> >> I
   * Goal 183. Weak Mutation 180: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:393 - ReplaceBitwiseOperator << I -> >>> I
   * Goal 184. Weak Mutation 181: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 0
   * Goal 185. Weak Mutation 182: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 1
   * Goal 186. Weak Mutation 183: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> -1
   * Goal 187. Weak Mutation 184: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 7
   * Goal 188. Weak Mutation 185: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 9
   * Goal 189. Weak Mutation 186: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator % -> +
   * Goal 190. Weak Mutation 187: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator % -> -
   * Goal 191. Weak Mutation 188: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator % -> *
   * Goal 192. Weak Mutation 189: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator % -> /
   * Goal 193. Weak Mutation 191: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceComparisonOperator == -> >=
   * Goal 194. Weak Mutation 193: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 0
   * Goal 195. Weak Mutation 194: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 1
   * Goal 196. Weak Mutation 195: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> -1
   * Goal 197. Weak Mutation 196: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 7
   * Goal 198. Weak Mutation 197: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 9
   * Goal 199. Weak Mutation 198: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator / -> +
   * Goal 200. Weak Mutation 199: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator / -> %
   * Goal 201. Weak Mutation 200: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator / -> -
   * Goal 202. Weak Mutation 201: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator / -> *
   * Goal 203. Weak Mutation 202: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 1 -> 0
   * Goal 204. Weak Mutation 203: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator + -> %
   * Goal 205. Weak Mutation 204: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator + -> -
   * Goal 206. Weak Mutation 205: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator + -> *
   * Goal 207. Weak Mutation 206: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator + -> /
   * Goal 208. Weak Mutation 207: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceVariable bitlen -> PEM_CHUNK_SIZE
   * Goal 209. Weak Mutation 208: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceVariable bitlen -> MIME_CHUNK_SIZE
   * Goal 210. Weak Mutation 209: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceVariable bitlen -> EOF
   * Goal 211. Weak Mutation 210: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceVariable bitlen -> MASK_8BITS
   * Goal 212. Weak Mutation 211: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - InsertUnaryOp Negation of bitlen
   * Goal 213. Weak Mutation 212: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - InsertUnaryOp IINC 1 bitlen
   * Goal 214. Weak Mutation 213: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - InsertUnaryOp IINC -1 bitlen
   * Goal 215. Weak Mutation 214: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 0
   * Goal 216. Weak Mutation 215: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 1
   * Goal 217. Weak Mutation 216: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> -1
   * Goal 218. Weak Mutation 217: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 7
   * Goal 219. Weak Mutation 218: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceConstant - 8 -> 9
   * Goal 220. Weak Mutation 219: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator / -> +
   * Goal 221. Weak Mutation 220: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator / -> %
   * Goal 222. Weak Mutation 221: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator / -> -
   * Goal 223. Weak Mutation 222: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceArithmeticOperator / -> *
   * Goal 224. Weak Mutation 223: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:396 - ReplaceComparisonOperator != -> -1
   * Goal 225. Weak Mutation 226: org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B:397 - ReplaceVariable bigBytes -> CHUNK_SEPARATOR
   * Goal 226. Weak Mutation 330: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:422 - ReplaceVariable DECODE_TABLE -> CHUNK_SEPARATOR
   * Goal 227. Weak Mutation 331: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceVariable lineSeparator -> CHUNK_SEPARATOR
   * Goal 228. Weak Mutation 332: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:591 - ReplaceComparisonOperator = null -> != null
   * Goal 229. Weak Mutation 333: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceVariable lineSeparator -> CHUNK_SEPARATOR
   * Goal 230. Weak Mutation 334: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:592 - ReplaceComparisonOperator == -> !=
   * Goal 231. Weak Mutation 335: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:593 - ReplaceVariable lineSeparator -> CHUNK_SEPARATOR
   * Goal 232. Weak Mutation 336: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:594 - ReplaceConstant - lineSeparator must not contain base64 characters: [ -> 
   * Goal 233. Weak Mutation 337: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:594 - ReplaceConstant - ] -> 
   * Goal 234. Weak Mutation 338: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> PEM_CHUNK_SIZE
   * Goal 235. Weak Mutation 339: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MIME_CHUNK_SIZE
   * Goal 236. Weak Mutation 341: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> EOF
   * Goal 237. Weak Mutation 342: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceVariable lineLength -> MASK_8BITS
   * Goal 238. Weak Mutation 343: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp Negation of lineLength
   * Goal 239. Weak Mutation 344: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC 1 lineLength
   * Goal 240. Weak Mutation 345: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - InsertUnaryOp IINC -1 lineLength
   * Goal 241. Weak Mutation 348: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:596 - ReplaceComparisonOperator <= -> <
   * Goal 242. Weak Mutation 365: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 0
   * Goal 243. Weak Mutation 366: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 1
   * Goal 244. Weak Mutation 367: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> -1
   * Goal 245. Weak Mutation 368: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 3
   * Goal 246. Weak Mutation 369: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:601 - ReplaceConstant - 4 -> 5
   * Goal 247. Weak Mutation 375: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 248. Weak Mutation 376: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 249. Weak Mutation 377: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> lineLength
   * Goal 250. Weak Mutation 378: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> EOF
   * Goal 251. Weak Mutation 379: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 252. Weak Mutation 380: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp Negation
   * Goal 253. Weak Mutation 381: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp +1
   * Goal 254. Weak Mutation 382: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - InsertUnaryOp -1
   * Goal 255. Weak Mutation 383: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceConstant - 1 -> 0
   * Goal 256. Weak Mutation 384: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> +
   * Goal 257. Weak Mutation 385: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> %
   * Goal 258. Weak Mutation 386: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> *
   * Goal 259. Weak Mutation 387: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:608 - ReplaceArithmeticOperator - -> /
   * Goal 260. Weak Mutation 388: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp Negation of urlSafe
   * Goal 261. Weak Mutation 389: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC 1 urlSafe
   * Goal 262. Weak Mutation 390: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - InsertUnaryOp IINC -1 urlSafe
   * Goal 263. Weak Mutation 391: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceComparisonOperator == -> !=
   * Goal 264. Weak Mutation 393: org.apache.commons.codec.binary.Base64.<init>(I[BZLorg/apache/commons/codec/CodecPolicy;)V:609 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 265. Weak Mutation 583: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:722 - InsertUnaryOp Negation
   * Goal 266. Weak Mutation 584: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:722 - ReplaceComparisonOperator == -> !=
   * Goal 267. Weak Mutation 585: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> PEM_CHUNK_SIZE
   * Goal 268. Weak Mutation 586: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> MIME_CHUNK_SIZE
   * Goal 269. Weak Mutation 587: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> inPos
   * Goal 270. Weak Mutation 588: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> lineLength
   * Goal 271. Weak Mutation 589: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> EOF
   * Goal 272. Weak Mutation 590: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceVariable inAvail -> MASK_8BITS
   * Goal 273. Weak Mutation 591: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp Negation of inAvail
   * Goal 274. Weak Mutation 592: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp IINC 1 inAvail
   * Goal 275. Weak Mutation 593: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - InsertUnaryOp IINC -1 inAvail
   * Goal 276. Weak Mutation 594: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceComparisonOperator >= -> -1
   * Goal 277. Weak Mutation 595: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:727 - ReplaceComparisonOperator >= -> ==
   * Goal 278. Weak Mutation 597: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:728 - ReplaceConstant - 1 -> 0
   * Goal 279. Weak Mutation 598: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceConstant - 0 -> 1
   * Goal 280. Weak Mutation 599: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp Negation
   * Goal 281. Weak Mutation 600: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp +1
   * Goal 282. Weak Mutation 601: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - InsertUnaryOp -1
   * Goal 283. Weak Mutation 604: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:729 - ReplaceComparisonOperator != -> >
   * Goal 284. Weak Mutation 615: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> PEM_CHUNK_SIZE
   * Goal 285. Weak Mutation 616: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> MIME_CHUNK_SIZE
   * Goal 286. Weak Mutation 617: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> lineLength
   * Goal 287. Weak Mutation 618: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> EOF
   * Goal 288. Weak Mutation 619: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - ReplaceVariable encodeSize -> MASK_8BITS
   * Goal 289. Weak Mutation 620: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - InsertUnaryOp Negation
   * Goal 290. Weak Mutation 621: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - InsertUnaryOp +1
   * Goal 291. Weak Mutation 622: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:732 - InsertUnaryOp -1
   * Goal 292. Weak Mutation 623: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:733 - InsertUnaryOp Negation
   * Goal 293. Weak Mutation 624: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:733 - InsertUnaryOp +1
   * Goal 294. Weak Mutation 625: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:733 - InsertUnaryOp -1
   * Goal 295. Weak Mutation 626: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:734 - InsertUnaryOp Negation
   * Goal 296. Weak Mutation 627: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:734 - InsertUnaryOp +1
   * Goal 297. Weak Mutation 628: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:734 - InsertUnaryOp -1
   * Goal 298. Weak Mutation 629: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceVariable buffer -> in
   * Goal 299. Weak Mutation 630: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceVariable buffer -> CHUNK_SEPARATOR
   * Goal 300. Weak Mutation 631: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp Negation
   * Goal 301. Weak Mutation 632: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp +1
   * Goal 302. Weak Mutation 633: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp -1
   * Goal 303. Weak Mutation 634: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 1 -> 0
   * Goal 304. Weak Mutation 635: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceArithmeticOperator + -> %
   * Goal 305. Weak Mutation 636: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceArithmeticOperator + -> -
   * Goal 306. Weak Mutation 637: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceArithmeticOperator + -> *
   * Goal 307. Weak Mutation 638: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceArithmeticOperator + -> /
   * Goal 308. Weak Mutation 639: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceVariable encodeTable -> CHUNK_SEPARATOR
   * Goal 309. Weak Mutation 640: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp Negation
   * Goal 310. Weak Mutation 641: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp +1
   * Goal 311. Weak Mutation 642: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - InsertUnaryOp -1
   * Goal 312. Weak Mutation 643: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 2 -> 0
   * Goal 313. Weak Mutation 644: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 2 -> 1
   * Goal 314. Weak Mutation 645: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 2 -> -1
   * Goal 315. Weak Mutation 646: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 2 -> 3
   * Goal 316. Weak Mutation 647: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceBitwiseOperator >> I -> << I
   * Goal 317. Weak Mutation 649: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 63 -> 0
   * Goal 318. Weak Mutation 650: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 63 -> 1
   * Goal 319. Weak Mutation 651: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 63 -> -1
   * Goal 320. Weak Mutation 652: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 63 -> 62
   * Goal 321. Weak Mutation 653: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceConstant - 63 -> 64
   * Goal 322. Weak Mutation 654: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceBitwiseOperator & -> |
   * Goal 323. Weak Mutation 655: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:739 - ReplaceBitwiseOperator & -> ^
   * Goal 324. Weak Mutation 656: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceVariable buffer -> in
   * Goal 325. Weak Mutation 657: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceVariable buffer -> CHUNK_SEPARATOR
   * Goal 326. Weak Mutation 658: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp Negation
   * Goal 327. Weak Mutation 659: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp +1
   * Goal 328. Weak Mutation 660: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp -1
   * Goal 329. Weak Mutation 661: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 1 -> 0
   * Goal 330. Weak Mutation 662: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceArithmeticOperator + -> %
   * Goal 331. Weak Mutation 663: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceArithmeticOperator + -> -
   * Goal 332. Weak Mutation 664: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceArithmeticOperator + -> *
   * Goal 333. Weak Mutation 665: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceArithmeticOperator + -> /
   * Goal 334. Weak Mutation 666: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceVariable encodeTable -> CHUNK_SEPARATOR
   * Goal 335. Weak Mutation 667: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp Negation
   * Goal 336. Weak Mutation 668: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp +1
   * Goal 337. Weak Mutation 669: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - InsertUnaryOp -1
   * Goal 338. Weak Mutation 670: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 4 -> 0
   * Goal 339. Weak Mutation 671: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 4 -> 1
   * Goal 340. Weak Mutation 672: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 4 -> -1
   * Goal 341. Weak Mutation 673: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 4 -> 3
   * Goal 342. Weak Mutation 674: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 4 -> 5
   * Goal 343. Weak Mutation 675: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceBitwiseOperator << I -> >> I
   * Goal 344. Weak Mutation 676: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceBitwiseOperator << I -> >>> I
   * Goal 345. Weak Mutation 677: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 63 -> 0
   * Goal 346. Weak Mutation 678: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 63 -> 1
   * Goal 347. Weak Mutation 679: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 63 -> -1
   * Goal 348. Weak Mutation 680: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 63 -> 62
   * Goal 349. Weak Mutation 681: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceConstant - 63 -> 64
   * Goal 350. Weak Mutation 682: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceBitwiseOperator & -> |
   * Goal 351. Weak Mutation 683: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:741 - ReplaceBitwiseOperator & -> ^
   * Goal 352. Weak Mutation 684: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:743 - ReplaceVariable encodeTable -> CHUNK_SEPARATOR
   * Goal 353. Weak Mutation 685: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:743 - ReplaceVariable STANDARD_ENCODE_TABLE -> CHUNK_SEPARATOR
   * Goal 354. Weak Mutation 686: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:743 - ReplaceComparisonOperator != -> ==
   * Goal 355. Weak Mutation 687: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - ReplaceVariable buffer -> in
   * Goal 356. Weak Mutation 688: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - ReplaceVariable buffer -> CHUNK_SEPARATOR
   * Goal 357. Weak Mutation 689: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - InsertUnaryOp Negation
   * Goal 358. Weak Mutation 690: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - InsertUnaryOp +1
   * Goal 359. Weak Mutation 691: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - InsertUnaryOp -1
   * Goal 360. Weak Mutation 692: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - ReplaceConstant - 1 -> 0
   * Goal 361. Weak Mutation 693: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - ReplaceArithmeticOperator + -> %
   * Goal 362. Weak Mutation 694: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - ReplaceArithmeticOperator + -> -
   * Goal 363. Weak Mutation 695: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - ReplaceArithmeticOperator + -> *
   * Goal 364. Weak Mutation 696: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - ReplaceArithmeticOperator + -> /
   * Goal 365. Weak Mutation 699: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:744 - InsertUnaryOp Negation
   * Goal 366. Weak Mutation 700: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:745 - ReplaceVariable buffer -> in
   * Goal 367. Weak Mutation 701: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:745 - ReplaceVariable buffer -> CHUNK_SEPARATOR
   * Goal 368. Weak Mutation 702: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:745 - InsertUnaryOp Negation
   * Goal 369. Weak Mutation 703: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:745 - InsertUnaryOp +1
   * Goal 370. Weak Mutation 704: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:745 - InsertUnaryOp -1
   * Goal 371. Weak Mutation 705: org.apache.commons.codec.binary.Base64.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V:745 - ReplaceConstant - 1 -> 0
   * Goal 372. Weak Mutation 706: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 373. Weak Mutation 707: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 374. Weak Mutation 708: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 375. Weak Mutation 709: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 376. Weak Mutation 710: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 377. Weak Mutation 711: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 378. Weak Mutation 713: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator < -> !=
   * Goal 379. Weak Mutation 715: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 380. Weak Mutation 716: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 381. Weak Mutation 717: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 382. Weak Mutation 718: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 383. Weak Mutation 719: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 384. Weak Mutation 720: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 385. Weak Mutation 721: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 386. Weak Mutation 722: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator >= -> -1
   * Goal 387. Weak Mutation 725: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable decodeTable -> CHUNK_SEPARATOR
   * Goal 388. Weak Mutation 726: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD
   * Goal 389. Weak Mutation 727: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> pad
   * Goal 390. Weak Mutation 728: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceVariable octet -> PAD_DEFAULT
   * Goal 391. Weak Mutation 729: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp Negation of octet
   * Goal 392. Weak Mutation 730: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC 1 octet
   * Goal 393. Weak Mutation 731: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - InsertUnaryOp IINC -1 octet
   * Goal 394. Weak Mutation 732: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 0
   * Goal 395. Weak Mutation 733: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> 1
   * Goal 396. Weak Mutation 734: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - -1 -> -2
   * Goal 397. Weak Mutation 735: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> -2
   * Goal 398. Weak Mutation 736: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceComparisonOperator == -> >=
   * Goal 399. Weak Mutation 738: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 1 -> 0
   * Goal 400. Weak Mutation 739: org.apache.commons.codec.binary.Base64.isInAlphabet(B)Z:801 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      // Undeclared exception!
      try { 
        Base64.encodeInteger(bigInteger0);
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // lineSeparator must not contain base64 characters: [\uFFFDg]
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }
}
